.\" {PTM/PB/0.1/01-06-1999/"superserwer internetu"}
.\" Translation (c) 1999 Przemek Borys <pborys@dione.ids.pl>
.\" Copyright (c) 1985, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)inetd.8	6.7 (Berkeley) 3/16/91
.\"	$Id: inetd.8,v 1.4 2005/10/16 22:33:28 robert Exp $
.\"
.Dd 16 Marzec, 1991
.Dt INETD 8
.Os BSD 4.3
.Sh NAZWA
.Nm inetd
.Nd "super-serwer" internetu
.Sh SKŁADNIA
.Nm inetd
.Op Fl d
.Op Ar plik konfiguracyjny
.Sh OPIS
\fI Uwaga! To tłumaczenie może być nieaktualne!\fP
.Pp
.Nm Inetd
powinien być wywoływany podczas startu systemu z 
.Pa /etc/rc.local
(zobacz
.Xr rc 8 ) .
Nasłuchuje on później połączeń na określonych gniazdach internetowych. Gdy
na jednym z gniazd zaistnieje połączenie, decyduje on, jakiej usłudze to
gniazdo odpowiada i wywołuje program, który obsłuży żądanie.
Po zakończeniu programu, inetd kontynuuje nasłuchiwania gniazda (poza
niektórymi wypadkami, opisanymi poniżej). Ogólnie,
.Nm inetd
umożliwia używanie jednego daemona do wywoływania wielu innych, zmniejszając
wymagane obciążenie systemu.
.Pp
Opcje dostępne dla
.Nm inetd:
.Bl -tag -width Ds
.It Fl d
Włącza debuggowanie.
.El
.Pp
Podczas uruchamiania,
.Nm inetd
odczytuje swoją konfigurację z pliku konfiguracyjnego, którym domyślnie jest
.Pa /etc/inetd.conf .
Musi tam być wpis dla każdego pola pliku konfiguracyjnego, z poszczególnymi
wpisami dla danego pola; wpisy są oddzielane znakiem tabulacji lub spacji.
Komentarze są zaznaczane przez ``#'' na początku linii. Musi istnieć wpis dla
każdego pola. Pola pliku konfiguracyjnego są następujące:
.Pp
.Bd -unfilled -offset indent -compact
nazwa usługi (service name)
rodzaj gniazda (socket type)
protokół (protocol)
określenie, czy usługa ma "zwlekać" (wait/nowait[.max])
użytkownik[.grupa] (user[.group])
program serwera (server program)
argumenty programu serwera (server program arguments)
.Ed
.Pp
Aby podać usługę opartą o
.Em Sun-RPC 
, wpis powinien zawierać te pola.
.Pp
.Bd -unfilled -offset indent -compact
nazwa usługi/wersja (service name/version)
rodzaj gniazda (socket type)
rpc/protokół (rpc/protocol)
zwłoka (wait/nowait[.max])
użytkownik[.grupa] (user[.group])
program serwera (server program)
argumenty programu serwera (server program arguments)
.Ed
.Pp
Wpis
.Em nazwa-usługi
jest nazwą prawidłowej usługi, zdefiniowanej w pliku
.Pa /etc/services .
Dla usług
.Dq wewnętrznych
(internal) (opisanych niżej), nazwa usługi musi być oficjalną nazwą usługi
(to znaczy pierwszym wpisem w
.Pa /etc/services ) . 
Podczas podawania usługi opartej o 
.Em Sun-RPC
, pole to jest prawidłową nazwą usługi RPC, zdefiniowaną w pliku
.Pa /etc/rpc . 
Część na prawo od
.Dq /
jest numerem wersji RPC. Może to być zwyczajny argument numeryczny, lub
zakres wersji. Zakres jest obramowany od niższej wersji do wyższej -
.Dq rusers/1-3 .
.
.Pp
Wpis
.Em rodzaj gniazda
powinien być jednym z
.Dq stream ,
.Dq dgram ,
.Dq raw ,
.Dq rdm ,
lub
.Dq seqpacket ,
zależnie od tego, czy gniazdo jest strumieniowe (stream), datagramowe
(datagram), lub typu raw, reliably delivered message, czy też sequenced packet.
.Pp
Pole
.Em protokół
musi być prawidłowym protokołem, zdefiniowanym w
.Pa /etc/protocols .
Przykładami mogą być
.Dq tcp
lub
.Dq udp .
Usługi oparte o RPC są określane przez
.Dq rpc/tcp
lub
.Dq rpc/udp.
.
.Pp
Wpis
.Em zwłoka
jest używany tylko dla gniazd datagramowych (inne gniazda powinny mieć wpis
.Dq nowait
).  Jeśli serwer datagramowy łączy się ze swoim rozmówcą, zwalniając
gniazdo w ten sposób, że
.Nm inetd
może odbierać dalsze wiadomości z tego gniazda, to mówi się o nim jako o
serwerze
.Dq wielowątkowym
(multi-threaded) i powinno się używać wpisu
.Dq nowait
Serwery datagramowe, które przetwarzają wszystkie nadchodzące do
gniazda datagramy, ewentualnie mające timeouty, nazywa się
.Dq jednowątkowymi
(single threaded) i powinno używać się dla nich wpisu
.Dq wait.
.Xr Comsat 8
.Pq Xr biff 1
i
.Xr talkd 8
są przykładami tego drugiego rodzaju serwerów datagramowych.
.Xr Tftpd 8
jest wyjątkiem; jest to serwer datagramowy, który zestawia pseudopołączenia.
Musi być zdefiniowany jako
.Dq wait
aby zapobiec wyścigowi; serwer odczytuje pierwszy pakiet, tworzy nowe
gniazdo, następnie forkuje i wychodzi, aby
.Nm inetd
mógł robić swoje i oczekiwać na nowe żądania usług, które (jak zwykle)
przyłącza następnie do odpowiednich innych serwerów.
Opcjonalny przyrostek
.Dq max
(oddzielony od
.Dq wait
lub
.Dq nowait
kropką) określa maksymalną liczbę instancji serwera, jakie mogą zostać
postawione przez
.Nm inetd
w czasie 60 sekund. Gdy zostanie to pominięte,
.Dq max
przyjmuje wartość 40.
.Pp
Wpis
.Em użytkownik
powinien zawierać nazwę użytkownika użytkownika, pod którym powinien uruchamiać
się serwer. Umożliwia to serwerom posiadanie mniejszych praw niż prawa
roota. Opcjonalnie, po dodaniu kropki do nazwy użytkownika, można podać w
tym polu nazwę grupy. Umożliwia to serwerom pracę w innym (podstawowym) id
grupy niż ten, podany w pliku z hasłami. Jeśli grupa jest podana, a
użytkownik nie jest rootem, to uzupełniające grupy związane z użytkownikiem
wciąż będą ustawione.
.Pp
Wpis
.Em program serwera
powinien zawierać ścieżkę programu, który ma być wywoływany przez
.Nm inetd
po otrzymaniu żądania na gnieździe. Jeśli
.Nm inetd
udostępnia tę usługę wewnętrznie, to wpis ten powinien być wpisem
.Dq internal .
.Pp
Wpis
.Em argumenty programu serwera
powinien wyglądać tak jak zwykłe argumenty, poczynając od argv[0], który
jest nazwą programu. Jeśli usługa jest udostępniana wewnętrznie, to wpis
powinien przyjąć nazwę
.Dq internal.
.Pp
.Nm Inetd
udostępnia wiele
.Dq trywialnych
usług wewnętrznie, używając do tego swoich własnych procedur. Tymi usługami są
.Dq echo ,
.Dq discard ,
.Dq chargen
(generator znaków),
.Dq daytime
(odczytywalny przez człowieka czas) oraz
.Dq time
(czas odczytywalny przez maszynę, liczba sekund od północy 1 stycznia 1900).
Wszystkie te usługi są oparte o tcp. Dla dalszych szczegółów o tych
usługach, skonsultuj się z odpowiednim
.Tn RFC
z Centrum Informacji Sieci (Network Information Center).
.Pp
.Nm Inetd
odczytuje swój plik konfiguracyjny od nowa gdy otrzyma sygnał zawieszenia
(hangup), czyli
.Dv SIGHUP .
Usługi mogą być tak dodawane, kasowane lub modyfikowane.
.Nm Inetd
tworzy plik
.Em /etc/inetd.pid
który zawiera jego identyfikator procesu (PID).
.Sh ZOBACZ TAKŻE
.Xr comsat 8 ,
.Xr fingerd 8 ,
.Xr ftpd 8 ,
.Xr rexecd 8 ,
.Xr rlogind 8 ,
.Xr rshd 8 ,
.Xr telnetd 8 ,
.Xr tftpd 8
.Sh HISTORIA
Komenda
.Nm
pojawiła się w
.Bx 4.3 .
Wsparcie dla usług opartych o
.Em Sun-RPC 
zostało zmodelowane wg udostępnionego przez
.Em Sun-OS 4.1 .
.Sh "INFORMACJE O TŁUMACZENIU"
Powyższe tłumaczenie pochodzi z nieistniejącego już Projektu Tłumaczenia Manuali i 
\fImoże nie być aktualne\fR. W razie zauważenia różnic między powyższym opisem
a rzeczywistym zachowaniem opisywanego programu lub funkcji, prosimy o zapoznanie 
się z oryginalną (angielską) wersją strony podręcznika za pomocą polecenia:
.br
man \-\-locale=C 8 inetd
.Pp
Prosimy o pomoc w aktualizacji stron man \- więcej informacji można znaleźć pod
adresem http://sourceforge.net/projects/manpages\-pl/.
