%& -translate-file=il2-pl
\def\fontprefix{pl}
\input texinfo  @c -*-texinfo-*-
@c %**start of header
@setfilename dc.info
@settitle dc, kalkulator dowolnej precyzji
@documentencoding ISO-8859-2
@documentlanguage pl
@c %**end of header

@c This file has the new style title page commands.
@c Run `makeinfo' rather than `texinfo-format-buffer'.

@c smallbook

@c tex
@c \overfullrule=0pt
@c end tex

@c Combine indices.
@synindex cp fn
@syncodeindex vr fn
@syncodeindex ky fn
@syncodeindex pg fn
@syncodeindex tp fn

@ifinfo
@direntry
* dc: (dc).                   Kalkulator dowolnej precyzji RPN.
@end direntry
Niniejszy plik opisuje @sc{dc}, kalkulator dowolnej precyzji.

Published by the Free Software Foundation, Inc.
59 Temple Place, Suite 330
Boston, MA 02111 USA

Copyright (C) 1984, 1994, 1997, 1998, 2000 Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Foundation.
@end ifinfo

@setchapternewpage off

@titlepage
@title dc, kalkulator dowolnej precyzji

@author Ken Pizzini
@author pierwotny podrêcznik autorstwa Richarda Stallmana
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1994, 1997, 1998 Free Software Foundation, Inc.

@sp 2
Published by the Free Software Foundation, @*
59 Temple Place, Suite 330 @*
Boston, MA 02111 USA

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Foundation.

@end titlepage
@page

@node Top, Od t³umacza, (dir), (dir)

@menu
* Wprowadzenie::                Wprowadzenie
* Od t³umacza::                 Parê s³ów od t³umacza
* Wywo³anie::                   Wywo³anie dc
* Polecenia wypisywania::       Polecenia wypisywania
* Artymetyka::                  Artymetyka
* Kontrola stosu::              Kontrolowanie stosu
* Rejestry::                    Rejestry
* Parametry::                   Parametry
* £añcuchy::                    £añcuchy znakowe
* Informacja o stanie::         Informacja o stanie
* Ró¿ne::                       Inne polecenia
* Zg³aszanie b³êdów::           Zg³aszanie b³êdów
@end menu

@node Od t³umacza, Wprowadzenie, Top, Top
@comment  node-name,  next,  previous,  up
@unnumbered Od t³umacza
Niniejszy przek³ad powsta³ w ramach Projektu T³umaczenia Manuali
(@uref{http://ptm.linux.pl/, http://ptm.linux.pl/}).  Zg³oszenia b³êdów,
komentarze i sugestie proszê przesy³aæ na listê dyskusyjn± Projektu:
@email{ptm@@amg.net.pl} lub ewentualnie do autora t³umaczenia.

W.Kotwica (@email{wkotwica@@post.pl})

@unnumberedsec Rozpowszechnianie
To jest nieoficjalne t³umaczenie warunków rozpowszechniania na jêzyk polski.
Nie zosta³o ono opublikowane przez Free Software Foundation
i pod wzglêdem prawnym nie stanowi warunków rozpowszechniania -- ustanawia
je wy³±cznie oryginalny tekst angielski.  Jednak t³umacz ma nadziejê, ¿e
pomo¿e ono lepiej zrozumieæ warunki rozpowszechniania osobom mówi±cym
po polsku.

This is an unofficial translation of the distribution terms into
Polish language. It was not published by the Free Software Foundation, and
does not legally state the distribution terms--only the original English text
does that. However, the translator hopes that it will help Polish language
speakers understand distribution terms better.

Zezwala siê na tworzenie i rozpowszechnianie wiernych kopii
tego podrêcznika, pod warunkiem, ¿e na wszystkich kopiach zostanie zachowana
informacja o prawach autorskich i niniejsze zezwolenie.

Zezwala siê na kopiowanie i rozpowszechnianie zmienionych wersji
tego podrêcznika na warunkach jak dla wiernych kopii, pod warunkiem, ¿e
ca³a praca pochodna bêdzie rozpowszechniana na warunkach zezwolenia
identycznego jak niniejsze.

Zezwala siê na kopiowanie i rozpowszechnianie t³umaczeñ tego
podrêcznika na inny jêzyk, pod wy¿ej podanymi warunkami dla zmienionych
wersji, z wyj±tkiem tego, ¿e niniejsze zezwolenie mo¿e byæ ustanowione
w t³umaczeniu zaakceptowanym przez Fundacjê.

@node Wprowadzenie, Wywo³anie, Od t³umacza, Top
@chapter Wprowadzenie

@sc{dc} jest kalkulatorem pracuj±cym w odwrotnej notacji polskiej,
obs³uguj±cym arytmetykê nieograniczonej precyzji.
Pozwala równie¿ na definiowanie i wywo³ywanie makr.
Zwykle @sc{dc} czyta ze standardowego wej¶cia. Je¶li u¿yto argumentów
polecenia @sc{dc}, to s± one traktowane jak nazwy plików. Zawarto¶æ tych
plików jest odczytywana i wykonywana przez @sc{dc} zamiast czytania
standardowego wej¶cia.
Wszystkie zwyk³e wyniki kierowane s± na standardowe wyj¶cie; wszystkie
komunikaty o b³êdach kierowane s± na standardowe wyj¶cie b³êdów.

Koniec dzia³ania programu uzyskujemy za pomoc± @samp{q}.
@kbd{C-c} nie powoduje zakoñczenia pracy;
jest wykorzystywane do przerwania zapêtlonych makr itp. celów
(Obecnie nie jest to ju¿ prawd±: @kbd{C-c} powoduje zakoñczenie
dzia³ania.)

Kalkulator odwrotnej notacji polskiej przechowuje liczby na stosie.
Wprowadzenie liczby odk³ada j± na stos.
Operacje arytmetyczne pobieraj± argumenty ze stosu i odk³adaj± na nim wyniki.

W celu wprowadzenia liczby do @sc{dc} wpisujemy cyfry z opcjonaln±
kropk± dziesiêtn±. Nie jest rozpoznawana notacja wyk³adnicza.
Liczbê ujemn± poprzedzamy znakiem podkre¶lenia @samp{_}. Nie mo¿na pos³u¿yæ
siê w tym celu znakiem @samp{-} (minus), gdy¿ jest to dwuargumentowy
operator odejmowania.  Dwie kolejne liczby wprowadzamy oddzielaj±c je
spacjami lub znakami nowej linii.  Nie maj± one znaczenia jako polecenia.

@node Wywo³anie, Polecenia wypisywania, Wprowadzenie, Top
@chapter Wywo³anie @sc{dc}

@sc{dc} mo¿na wywo³ywaæ z nastêpuj±cymi opcjami wiersza poleceñ:
@table @samp

@item -e @var{wyra¿}
@item --expression=@var{wyra¿}
Wykonuje @var{wyra¿} jako polecenia @sc{dc}.

@item -f @var{plik}
@item --file=@var{plik}
Czyta i wykonuje polecenia @sc{dc} z @var{pliku}.

@item -h
@item --help
Wypisuje komunikat o sposobie wywo³ania, podaj±c w skrócie opcje wiersza
poleceñ, a nastêpnie koñczy dzia³anie.

@item -V
@item --version
Wypisuje informacjê o wersji tego programu, a nastêpnie koñczy dzia³anie.
@end table

Je¿eli po przetworzeniu powy¿szych opcji pozostan± jeszcze jakie¶ parametry
wiersza poleceñ, to s± one interpretowane jako nazwy @var{plików}
wej¶ciowych, które nale¿y wykonaæ.  Nazwa @code{-} odnosi siê do
standardowego strumienia wej¶ciowego.  Je¶li nie podano ani opcji
@code{-e} ani ¿adnych plików, to polecenia do wykonania bêd± czytane ze
standardowego wej¶cia.

@node Polecenia wypisywania, Artymetyka, Wywo³anie, Top
@chapter Polecenia wypisywania

@table @samp
@item p
Wypisuje warto¶æ z wierzcho³ka stosu, bez jego zmiany. Po warto¶ci wypisywany
jest znak nowej linii.

@item n
Wypisuje warto¶æ z wierzcho³ka stosu, zdejmuj±c j± równocze¶nie ze stosu.
Nie wypisuje po niej znaku nowej linii.
(To polecenie jest rozszerzeniem GNU.)

@item P
Zdejmuje warto¶æ z wierzcho³ka stosu.
Je¶li jest to ³añcuch, to jest on po prostu wypisywany bez koñcowego znaku
nowej linii. W przeciwnym razie jest to liczba, a czê¶æ ca³kowita jej
warto¶ci bezwzglêdnej wypisywana jest jako strumieñ bajtów "o podstawie
(UCHAR_MAX+1)". Zak³adaj±c, ¿e (UCHAR_MAX+1) wynosi 256 (jak to jest
w wiêkszo¶ci maszyn o 8-bitowych bajtach), funkcjê tê realizuje tak¿e
sekwencja @code{KSK 0k1/ [_1*]sx d0>x [256~aPd0<x]dsxx sxLKk}, z wyj±tkiem
skutku ubocznego, jakim jest nadpisanie warto¶ci z rejestru @var{x}.
(Szczegó³y zachowania siê przy liczbach s± rozszerzeniem GNU.)

@item f
Wypisuje ca³± zawarto¶æ stosu
@c i zawarto¶æ wszystkich rejestrów,
nie zmieniaj±c niczego.
Jest polecenie przydatne w sytuacji, gdy siê pogubili¶my lub chcemy siê
zorientowaæ, jaki by³ efekt pewnych poleceñ.
@end table

@node Artymetyka, Kontrola stosu, Polecenia wypisywania, Top
@chapter Artymetyka

@table @samp
@item +
Zdejmuje ze stosu dwie warto¶ci, dodaje je i odk³ada wynik na stos.
Dok³adno¶æ wyniku zale¿y wy³±cznie od warto¶ci argumentów i jest
wystarczaj±co ¶cis³a.

@item -
Zdejmuje ze stosu dwie warto¶ci, odejmuje pierwsz± zdjêt± od drugiej
i sk³ada wynik ponownie na stos.

@item *
Zdejmuje ze stosu dwie warto¶ci, mno¿y je i odk³ada wynik na stos.
Liczba cyfr u³amkowych wyniku jest najwiêksz± spo¶ród: aktualnej
warto¶ci dok³adno¶ci (patrz ni¿ej) oraz liczby cyfr u³amkowych mno¿nej
i mno¿nika.  Nigdy jednak nie przekracza liczby cyfr niezbêdnej w dok³adnym
wyniku.

@item /
Zdejmuje ze stosu dwie warto¶ci, dzieli drug± zdjêt± przez pierwsz±
i odk³ada wynik ponownie na stos.
Liczba cyfr u³amkowych wyniku okre¶lana jest przez warto¶æ dok³adno¶ci.

@item %
Zdejmuje ze stosu dwie warto¶ci, oblicza resztê z dzielenia, jakie by³oby
wykonane przez @samp{/} i odk³ada wynik na stos.
Obliczona warto¶æ jest t± sam±, co otrzymana z sekwencji @code{Sd dld/ Ld*-}.

@item ~
Zdejmuje ze stosu dwie warto¶ci, dzieli drug± zdjêt± przez pierwsz±.
Odk³ada na stos iloraz, a nastêpnie resztê z dzielenia.
Dzielenie wykonywane jest z liczb± cyfr u³amkowych okre¶lon± warto¶ci±
dok³adno¶ci.
(Funkcjê tê mo¿e te¿ spe³niaæ sekwencja @code{SdSn lnld/ LnLd%}, z nieco
odmiennym sprawdzaniem b³êdów.)
(To polecenie jest rozszerzeniem GNU.)

@item ^
Zdejmuje ze stosu dwie warto¶ci i wykonuje potêgowanie, pos³uguj±c siê
pierwsz± zdjêt± jako wyk³adnikiem, za¶ drug± jako podstaw± potêgowania.
U³amkowa czê¶æ wyk³adnika jest ignorowana.
Warto¶æ dok³adno¶ci okre¶la liczbê cyfr u³amkowych wyniku.

@item |
Zdejmuje ze stosu trzy warto¶ci i oblicza potêgowanie modulo
[od t³um: modular exponentiation == @code{(a^b) mod c}].
.br
Pierwsza ze zdjêtych warto¶ci u¿ywana jest jako dzielnik operacji
(reduction modulus).
Warto¶æ ta musi byæ niezerowa i powinna byæ liczb± ca³kowit±.
Druga u¿ywana jest jako wyk³adnik i musi byæ liczb± nieujemn±,
a jej czê¶æ u³amkowa zostanie zignorowana.
Trzecia z pobranych ze stosu warto¶ci okre¶la podstawê potêgowania,
powinna ona byæ ca³kowita.
Dla ma³ych liczb jest to zbli¿one do sekwencji @code{Sm^Lm%}, ale,
w odró¿nieniu od @code{^}, polecenie to dzia³a z dowolnie du¿ymi wyk³adnikami.
(To polecenie jest rozszerzeniem GNU.)

@item v
Zdejmuje ze stosu pojedyncz± warto¶æ, oblicza jej pierwiastek kwadratowy
i odk³ada go na stos.
Warto¶æ dok³adno¶ci okre¶la liczbê cyfr u³amkowych wyniku.
@end table

Na wiêkszo¶æ operacji arytmetycznych wp³ywa @emph{warto¶æ dok³adno¶ci}, któr±
ustala siê za pomoc± polecenia @samp{k}.
Domy¶ln± warto¶ci± dok³adno¶ci jest zero, co oznacza, ¿e wszystkie dzia³ania
arytmetyczne z wyj±tkiem dodawania i odejmowania daj± wyniki ca³kowite.

@node Kontrola stosu, Rejestry, Artymetyka, Top
@chapter Kontrolowanie stosu

@table @samp
@item c
Czy¶ci stos, powoduje, ¿e bêdzie on pusty.

@item d
Powiela warto¶æ na wierzcho³ku stosu, odk³adaj±c na stos jej kopiê.
Zatem @samp{4d*p} oblicza 4 podniesione do kwadratu i wypisuje wynik.

@item r
Zamienia miejscami dwie górne warto¶ci na stosie.
(To polecenie jest rozszerzeniem GNU.)
@end table

@node Rejestry, Parametry, Kontrola stosu, Top
@chapter Rejestry

@sc{dc} udostêpnia co najmniej 256 rejestrów pamiêciowych, ka¿dy nazwany
pojedynczym znakiem. W rejestrze mo¿na przechowaæ liczbê lub ³añcuch znakowy
i pó¼niej je odtworzyæ.

@table @samp
@item s@var{r}
Zdejmuje warto¶æ z wierzcho³ka stosu i zapisuje w rejestrze @var{r}.

@item l@var{r}
Kopiuje warto¶æ zawart± w rejestrze @var{r} i odk³ada j± na stos.
Nie zmienia to zawarto¶ci @var{r}.

Ka¿dy z rejestrów posiada równie¿ swój w³asny stos. Bie¿±c± warto¶ci± rejestru
jest wierzcho³ek stosu rejestru.

@item S@var{r}
Zdejmuje warto¶æ z wierzcho³ka stosu (g³ównego) i odk³ada j± na stosie
rejestru @var{r}. Poprzednia warto¶æ rejestru staje siê niedostêpna.

@item L@var{r}
Zdejmuje warto¶æ z wierzcho³ka stosu rejestru @var{r} i odk³ada j±
na g³ównym stosie. Poprzednia warto¶æ stosu rejestru @var{r},
je¶li by³a takowa, jest teraz dostêpna poprzez polecenie @samp{l@var{r}}.
@end table
@c
@c Polecenie @samp{f} wypisuje listê wszystkich rejestrów zawieraj±cych
@c przechowywane warto¶ci, razem z tymi zawarto¶ciami. Wypisywana jest tylko
@c bie¿±ca zawarto¶æ ka¿dego z rejestrów (wierzcho³ek jego stosu).

@node Parametry, £añcuchy, Rejestry, Top
@chapter Parametry

@sc{dc} posiada trzy parametry kontroluj±ce jego pracê:
dok³adno¶æ, podstawê systemu pozycyjnego wej¶cia i podstawê wyj¶cia.
Dok³adno¶æ okre¶la liczbê cyfr dziesiêtnych, jaka bêdzie zachowana w wyniku
wiêkszo¶ci operacji arytmetycznych.
Podstawa wej¶cia odpowiada za interpretacjê wprowadzanych liczb;
@emph{wszystkie} wprowadzane liczby u¿ywaj± tej podstawy.  Podstawa wyj¶cia
u¿ywana jest do wypisywania liczb.

Podstawa wej¶cia i wyj¶cia s± odrêbnymi parametrami; mo¿na spowodowaæ,
¿e bêd± ró¿ne, co mo¿e byæ u¿yteczne lub myl±ce.
Podstawa wej¶cia musi byæ liczb± z zakresu od 2 do 16.
Podstawa wyj¶cia musi wynosiæ co najmniej 2.
Dok³adno¶æ musi byæ równa zeru lub wiêksza. Dok³adno¶æ zawsze okre¶lana jest
jako liczba cyfr dziesiêtnych, niezale¿nie od bie¿±cej podstawy wej¶cia czy
wyj¶cia.

@table @samp
@item i
Zdejmuje warto¶æ z wierzcho³ka stosu i pos³uguje siê ni± do ustawienia
podstawy wej¶cia.

@item o
Zdejmuje warto¶æ z wierzcho³ka stosu i pos³uguje siê ni± do ustawienia
podstawy wyj¶cia.

@item k
Zdejmuje warto¶æ z wierzcho³ka stosu i pos³uguje siê ni± do ustawienia
dok³adno¶ci.

@item I
Odk³ada bie¿±c± warto¶æ podstawy wej¶cia na stosie.

@item O
Odk³ada bie¿±c± warto¶æ podstawy wyj¶cia na stosie.

@item K
Odk³ada bie¿±c± dok³adno¶æ na stosie.

@end table

@node £añcuchy, Informacja o stanie, Parametry, Top
@chapter £añcuchy znakowe

@sc{dc} oprócz pracy z liczbami mo¿e te¿ dzia³aæ na ³añcuchach znakowych.
£añcuchy mo¿na jedynie wypisywaæ i wykonywaæ jako makra (co oznacza,
¿e zawarto¶æ ³añcucha przetwarzana jest jako polecenia @sc{dc}).
Stos i wszystkie rejestry mog± przechowywaæ ³añcuchy, a @sc{dc} zawsze wie,
czy dany obiekt jest ³añcuchem czy liczb±.
Niektóre z poleceñ, jak np. operacje arytmetyczne, wymagaj± liczb jako swych
argumentów i wy¶wietlaj± b³êdy, je¶li dostarczono im ³añcuch.  Inne
akceptuj± zarówno liczby, jak i ³añcuchy znakowe. Na przyk³ad, polecenie
@samp{p} akceptuje oba rodzaje argumentów i wypisuje obiekt stosownie do
jego typu.

@table @samp
@item [@var{znaki}]
Tworzy ³añcuch zawieraj±cy @var{znaki} i odk³ada go na stos.
Na przyk³ad, @samp{[foo]P} wypisuje znaki @samp{foo} (bez zakoñczenia
znakiem nowej linii).

@item a
Mneminik tego polecenia jest nieco myl±cy: zamiana na Ascii.
Zdejmowany jest wierzcho³ek stosu.
Je¿eli jest to liczba, to m³odszy bajt (low-order byte) tej liczby zamieniany
jest na ³añcuch i odk³adany na stos. W przeciwnym przypadku, wierzcho³ek stosu
by³ ³añcuchem, a z powrotem na stos odk³adany jest pierwszy znak tego
³añcucha.
(To polecenie jest rozszerzeniem GNU.)

@item x
Zdejmuje warto¶æ ze stosu i wykonuje j± jako makro. Zwykle powinien to byæ
³añcuch znakowy. Je¿eli jest to liczba, to zostanie po prostu zwrócona na stos.
Na przyk³ad, @samp{[1p]x} wykonuje makro @samp{1p}, które odk³ada 1 na stosie
i wypisuje @samp{1} w osobnym wierszu.

Makra s± najczê¶ciej przechowywane w rejestrach: @samp{[1p]sa} sk³aduje
makro do wypisania @samp{1} w rejestrze @samp{a}, za¶ @samp{lax} wywo³uje to
makro.

@item >@var{r}
Zdejmuje dwie warto¶ci ze stosu i porównuje je, zak³adaj±c, ¿e s± one liczbami,
wykonuj±c zawarto¶æ rejestru @var{r} jako makro, je¶li pierwotny wierzcho³ek
stosu jest wiêkszy.  Tak wiêc, @samp{1 2>a} wywo³a zawarto¶æ rejestru
@samp{a}, za¶ @samp{2 1>a} nie wywo³a.

@item !>@var{r}
Podobnie, ale wywo³uje makro je¶li pierwotny wierzcho³ek stosu nie jest
wiêkszy (jest mniejszy b±d¼ równy) od liczby wystêpuj±cej pod nim.

@item <@var{r}
Podobnie, ale wywo³uje makro je¶li pierwotny wierzcho³ek stosu jest mniejszy
od liczby wystêpuj±cej pod nim.

@item !<@var{r}
Podobnie, ale wywo³uje makro je¶li pierwotny wierzcho³ek stosu nie jest
mniejszy (jest wiêkszy b±d¼ równy) od liczby wystêpuj±cej pod nim.

@item =@var{r}
Podobnie, ale wywo³uje makro, gdy obie zdjête ze stosu liczby s± równe.
@c Jest to równie¿ poprawna forma sprawdzenia równo¶ci dwu ³añcuchów.

@item !=@var{r}
Podobnie, ale wywo³uje makro, gdy obie zdjête ze stosu liczby nie s± równe.
@c Jest to równie¿ poprawna forma sprawdzenia równo¶ci dwu ³añcuchów.

@item ?
Czyta wiersz z terminala i wykonuje go. Polecenie to umo¿liwia makru
pobieranie danych od u¿ytkownika.

@item q
Podczas wykonywania makra, powoduje zakoñczenie pracy tego makra i makra,
z którego by³o ono wywo³ane.  Polecenie @samp{q} wywo³ane na najwy¿szym
poziomie lub z makra wywo³anego bezpo¶rednio z najwy¿szego poziomu spowoduje
zakoñczenie pracy @sc{dc}.

@item Q
Zdejmuje ze stosu warto¶æ i u¿ywa jej jako liczby poziomów wykonania makr,
jakie maj± zostaæ zakoñczone.
Tak wiêc, @samp{3Q} koñczy pracê trzech poziomów makr.
@end table

@node Informacja o stanie, Ró¿ne, £añcuchy, Top
@chapter Informacja o stanie

@table @samp
@item Z
Zdejmuje warto¶æ ze stosu, oblicza liczbê jej cyfr (lub liczbê znaków, je¶li
jest to ³añcuch) i odk³ada tê liczbê na stos.

@item X
Zdejmuje warto¶æ ze stosu, oblicza liczbê jej cyfr u³amkowych i odk³ada tê
liczbê na stos. Dla ³añcuchów warto¶ci± odk³adan± na stos jest
@c -1.
0.

@item z
Odk³ada na stos bie¿±c± wysoko¶æ stosu: liczbê obiektów na stosie przed
wykonaniem polecenia @samp{z}.
@end table

@node Ró¿ne, Zg³aszanie b³êdów, Informacja o stanie, Top
@chapter Ró¿ne

@table @samp
@item !
Uruchamia resztê wiersza jako polecenie systemu.
Zauwa¿, ¿e pierwszeñstwo w analizie sk³adni maj± polecenia @samp{!<},
@samp{!=} i @samp{!>}, wiêc je¶li chcemy uruchomiæ polecenie systemu
zaczynaj±ce siê od @samp{<}, @samp{>} lub @samp{=}, to po @samp{!} musimy
dodaæ odstêp.

@item #
Interpretuje resztê wiersza jako komentarz.
(To polecenie jest rozszerzeniem GNU.)

@item :@var{r}
Zdejmuje ze stosu dwie górne warto¶ci. Warto¶æ, która by³a drug± od góry
stosu zostanie zachowana w tablicy @var{r}, indeksowanej warto¶ci± by³ego
wierzcho³ka stosu.

@item ;@var{r}
Zdejmuje wierzcho³ek stosu i pos³uguje siê nim jako indeksem tablicy @var{r}.
Wybrana w ten sposób warto¶æ jest nastêpnie odk³adana na stos.
@end table

Zauwa¿, ¿e ka¿da ze sk³adowanych na stosie instancji rejestru ma swoj±
w³asn±, skojarzon± z ni± tablicê.
Zatem, @samp{1 @var{0:a} 0S@var{a} 2 @var{0:a} L@var{a} @var{0;a}p}
wypisze 1, gdy¿ 2 zosta³o zapamiêtane w instancji @var{0:a}, która zosta³a
pó¼niej od³o¿ona na stos.

@node Zg³aszanie b³êdów, , Ró¿ne, Top
@chapter Zg³aszanie b³êdów

B³êdy proszê zg³aszaæ (w jêz.angielskim) na adres @email{bug-dc@@gnu.org}.

@contents
@bye
