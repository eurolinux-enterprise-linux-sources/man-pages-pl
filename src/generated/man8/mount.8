.\" Copyright (c) 1996-2004 Andries Brouwer
.\"
.\" This page is somewhat derived from a page that was
.\" (c) 1980, 1989, 1991 The Regents of the University of California
.\" and had been heavily modified by Rik Faith and myself.
.\" (Probably no BSD text remains.)
.\" Fragments of text were written by Werner Almesberger, Remy Card,
.\" Stephen Tweedie and Eric Youngdale.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 960705, aeb: version for mount-2.7g
.\" 970114, aeb: xiafs and ext are dead; romfs is new
.\" 970623, aeb: -F option
.\" 970914, reg: -s option
.\" 981111, K.Garloff: /etc/filesystems
.\" 990111, aeb: documented /sbin/mount.smbfs
.\" 990730, Yann Droneaud <lch@multimania.com>: updated page
.\" 991214, Elrond <Elrond@Wunder-Nett.org>: added some docs on devpts
.\" 010714, Michael K. Johnson <johnsonm@redhat.com> added -O
.\" 010725, Nikita Danilov <NikitaDanilov@Yahoo.COM>: reiserfs options
.\" 011124, Karl Eichwalder <ke@gnu.franken.de>: tmpfs options
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\" This file is distributed under the same license as original manpage
.\" Copyright of the original manpage:
.\" Copyright © 1996-2004 Andries Brouwer (GPL-2+)
.\" Copyright © of Polish translation:
.\" Przemek Borys (PTM) <pborys@dione.ids.pl>, 1999.
.\" Robert Luberda (PTM) <robert@debian.org>, 2002.
.\" Andrzej M. Krzysztofowicz (PTM) <ankry@green.mf.pg.gda.pl>, 2003.
.\" Michał Kułach <michal.kulach@gmail.com>, 2012.
.TH MOUNT 8 "grudzień 2004" util\-linux "Administracja systemem"
.SH NAZWA
mount \- montuje system plików
.SH SKŁADNIA
\fBmount\fP [\fB\-lhV\fP]
.LP
\fBmount \-a\fP [\fB\-fFnrsvw\fP] [\fB\-t\fP \fItyp\-systemu\fP] [\fB\-O\fP \fIlista\-opcji\fP]
.LP
\fBmount\fP [\fB\-fnrsvw\fP] [\fB\-o\fP \fIopcje\fP[\fB,\fP\fIopcje\fP]...]
\fIurządzenie\fP|\fIkatalog\fP
.LP
\fBmount\fP [\fB\-fnrsvw\fP] [\fB\-t\fP \fItyp\-systemu\fP] [\fB\-o\fP \fIopcje\fP] \fIurządzenie
katalog\fP
.SH OPIS
Wszystkie pliki dostępne w systemie Unix są zorganizowane w jednym wielkim
drzewie, hierarchii plików, zakorzenionej w \fB/\fP.  Pliki te mogą być
położone na wielu urządzeniach. Polecenie \fBmount\fP umożliwia przyłączenie
systemu plików znajdującego się na danym urządzeniu do wielkiego drzewa
plików. Odwrotnie, polecenie \fBumount\fP(8)  powoduje odłączenie go.

Standardowa postać polecenia \fBmount\fP to
.RS

.br
\fBmount \-t\fP\fI typ urządzenie katalog\fP
.br

.RE
Nakazuje jądru, by przyłączyło system plików znaleziony na danym
\fIurządzeniu\fP (które jest typu \fItyp\fP)  w zadanym \fIkatalogu\fP.  Poprzednia
zawartość (jeśli istniała) i właściciel oraz prawa katalogu \fIkatalog\fP stają
się niewidzialne na czas przyłączenia (zamontowania) nowego systemu
plików. W tym czasie ścieżka \fIkatalog\fP odnosi się do korzenia systemu
plików na podanym \fIurządzeniu\fP.

Jeśli podano jedynie urządzenie lub katalog, na przykład:
.RS

.br
\fBmount /katalog\fP
.br

.RE
to mount szuka punktu montowania, a jeśli go nie znajdzie, szuka urządzenia
w pliku /etc/fstab.

\fBWypisywanie i pomoc.\fP
.RS
Trzy formy wywołania niczego faktycznie nie montują:
.TP 
\fBmount \-h\fP
wypisuje komunikat pomocy
.TP 
\fBmount \-V\fP
wypisuje wersję
.TP 
\fBmount \fP[\fB\-l\fP] [\fB\-t \fP\fItyp\fP]
pokazuje listę wszystkich zamontowanych systemów plików (typu \fItyp\fP).
Opcja \-l ujmuje w zestawieniu również etykiety. Patrz niżej.
.RE

\fBWskazanie urządzenia.\fP
.RS
Większość urządzeń jest wskazywanych przez nazwę pliku (specjalnego
urządzenia blokowego), jak np.  \fI/dev/sda1\fP, lecz istnieją inne
możliwości. Na przykład w wypadku montowania NFS, \fIurządzenie\fP może
wyglądać tak: \fIknuth.cwi.nl:/katalog\fP.  Specjalne urządzenie blokowe można
wskazać podając jego etykietę (\fBLABEL\fP) wolumenu lub \fBUUID\fP (zob. opcje \-L
i \-U poniżej).

Zalecaną metodą jest używanie znaczników LABEL=<etykieta> lub
UUID=<uuid>, zamiast dowiązań symbolicznych
\fB/dev/disk/by\-{label,uuid}\fP udev w pliku /etc/fstab. Znaczniki są bardziej
czytelne, solidne i przenośne. Polecenie \fBmount\fP(8) używa wewnętrznie
dowiązań symbolicznych udev, tak więc ich używanie w /etc/fstab nie daje
żadnej przewagi nad LABEL=/UUID=. Aby dowiedzieć się więcej, proszę zapoznać
się z \fBlibblkid\fP(3).

Proszę zauważyć, że \fBmount\fP(8) używa UUID\-ów jako łańcuchów. UUID\-y z
wiersza poleceń lub \fBfstab\fP(5) nie są konwertowane do wewnętrznej
reprezentacji binarnej. Litery w reprezentacji łańcucha UUID powinny być
małymi literami.

System plików \fIproc\fP nie jest związany z żadnym urządzeniem specjalnym i
podczas jego montowania zamiast nazwy urządzenia można użyć dowolnego słowa
kluczowego, np.  \fIproc\fP (zwyczajowy wybór \fInone\fP jest mniej udany:
komunikat błędu `none busy' od \fBumount\fP może być mylący).
.RE

\fBPliki /etc/fstab, /etc/mtab i /proc/mounts.\fP
.RS
Plik \fI/etc/fstab\fP (zobacz \fBfstab\fP(5)), może zawierać wiersze opisujące,
jakie urządzenia gdzie są zazwyczaj montowane i przy użyciu jakich opcji.
.LP
Polecenie
.RS
.sp
\fBmount \-a\fP [\fB\-t\fP \fItyp\fP] [\fB\-O\fP \fIlista\-opcji\fP]
.sp
.RE
(zwykle podawane w skryptach startowych) powoduje zamontowanie wszystkich
systemów plików (danego typu) wymienionych w \fIfstab\fP, poza tymi, których
wpisy zawierają słowo kluczowe \fBnoauto\fP.  Podanie opcji \fB\-F\fP spowoduje, że
mount się rozdzieli na kilka procesów, tak że systemy plików będą montowane
równocześnie.
.LP
Podczas montowania systemu plików wymienionego w \fIfstab\fP lub \fImtab\fP,
wystarczy podać tylko nazwę urządzenia lub tylko punkt montowania.


Programy \fBmount\fP i \fBumount\fP zarządzają listą aktualnie zamontowanych
systemów plików w pliku \fI/etc/mtab\fP. Jeśli nie podano żadnych argumentów do
\fBmount\fP, lista ta jest wypisywana.

Program \fBmount\fP nie odczytuje pliku \fI/etc/fstab\fP, jeśli podano
\fIurządzenie\fP (lub LABEL/UUID) i \fIkatalog\fP. Na przykład:
.RS
.sp
\fBmount /dev/foo /katalog\fP
.sp
.RE
Aby przesłonić opcje montowania z \fI/etc/fstab\fP konieczne jest użycie:
.RS
.sp
\fBmount urządzenie|katalog \-o <opcje>\fP
.sp
.RE
po czym opcje montowania z wiersza poleceń zostaną dodane do listy opcji z
\fI/etc/fstab\fP. Zwykłym zachowaniem jest działanie ostatniej opcji, jeśli
opcje się powtarzają.

Gdy zamontowany jest system plików \fIproc\fP (powiedzmy, że w \fI/proc\fP), pliki
\fI/etc/mtab\fP i \fI/proc/mounts\fP mają bardzo podobną zawartość. Pierwszy ma
trochę więcej informacji, takich jak opcje montowania, lecz niekoniecznie
jest aktualny. (zobacz opcję \fB\-n\fP poniżej).  Możliwe jest zastąpienie
\fI/etc/mtab\fP dowiązaniem symbolicznym do \fI/proc/mounts\fP, co, szczególnie
jeśli posiada się bardzo dużą liczbę montowań, będzie znacznie szybsze z
użyciem dowiązania, ale w ten sposób tracona jest część danych, a w
szczególności użycie opcji "user" nie będzie działać.
.RE

\fBMontowanie przez zwykłych użytkowników.\fP
.RS
Tradycyjnie, tylko superużytkownik może montować systemy plików. Jednak
jeśli \fIfstab\fP w danym wierszu zawiera opcję \fBuser\fP, to każdy może
zamontować odpowiadający temu wpisowi system plików.
.LP
Tak więc, jeśli mamy wiersz
.RS
.sp
\fB/dev/cdrom /cd iso9660 ro,user,noauto,unhide\fP
.sp
.RE
to dowolny użytkownik może zamontować system plików iso9660 umieszczony na
CD\-ROM\-ie, posługując się poleceniem
.RS
.sp
\fBmount /dev/cdrom\fP
.sp
.RE
lub
.RS
.sp
\fBmount /cd\fP
.sp
.RE
Szczegóły opisuje \fBfstab\fP(5).  Tylko użytkownik, który zamontował system
plików może ponownie go odmontować.  Jeżeli zachodzi potrzeba, by
odmontowywać mógł każdy, w odpowiednim wierszu \fIfstab\fP należy zamiast
\fBuser\fP wpisać \fBusers\fP.  Opcja \fBowner\fP przypomina opcję \fBuser\fP, poza tym,
że dany użytkownik musi być właścicielem odpowiedniego pliku
specjalnego. Jest przydatna np. w przypadku \fI/dev/fd\fP jeśli skrypt
zgłoszeniowy (login script) czyni danego użytkownika korzystającego z
konsoli właścicielem tego urządzenia. Opcja \fBgroup\fP jest podobna, z tym
ograniczeniem, że użytkownik musi być członkiem grupy pliku specjalnego.
.RE


\fBMontowanie używając podpięcia (bind).\fP
.RS
.\" In fact since 2.3.99. At first the syntax was mount -t bind.
Od wersji 2.4.0 Linuksa możliwe jest ponowne zamontowanie części systemu
plików w innym miejscu. Służy do tego wywołanie:
.RS
.br
\fBmount \-\-bind\fP \fIstary\-katalog nowy\-katalog\fP
.RE
lub krótka opcja
.RS
.br
\fBmount \-B\fP \fIstary\-katalog nowy\-katalog\fP
.RE
lub wpis fstab:
.RS
.br
\fI/stary\-katalog\fP \fI/nowy\-katalog\fP \fBnone bind\fP
.RE

Po takim wywołaniu, ta sama zawartość jest dostępna w dwóch miejscach. Można
również zamontować ponownie pojedynczy plik (w pojedynczym pliku). Jest
także możliwe użycie montowania "bind" do utworzenia punktu montowania ze
zwykłego katalogu, na przykład:

.RS
.br
\fBmount \-\-bind\fP \fIfoo foo\fP
.RE

Wywołanie montowania za pomocą podpięcia dołącza tylko (część) pojedynczego
systemu plików, bez możliwych montowań znajdujących się poniżej. Cała
hierarchia plików, uwzględniając takie montowania jest dołączana w drugie
miejsce za pomocą

.RS
.br
\fBmount \-\-rbind\fP \fIstary\-katalog nowy\-katalog\fP
.RE

lub krótka opcja

.RS
.br
\fBmount \-R\fP \fIstary\-katalog nowy\-katalog\fP
.RE

.\" available since Linux 2.4.11.
Proszę zauważyć, że opcje montowania systemu plików pozostaną takie same jak
te pierwotnego punktu montowania i nie mogą być zmienione przez podanie
opcji \-o razem z \-\-bind/\-\-rbind. Opcje montowania mogą zostać zmienione
oddzielnym poleceniem ponownego montowania, na przykład:

.RS
.br
\fBmount \-\-bind\fP \fIstary\-katalog nowy\-katalog\fP
.br
\fBmount \-o remount,ro\fP \fInowy\-katalog\fP
.RE

Proszę zauważyć, że zachowanie opcji ponownego montowania zależy od pliku
/etc/mtab. Pierwsze polecenie przechowuje flagę "bind" w pliku /etc/mtab, a
drugie polecenie odczytuje flagę z pliku. Jeśli bieżący system nie posiada
pliku /etc/mtab lub jeśli jawnie zdefiniowano źródło i przeznaczenie do
polecenia ponownego montowania (a więc mount(8) nie odczyta /etc/mtab),
konieczne jest użycia flagi (lub opcji) bind również do poleceń ponownego
montowania. Przykładowo:

.RS
.br
\fBmount \-\-bind\fP \fIstary\-katalog nowy\-katalog\fP
.br
\fBmount \-o remount,ro,bind\fP \fIstary\-katalog nowy\-katalog\fP
.RE
.RE

\fBOperacja przenoszenia.\fP
.RS
Od wersji 2.5.1. Linuksa możliwe jest nierozdzielne (atomically)
przeniesienie \fBzamontowanego drzewa\fP w inne miejsce. Wywołaniem jest
.RS
.br
\fBmount \-\-move\fP \fIstary\-katalog nowy\-katalog\fP
.RE
lub krótka opcja
.RS
.br
\fBmount \-M\fP \fIstary\-katalog nowy\-katalog\fP
.RE
Spowoduje to pojawienie się zawartości, która wcześniej znajdowała się w
starym\-katalogu, w nowym\-katalogu. Fizyczne położenie plików nie zmienia
się. Proszę zauważyć, że \fIstary\-katalog\fP musi być punktem montowania.
.RE

\fBWspółdzielone operacje na poddrzewach.\fP
.RS
Od Linuksa 2.6.15 możliwe jest oznaczenie montowania i jego podmontowań jako
współdzielone (shared), prywatne\ (private), podrzędne (slave) i
niepodpinalne (unbindable). Montowania współdzielone udostępniają możliwość
tworzenia kopii takich montowań tak, że montowania i odmontowania
którejkolwiek z kopii dotyczy ich wszystkich. Montowania podrzędne otrzymują
montowania i odmontowywania z montowania nadrzędnego, ale nie działa to w
drugą stronę. Montowania prywatne nie posiadają powyższych
właściwości. Montowanie niepodpinalne jest montowaniem prywatnym, które nie
może zostać sklonowane za pomocą operacji podpięcia (bind). Szczegółowe
wyjaśnienia można znaleźć w pliku dokumentacji
Documentation/filesystems/sharedsubtree.txt w drzewie źródeł jądra.

.RS
.nf
\fBmount \-\-make\-shared \fP\fIpunkt\-montowania\fP
\fBmount \-\-make\-slave \fP\fIpunkt\-montowania\fP
\fBmount \-\-make\-private \fP\fIpunkt\-montowania\fP
\fBmount \-\-make\-unbindable \fP\fIpunkt\-montowania\fP
.fi
.RE

Następujące polecenia pozwalają na rekursywną zmianę typu wszystkich
montowań pod danym punktem montowania.

.RS
.nf
\fBmount \-\-make\-rshared \fP\fIpunkt\-montowania\fP
\fBmount \-\-make\-rslave \fP\fIpunkt\-montowania\fP
\fBmount \-\-make\-rprivate \fP\fIpunkt\-montowania\fP
\fBmount \-\-make\-runbindable \fP\fIpunkt\-montowania\fP
.fi
.RE
.RE

.SH "OPCJE WIERSZA POLECEŃ"
Pełny zestaw opcji używanych przy wywoływaniu \fBmount\fP jest ustalany przez
pobranie opcji dla danego systemu plików z \fIfstab\fP, a następnie
zastosowanie wszelkich opcji podanych argumentem \fB\-o\fP, a na koniec opcji
\fB\-r\fP lub \fB\-w\fP, o ile istnieją.

Opcje wiersza poleceń, dostępne do polecenia \fBmount\fP:
.IP "\fB\-V, \-\-version\fP"
Wypisuje wersję.
.IP "\fB\-h, \-\-help\fP"
Wypisuje komunikat pomocy.
.IP "\fB\-v, \-\-verbose\fP"
Tryb szczegółowy.
.IP "\fB\-a, \-\-all\fP"
Montuje wszystkie systemy plików (zadanych typów) ujęte w \fIfstab\fP.
.IP "\fB\-F, \-\-fork\fP"
(Użyte w połączeniu z \fB\-a\fP.)  Dla każdego urządzenia tworzy nowy proces
równoległy mount.  Powoduje to równoległy przebieg montowania różnych
urządzeń lub różnych serwerów NFS. Zaletą jest większa szybkość: także
przekroczenia czasu dla NFS będą wyznaczane równolegle. Wadą jest to, że
montowania wykonywane są w niezdefiniowanej kolejności. Nie można zatem
zastosować tej opcji do równoczesnego montowania \fI/usr\fP i \fI/usr/spool\fP.
.IP "\fB\-f, \-\-fake\fP"
Powoduje wykonywanie wszystkiego poza faktycznym wywołaniem funkcji
systemowej.  Jeśli nie jest to oczywiste: "udaje" to montowanie systemu
plików.  W połączeniu z flagą \fB\-v\fP przydaje się do ustalenia, co usiłuje
zrobić polecenie \fBmount\fP.  Może być też używana do dodawania wpisów dla
urządzeń, które zamontowano wcześniej z opcją \-n. Opcje \-f sprawdza
istnienie rekordu w /etc/mtab i zawodzi, jeśli rekord już istnieje (w
przypadku zwykłych, nieudawanych montowań, to sprawdzenie jest wykonywane
przez jądro).
.IP "\fB\-i, \-\-internal\-only\fP"
Nie wywołuje programu pomocniczego /sbin/mount.<system\-plików>,
nawet jeśli istnieje.
.IP \fB\-l\fP
Dokłada etykiety do wyjścia wypisywanego przez mount.  Żeby opcja ta mogła
działać, mount musi mieć prawo odczytu urządzania dyskowego (np. suid
root). Można ustawić taką etykietę dla ext2, ext3 lub ext4 za pomocą
narzędzia \fBe2label\fP(8), zaś dla XFS \- stosując \fBxfs_admin\fP(8) lub dla
reiserfs używając \fBreiserfstune\fP(8).
.IP "\fB\-n, \-\-no\-mtab\fP"
Montuje bez zapisywania w \fI/etc/mtab\fP.  Jest to niezbędne na przykład gdy
\fI/etc\fP znajduje się na systemie plików tylko do odczytu.
.IP \fB\-\-no\-canonicalize\fP
Nie normalizuje ścieżek. Polecenie montowania normalizuje wszystkie ścieżki
(z wiersza poleceń lub fstab) i przechowuje znormalizowane ścieżki w pliku
\fI/etc/mtab\fP. Opcja może być użyta razem z \fB\-f\fP do już znormalizowanych
ścieżek absolutnych.
.IP "\fB\-p, \-\-pass\-fd \fP\fInumer\fP"
Jeżeli montowanie wymaga podania hasła, to jest ono czytane z deskryptora
pliku \fInumer\fP zamiast z terminala.
.IP \fB\-s\fP
Toleruje nieodpowiednie opcje montowania, zamiast kończyć pracę
niepowodzeniem. Powoduje to ignorowanie opcji montowania, które nie są
obsługiwane przez dany system plików. Nie wszystkie systemy plików
rozpoznają tę opcję. Istnieje ona do obsługi linuksowego narzędzia
automatycznego montowania opartego na autofs.
.IP "\fB\-r, \-\-read\-only\fP"
Montuje system plików w trybie tylko do odczytu. Synonimem jest \fB\-o ro\fP.

Proszę zauważyć że, w zależności od systemu plików, stanu i zachowania
jądra, system może wciąż zapisywać na urządzenie. Na przykład ext3 lub ext4
będzie odświeżał swój dziennik, jeśli system plików jest zaśmiecony. Aby
zapobiec takiemu typowi dostępu do zapisu, można zamontować system plików
ext3 lub ext4 z opcją montowania "ro,noload" lub ustawić urządzenie blokowe
w trybie tylko do odczytu, patrz polecenie \fBblockdev\fP(8).
.IP "\fB\-w, \-\-rw\fP"
Montuje system plików w trybie odczytu i zapisu. Tak jest domyślnie.
Synonimem jest \fB\-o rw\fP.
.IP "\fB\-L\fP\fI etykieta\fP"
Montuje partycję posiadającą podaną \fIetykietę\fP.
.IP "\fB\-U \fP\fIuuid\fP"
Montuje partycję mającą podany \fIuuid\fP.  Te dwie opcje wymagają istnienia
pliku \fI/proc/partitions\fP (obecnego od wersji 2.1.116 Linuksa).
.IP "\fB\-t, \-\-types\fP\fI typ_systemu_plików\fP"
Argument występujący po \fB\-t\fP jest używany do wskazania rodzaju systemu
plików.  Obecnie obsługiwane są: \fIadfs\fP, \fIaffs\fP, \fIautofs\fP, \fIcifs\fP,
\fIcoda\fP, \fIcoherent\fP, \fIcramfs\fP, \fIdebugfs\fP, \fIdevpts\fP, \fIefs\fP, \fIext\fP,
\fIext2\fP, \fIext3\fP, \fIext4\fP, \fIhfs\fP, \fIhfsplus\fP, \fIhpfs\fP, \fIiso9660\fP, \fIjfs\fP,
\fIminix\fP, \fImsdos\fP, \fIncpfs\fP, \fInfs\fP, \fInfs4\fP, \fIntfs\fP, \fIproc\fP, \fIqnx4\fP,
\fIramfs\fP, \fIreiserfs\fP, \fIromfs\fP, \fIsquashfs\fP, \fIsmbfs\fP, \fIsysv\fP, \fItmpfs\fP,
\fIubifs\fP, \fIudf\fP, \fIufs\fP, \fIumsdos\fP, \fIusbfs\fP, \fIvfat\fP, \fIxenix\fP, \fIxfs\fP,
\fIxiafs\fP. Zauważ, że coherent, sysv i xenix są równoważne i że \fIxenix\fP oraz
\fIcoherent\fP zostaną kiedyś usunięte \(em należy zamiast nich stosować
\fIsysv\fP.  Od jądra wersji 2.1.21 typy \fIext\fP i \fIxiafs\fP już nie
istnieją. Wcześniej, \fIusbfs\fP miało nazwę \fIusbdevfs\fP. Proszę zauważyć, że
rzeczywista lista obsługiwanych systemów plików zależy od bieżącego jądra.

Programy \fBmount\fP i \fBumount\fP obsługują podtypy systemów plików. Podtypy są
definiowane przyrostkiem ".podtyp". Przykładowo "fuse.sshfs". Zalecane jest
używanie notacji podtypów zamiast dodawać jakieś przedrostki do źródła
montowania (np. "sshfs#example.com" jest przestarzałe).

Dla większości typów, jedyne, co robi program \fBmount\fP, to po prostu
wywołuje funkcję systemową \fImount\fP(2), i nie jest tu wymagana żadna
szczegółowa wiedza o danym systemie plików.  Jednakże dla kilku typów (jak
np. nfs, nfs4, cifs, smbfs, ncpfs) konieczny jest niezaplanowany
kod. Systemy plików nfs, nfs4, cifs, smbfs i ncpfs mają osobny program
montujący. Żeby umożliwić jednolite traktowanie wszystkich typów, mount
wywołany z typem \fITYP\fP uruchamia program \fB/sbin/mount.\fP\fITYP\fP (jeśli
takowy istnieje).  Ponieważ rozmaite wersje programu \fBsmbmount\fP mają różne
konwencje wywołań, być może \fB/sbin/mount.smb\fP będzie musiał być skryptem
powłoki, który dobierze właściwe wywołanie.

Bez podania opcji \fB\-t\fP lub gdy podany jest typ \fBauto\fP, mount postara się
odgadnąć właściwy typ. Mount używa biblioteki blkid do tego celu; jeśli nie
zwróci to niczego, co wygląda znajomo, mount postara się odczytać plik
\fI/etc/filesystems\fP lub, jeśli on nie istnieje
\fI/proc/filesystems\fP. Wszystkie wypisane tam typy zostaną wypróbowane, z
wyjątkiem tych oznaczonych jako "nodev" (np. \fIdevpts\fP, \fIproc\fP i
\fInfs\fP). Jeśli \fI/etc/filesystems\fP kończy się wierszem z pojedynczą *, mount
odczyta później plik \fI/proc/filesystems\fP.

Typ \fBauto\fP może być przydatny do montowanych przez użytkownika dyskietek.
Utworzenie pliku \fI/etc/filesystems\fP przydaje się do zmiany kolejności
rozpoznawania (np. do próbowania vfat przed msdos lub ext3 przez ext2) lub w
przypadku stosowania modułu autoloadera.

Można podać więcej niż jeden typ, w postaci listy rozdzielonej przecinkami.
Lista typów systemów plików może być poprzedzona słowem \fBno\fP aby określić
systemy plików, na których żadna akcja nie powinna być wykonywana (może to
mieć znaczenie z opcją \fB\-a\fP). Na przykład polecenie:
.RS
.RS
.sp
\fBmount \-a \-t nomsdos,ext\fP
.sp
.RE
montuje wszystkie systemy plików poza tymi, które są typu \fImsdos\fP lub
\fIext\fP.
.RE
.IP "\fB\-O, \-\-test\-opts \fP\fIopcje\fP"
Używany w połączeniu z \fB\-a\fP, aby ograniczyć grupę systemów plików, do
której stosowana jest opcja \fB\-a\fP. Podobnie jak \fB\-t\fP, z tym wyjątkiem, że
jest bezużyteczna bez opcji \fB\-a\fP. Na przykład polecenie:
.RS
.RS
.sp
\fBmount \-a \-O no_netdev\fP
.sp
.RE
montuje wszystkie systemy plików z wyjątkiem posiadających podaną opcją
\fI_netdev\fP w polu opcji pliku \fI/etc/fstab\fP.

Różni się od \fB\-t\fP tym, że każda opcja jest dopasowywana dokładnie; a
podanie \fBno\fP na początku jednej opcji, nie neguje pozostałych.

Opcje \fB\-t\fP i \fB\-O\fP łączą swe działanie; to jest polecenie
.RS
.sp
\fBmount \-a \-t ext2 \-O _netdev\fP
.sp
.RE
montuje wszystkie systemy plików ext2 z opcją _netdev, a nie wszystkie
systemy które są albo typu ext2, albo mają podaną opcją _netdev.
.RE
.IP "\fB\-o, \-\-options \fP\fIopcje\fP"
Opcje są podawane z flagą \fB\-o\fP, po której następuje łańcuch z opcjami
oddzielonymi przecinkami. Na przykład:
.RS
.RS
.sp
\fBmount LABEL=mydisk \-o noatime,nouser\fP
.sp
.RE

Aby dowiedzieć się więcej, proszę zapoznać się z rozdziałami \fBOPCJE
MONTOWANIA NIEZALEŻNE OD SYSTEMU PLIKÓW\fP i \fBOPCJE MONTOWANIA SPECYFICZNE
DLA RÓŻNYCH SYSTEMÓW PLIKÓW\fP.
.RE
.IP "\fB\-B, \-\-bind\fP"
Montuje ponownie poddrzewo w innym miejscu (tak, że jego zawartość jest
dostępna w obu miejscach). Patrz wyżej.
.IP "\fB\-R, \-\-rbind\fP"
Montuje ponownie poddrzewo wraz ze wszystkimi ewentualnymi montowaniami
znajdującymi się poniżej, w innym miejscu (tak, że jego zawartość jest
dostępna w obu miejscach). Patrz wyżej.
.IP "\fB\-M, \-\-move\fP"
Przenosi poddrzewo w inne miejsce. Patrz powyżej.

.SH "OPCJE MONTOWANIA NIEZALEŻNE OD SYSTEMU PLIKÓW"
Część opcji jest przydatna tylko wówczas, gdy znajdują się w pliku
\fI/etc/fstab\fP.

Część tych opcji może zostać domyślnie włączona lub wyłączona przez jądro
systemu. Aby sprawdzić bieżące ustawienia, proszę sprawdzić opcje w
/proc/mounts.

Poniższe opcje dotyczą dowolnego montowanego systemu plików (choć nie każdy
z systemów plików faktycznie je honoruje, np. opcja \fBsync\fP obecnie wpływa
tylko na ext2, ext3, fat, vfat i ufs):

.TP 
\fBasync\fP
Wszelkie operacje wejścia/wyjścia dla tego systemu plików powinny być
wykonywane asynchronicznie (patrz również opcja \fBsync\fP).
.TP 
\fBatime\fP
Nie używa funkcji noatime, w związku z czym czas dostępu i\-węzła jest
kontrolowany przez wartość domyślną jądra. Patrz również opis opcji
montowania \fBstrictatime\fP i \fBreatime\fP.
.TP 
\fBnoatime\fP
Nie wykonuje aktualizacji czasu dostępu w i\-węźle położonym na tym systemie
plików (np. w celu uzyskania szybszego dostępu do bufora wiadomości, co
przyspiesza działanie serwerów grup dyskusyjnych).
.TP 
\fBauto\fP
System plików może być montowany opcją \fB\-a\fP.
.TP 
\fBnoauto\fP
Dany system plików może być montowany tylko jawnie (np. opcja \fB\-a\fP nie
spowoduje jego zamontowania).
.TP 
\fBcontext=\fP\fIkontekst\fP, \fBfscontext=\fP\fIkontekst\fP, \fBdefcontext=\fP\fIkontekst\fP i \fBrootcontext=\fP\fIkontekst\fP
Opcja \fBcontext=\fP jest przydatna podczas montowania systemów plików, które
nie obsługują atrybutów rozszerzonych, takich jak dyskietki lub dyski twarde
sformatowane w VFAT lub systemy które zwykle nie działają pod SELinuksem,
takie jak dyski sformatowane w ext3 ze stacji roboczej nie używającej
SELinuksa. Można również użyć opcji \fBcontext=\fP na systemach plików, którym
się nie ufa, takich jak dyskietki. Pomaga również w kompatybilności z
systemami plików obsługującymi xattr na wcześniejszych wersjach jądra
2.4.<x>. Nawet gdy xattr są obsługiwane, można zawsze oszczędzić
czas nie etykietując każdego pliku, a przypisując całemu dyskowi jeden
kontekst bezpieczeństwa.

Często używaną opcją w przypadku nośników wymiennych jest
\fBcontext=system_u:object_r:removable_t\fP.

Dwiema innymi opcjami są \fBfscontext\fP i \fBdefcontext=\fP, przy czym wykluczają
one opcję context. Oznacza to, że można użyć razem fscontext i defcontext,
ale żadnej nie można użyć z context.

Opcja \fBfscontext\fP działa ze wszystkimi systemami plików, niezależnie od ich
obsługi xattr. Opcja fscontext ustawia nadrzędną etykietę systemu plików na
określony kontekst bezpieczeństwa. Etykieta systemu plików jest oddzielona
od poszczególnych etykiet plików. Reprezentuje cały system plików w celu
określonego typu sprawdzeń uprawnień, takich jak podczas montowania lub
tworzenia pliku. Poszczególne etykiety pliku są wciąż pobierane z xattrs z
samych plików. Opcja context w rzeczywistości ustawia zsumowany kontekst
udostępniany przez fscontext, poza podawaniem samej etykiety poszczególnych
plików.

Można ustawić domyślny kontekst bezpieczeństwa do plików bez etykiety, przy
użyciu opcji \fBdefcontext=\fP. Przesłania ona wartość ustawioną przez zasady
(politykę) do plików bez etykiety i wymaga systemu plików obsługującego
etykietowanie xattr.

Opcja \fBrootcontext\fP pozwala na jawne podanie etykiety głównego i\-węzła
systemu plików przez zamontowaniem jego lub i\-węzła z powodu widoczności w
przestrzeni użytkownika. Może być to przydatne przy wykorzystaniu "stateless
linux".

Proszę zauważyć, że jądro odrzuca żądania przemontowania, które zawierają
opcję context, nawet gdy nie różni się ona od bieżącego kontekstu.

Aby dowiedzieć się więcej, proszę zapoznać się z \fBselinux\fP(8)

.TP 
\fBdefaults\fP
Używa opcji domyślnych: \fBrw\fP, \fBsuid\fP, \fBdev\fP, \fBexec\fP, \fBauto\fP, \fBnouser\fP
i \fBasync\fP.
.TP 
\fBdev\fP
Interpretuje specjalne urządzenia blokowe i znakowe na danym systemie
plików.
.TP 
\fBnodev\fP
Nie interpretuje specjalnych urządzeń blokowych ani znakowych na systemie
plików.
.TP 
\fBdiratime\fP
Aktualizuje czas dostępu katalogu zapisany w i\-węźle w danym systemie
plików.  Tak jest domyślnie.
.TP 
\fBnodiratime\fP
Nie aktualizuje czasu dostępu katalogu zapisanego w i\-węźle w danym systemie
plików.
.TP 
\fBdirsync\fP
Aktualizacja wszystkich katalogów w systemie plików powinna być wykonywana
synchronicznie. Dotyka to następujących wywołań systemowych: creat, link,
unlink, symlink, mkdir, rmdir, mknod i rename.
.TP 
\fBexec\fP
Zezwala na uruchamianie plików binarnych.
.TP 
\fBnoexec\fP
Nie zezwala na bezpośrednie wywołanie plików binarnych w zamontowanym
systemie plików (do niedawna było możliwe obejście tego ograniczenia przy
użyciu polecenia w stylu /lib/ld*.so /mnt/binary, jednak ta sztuczka nie
działa od Linuksa 2.4.25/2.6.0).
.TP 
\fBgroup\fP
Pozwala na zamontowanie tego systemu plików przez zwykłego użytkownika
(tzn. nie roota), jeśli jedna z jego grup pasuje do grup urządzenia. Opcja
ta implikuje opcje \fBnosuid\fP, i \fBnodev\fP (chyba że są przesłaniane przez
następne opcje, jak w linii \fBgroup,dev,suid\fP).
.TP 
\fBencryption\fP
Określa używany algorytm szyfrowania. Używane w połączeniu z opcją \fBloop\fP.
.TP 
\fBkeybits\fP
Określa rozmiar klucza używanego w algorytmie szyfrowania. Używane w
połączeniu z opcjami \fBloop\fP i \fBencryption\fP. \fBnofail\fP \- nie informuje o
błędach dla tego urządzenia, jeśli nie istnieje. \fBiversion\fP \- przy każdej
modyfikacji i\-węzła, pole i_version jest zwiększane.
.TP 
\fBnoiversion\fP
Nie zwiększa pola i\-węzła i_version.
.TP 
\fBmand\fP
Pozwala na ściśle egzekwowane blokady w systemie plików. Patrz \fBfcntl\fP(2).
.TP 
\fBnomand\fP
Nie pozwala na ściśle egzekwowane blokady w systemie plików.
.TP 
\fB_netdev\fP
System plików znajduje się na urządzeniu wymagającym połączenia sieciowego
(używane aby zapobiec montowania przez system takich systemów plików, dopóki
sieć nie zostanie włączona w systemie).
.TP 
\fBnofail\fP
Nie informuje o błędach urządzenia, jeśli ono nie istnieje.
.TP 
\fBrelatime\fP
Aktualizuje czas dostępu i\-węzła relatywnie do czasu modyfikacji lub
zmiany. Czas dostępu jest aktualizowany tylko wówczas, jeśli poprzedni czas
dostępu był wcześniejszy od bieżącego czasu modyfikacji lub zmiany (podobne
do noatime, ale nie psuje aplikacji mutt i innych, które potrzebują
informacji o tym, czy plik zostać przeczytany od czasu jego ostatniej
modyfikacji).

Od Linuksa w wersji 2.6.30, jądro używa domyślnie zachowania udostępnianego
przez tę opcję (chyba że podano \fBnoatime\fP), a opcja \fBstrictatime\fP jest
wymagana, aby uzyskać tradycyjny sposób działania. Dodatkowo, od tej wersji
Linuksa, czas ostatniego dostępu pliku jest aktualizowany zawsze, jeśli
wynosi więcej niż 1 dzień.
.TP 
\fBnorelatime\fP
Nie używa funkcji \fBrelatime\fP. Patrz również opcja montowania
\fBstrictatime\fP.
.TP 
\fBstrictatime\fP
Pozwala na jawne żądanie pełnych aktualizacji atime. Umożliwia jądru na
domyślne używanie \fBrelatime\fP lub \fBnoatime\fP, ale wciąż pozwala warstwie
użytkownika na przesłonięcie tych opcji. Aby dowiedzieć się więcej o
domyślnych, systemowych opcjach montowania należy zapoznać się z
/proc/mount.
.TP 
\fBnostrictatime\fP
Używa domyślnego zachowania jądra dotyczącego aktualizowania czasów dostępu
i\-węzłów.
.TP 
\fBsuid\fP
Umożliwia działanie bitom set\-user\-id i set\-group\-id.
.TP 
\fBnosuid\fP
Nie pozwala na działanie bitów set\-user\-id i set\-group\-id (wygląda na
bezpieczną, ale w rzeczywistości raczej taka nie jest jeśli zainstalowano
suidperl(1)).
.TP 
\fBsilent\fP
Włącza flagę "cicho".
.TP 
\fBloud\fP
Wyłącza flagę "cicho".
.TP 
\fBowner\fP
Pozwala każdemu zwykłemu (tzn. nie rootowi) użytkownikowi na zamontowanie i
odmontowanie systemu plików, jeśli jest on właścicielem urządzenia. Opcja ta
implikuje opcje \fBnosuid\fP, i \fBnodev\fP (chyba że są przesłaniane przez
następne opcje, jak w linii \fBowner,dev,suid\fP).
.TP 
\fBremount\fP
Usiłuje ponownie zamontować już zamontowany system plików. Często używane do
zmiany flag montowania systemu, szczególnie aby umożliwić zapis na systemach
tylko do odczytu. Nie zmienia urządzenia ani punktu montowania.

Funkcja ponownego montowania przestrzega standardowego sposobu, w jaki
polecenie mount działa z opcjami z fstab. Oznacza to, że polecenie mount nie
odczytuje fstab (lub mtab) wyłącznie wtedy, jeśli podano \fIurządzenie\fP i
\fIkatalog\fP w sposób kompletny.

\fBmount \-o remount,rw /dev/foo /katalog\fP

Po tym wywołaniu wszystkie stare opcje montowania są zastępowane, a
arbitralne rzeczy z fstab są ignorowane, z wyjątkiem opcji loop=, która jest
tworzona i zarządzana wewnętrznie przez polecenie mount.

\fBmount \-o remount,rw /katalog\fP

Po tym wywołaniu mount odczytuje fstab (lub mtab) i łączy te opcje z opcjami
podanymi w wierszu poleceń (\fB\-o\fP).
.TP 
\fBro\fP
Montuje system plików w trybie tylko do odczytu.
.TP 
\fBrw\fP
Montuje system plików w trybie odczytu i zapisu.
.TP 
\fBsync\fP
Wszystkie operacje wejścia/wyjścia systemu plików powinny być wykonywane
synchroniczne. W\ przypadku nośników z ograniczoną liczbą cykli zapisu
(np. niektórych napędów flash) "sync" może spowodować skrócenie trwałości
nośnika.
.TP 
\fBuser\fP
Pozwala na zamontowanie tego systemu plików przez zwykłego
użytkownika. Nazwa montującego użytkownika jest zapisywana do mtab, więc
może on ponownie odmontować system plików. Opcja ta implikuje opcje
\fBnoexec\fP, \fBnosuid\fP, i \fBnodev\fP (chyba że są przesłaniane przez następne
opcje, jak w linii \fBuser,exec,dev,suid\fP).
.TP 
\fBnouser\fP
Zabrania zwykłemu użytkownikowi (tzn. innemu niż root) montowania systemu
plików. Tak jest domyślnie.
.TP 
\fBusers\fP
Pozwala każdemu użytkownikowi na zamontowanie i odmontowanie tego systemu
plików.  Opcja ta implikuje opcje \fBnoexec\fP, \fBnosuid\fP, i \fBnodev\fP (chyba że
są przesłaniane przez następne opcje, jak w linii \fBuser,exec,dev,suid\fP).

.SH "OPCJE MONTOWANIA SPECYFICZNE DLA RÓŻNYCH SYSTEMÓW PLIKÓW"
Następujące opcje stosuje się tylko do określonych systemów plików.  Są
uporządkowane według systemu plików. Wszystkie występują po fladze \fB\-o\fP.

To, czy opcje są obsługiwane, zależy w pewnej mierze od działającego
jądra. Więcej informacji można uzyskać w podkatalogu źródeł jądra
\fIDocumentation/filesystems\fP.

.SH "Opcje montowania do adfs"
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Ustawia właściciela i grupę plików w danym systemie plików (domyślnie:
uid=gid=0).
.TP 
\fBownmask=\fP\fIwartość\fP i \fBothmask=\fP\fIwartość\fP
Ustawia maskę praw dla, odpowiednio, uprawnień 'właściciela' i uprawnień
\&'innych' ADFS\ (domyślnie, odpowiednio: 0700 i 0077).  Zobacz także
\fI/usr/src/linux/Documentation/filesystems/adfs.txt\fP.
.SH "Opcje montowania do affs"
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Ustawia właściciela i grupę korzenia systemu plików (domyślnie: uid=gid=0),
lecz opcje \fBuid\fP lub \fBgid\fP bez podanej wartości pobierają uid i gid
bieżącego procesu).
.TP 
\fBsetuid=\fP\fIwartość\fP i \fBsetgid=\fP\fIwartość\fP
Ustawia właściciela i grupę wszystkich plików.
.TP 
\fBmode=\fP\fIwartość\fP
Ustawia prawa wszystkich plików na \fIwartość\fP & 0777, nie zważając na
oryginalne prawa.  Dodaje prawa przeszukiwania dla katalogów, które mają
prawo odczytu.  Wartość jest podawana ósemkowo.
.TP 
\fBprotect\fP
Nie dopuszcza do zmian w bitach ochrony systemu plików.
.TP 
\fBusemp\fP
Ustawia uid i gid korzenia systemu plików na uid i gid punktu montowania, aż
do pierwszego sync lub umount, a potem kasuje tę opcję. Dziwne...
.TP 
\fBverbose\fP
Wypisuje informację o każdym pomyślnym montowaniu.
.TP 
\fBprefix=\fP\fInapis\fP
Przedrostek używany przed nazwą wolumenu, przy podążaniu za dowiązaniem.
.TP 
\fBvolume=\fP\fInapis\fP
Przedrostek (długości najwyżej 30), używany przed '/' przy podążaniu za
dowiązaniem symbolicznym.
.TP 
\fBreserved=\fP\fIwartość\fP
(Domyślnie: 2.) Liczba nieużytkowanych bloków na początku urządzenia.
.TP 
\fBroot=\fP\fIwartość\fP
Podaje jawnie lokalizację bloku korzenia (root block).
.TP 
\fBbs=\fP\fIwartość\fP
Podaje rozmiar bloku. Dozwolone wartości to 512, 1024, 2048, 4096.
.TP 
\fBgrpquota\fP|\fBnoquota\fP|\fBquota\fP|\fBusrquota\fP
Opcje te są przyjmowane, lecz są ignorowane (jednakże narzędzia przydziałów
dyskowych (quota) mogą reagować na takie łańcuchy w \fI/etc/fstab\fP).

.SH "Opcje montowania do xiafs"
Patrz sekcja opcji na stronie podręcznika \fBmount.cifs\fP(8) (pakiet smbfs
musi być zainstalowany).

.SH "Opcje montowania do coherent"
Brak.

.SH "Opcje montowania do debugfs"
.\" or just /debug
.\" present since 2.6.11
System plików debugfs jest pseudosystemem, montowanym tradycyjnie w
\fI/sys/kernel/debug\fP. Nie ma opcji montowania.

.SH "Opcje montowania do devpts"
devpts jest pseudosystemem plików, tradycyjnie montowanym w \fI/dev/pts\fP.  W
celu uzyskania pseudoterminala, proces otwiera \fI/dev/ptmx\fP.  Jest mu
wówczas udostępniany numer pseudoterminala; podporządkowany pseudoterminal
jest dostępny jako \fI/dev/pts/\fP<numer>.
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Ustawia właściciela lub grupę nowotworzonych PTY według zadanych wartości.
Jeśli nie podano żadnych, to zostaną nadane UID i GID procesu tworzącego.
Na przykład, jeśli mamy grupę tty o GID=5, to \fBgid=5\fP spowoduje, że nowo
tworzone PTY będą należeć do grupy tty.
.TP 
\fBmode=\fP\fIwartość\fP
Nadaje trybowi nowo tworzonych PTY zadaną wartość. Domyślnie jest to 0600.
Wartość \fBmode=620\fP i \fBgid=5\fP powoduje, że dla nowo utworzonych PTY będzie
domyślnie "mesg y".
.TP 
\fBnewinstance\fP
Tworzy prywatną instancję systemu plików devpts tak, że wskaźniki pty
zaalokowane w tej nowej kopii są niezależne od wskaźników utworzonych w
innych instancjach devpts.

Wszystkie montowania devpts bez opcji \fBnewinstance\fP współdzielą ten sam
zestaw wskaźników pty (np. tryb legacy). Każde zamontowanie devpts z opcją
\fBnewinstance\fP tworzy prywatny zestaw wskaźników pty.

Opcja jest używana głównie do obsługi kontenerów, w jądrze Linux, od wersji
2.6.29. Co więcej, ta opcja jest poprawna jedynie, jeśli w konfiguracji
jądra włączono CONFIG_DEVPTS_MULTIPLE_INSTANCES.

Aby użyć tej opcji w sposób efektywny, \fI/dev/ptmx\fP musi być dowiązaniem
symbolicznym do \fIpts/ptmx\fP. Proszę zapoznać się z plikiem
\fIDocumentation/filesystems/devpts.txt\fP w kodzie źródłowym jądra Linux, aby
dowiedzieć się więcej.
.TP 
\fBptmxmode=\fP\fIwartość\fP

Ustawia tryb nowego węzła urządzenia \fIptmx\fP w systemie plików devpts.

Z obsługą wielu instancji devpts (patrz powyżej: opcja \fBnewinstance\fP),
każda kopia posiada prywatny węzeł \fIptmx\fP w katalogu głównym systemu plików
devpts (z reguły \fIdev/pts/ptmx\fP).

W celu uzyskania kompatybilności ze starszymi wersjami jądra, domyślnym
trybem nowego węzła \fIptmx\fP jest 0000. \fBptmxmode=\fP\fIwartość\fP określa
bardziej przydatny tryb dla nowego węzła \fIptmx\fP i jest wysoce zalecany, gdy
podana jest opcja \fBnewinstance\fP.

Opcja została zaimplementowana jedynie w wersjach jądra Linux poczynając od
2.6.29. Co więcej, opcja ta jest poprawna jedynie, jeśli w konfiguracji
jądra włączono CONFIG_DEVPTS_MULTIPLE_INSTANCES.

.SH "Opcje montowania do ext"
Brak. Proszę zauważyć, że system plików "ext" jest przedawniony. Proszę go
nie używać. Od Linuksa w wersji 2.1.21 kod źródłowy jądra nie zawiera już
extfs.

.SH "Opcje montowania do ext2"
.\" Due to a kernel bug, it may be mounted with random mount options
.\" (fixed in Linux 2.0.4).
System plików "ext2" jest standardowym systemem plików Linuksa. Od jądra w
wersji 2.5.46, domyślne wartości opcji montowania są określone przez
superblok systemu plików. Ustawia się go za pomocą \fBtune2fs\fP(8).
.TP 
\fBacl\fP|\fBnoacl\fP
.\" requires CONFIG_EXT2_FS_POSIX_ACL
Obsługuje (lub odpowiednio: nie obsługuje) listy kontroli dostępu (Access
Control Lists) POSIX.
.TP 
\fBbsddf\fP|\fBminixdf\fP
Ustala zachowanie funkcji systemowej \fIstatfs\fP.  Zachowanie \fBminixdf\fP to
zwracanie w polu \fIf_blocks\fP całkowitej ilość bloków systemu plików, podczas
gdy zachowaniem \fBbsddf\fP (które jest domyślne) jest odejmowanie nadmiarowych
bloków używanych przez ext2 i niedostępnych dla przechowywania plików. Tak
więc
.nf

% mount /k \-o minixdf; df /k; umount /k
Filesystem   1024\-blocks  Used Available Capacity Mounted on
/dev/sda6      2630655   86954  2412169      3%   /k
% mount /k \-o bsddf; df /k; umount /k
Filesystem   1024\-blocks  Used Available Capacity Mounted on
/dev/sda6      2543714      13  2412169      0%   /k

.fi
(Zauważ, że ten przykład pokazuje, że można dodać opcje wiersza poleceń do
opcji podanych w \fI/etc/fstab\fP.)

.TP 
\fBcheck=\fP{\fBnone\fP|\fBnocheck\fP}
Podczas montowania nie przeprowadzane jest sprawdzanie. Jest to zachowanie
domyślne. I szybkie. Roztropnie jest wywoływać co jakiś czas \fBe2fsck\fP(8)
np. w czasie rozruchu systemu.
.TP 
\fBdebug\fP
Wypisuje informacje diagnostyczne przy każdym (re)montowaniu.
.TP 
\fBerrors=\fP{\fBcontinue\fP|\fBremount\-ro\fP|\fBpanic\fP}
Definiuje zachowanie przy napotkaniu błędu (albo ignoruje błędy, zaznaczając
tylko system plików jako błędny i kontynuując, albo ponownie montuje system
plików na tylko do odczytu, albo panikuje i zatrzymuje system). Domyślne
ustawienie jest wpisane w superbloku systemu plików i może być zmienione za
pomocą \fBtune2fs\fP(8).
.TP 
\fBgrpid\fP|\fBbsdgroups\fP i \fBnogrpid\fP|\fBsysvgroups\fP
Opcje te definiują, jaki identyfikator grupy (gid) otrzyma nowo utworzony
plik. Gdy ustawiony jest \fBgrpid\fP, to pobiera gid katalogu, w którym jest
utworzony; w przeciwnym wypadku (domyślnie) bierze fsgid bieżącego procesu,
chyba że katalog ma ustawiony bit setgid, wówczas pobiera gid katalogu
rodzicielskiego i dodatkowo otrzymuje bit setgid, jeśli sam jest katalogiem.
.TP 
\fBgrpquota\fP|\fBnoquota\fP|\fBquota\fP|\fBusrquota\fP
Opcje te są przyjmowane, lecz ignorowane.
.TP 
\fBnouid32\fP
Wyłącza 32\-bitowe UID\-y i GID\-y w celu zachowania zgodności ze starszymi
jądrami, które przechowują i oczekują wartości 16\-bitowych.
.TP 
\fBoldalloc\fP lub \fBorlov\fP
Używa starego alokatora lub alokatora Orlov do nowych i\-węzłów. Domyślnie
używany jest Orlov.
.TP 
\fBresgid=\fP\fIn\fP i \fBresuid=\fP\fIn\fP
System plików ext2 rezerwuje pewną ilość wolnego miejsca (domyślnie 5%,
zobacz \fBmke2fs\fP(8)  i \fBtune2fs\fP(8)).  Opcje te określają, kto może używać
zarezerwowanych bloków.  (Ogólnie: każdy, kto ma podany uid lub należy do
podanej grupy.)
.TP 
\fBsb=\fP\fIn\fP
Zamiast bloku 1, jako superbloku używa bloku \fIn\fP.  Może to być przydatne,
gdy system plików został uszkodzony. Zazwyczaj kopie superbloku znajdują się
co 8192 bloków: w bloku 1, 8193, 16385, ...  (Dlatego na dużym systemie
plików istnieją setki, lub nawet tysiące kopii superbloku. Od wersji 1.08,
\fBmke2fs\fP ma opcję \-s (sparse superblock), redukującą liczbę zapasowych
superbloków, a od wersji 1.15 jest ona domyślna. Zauważ, że może to
oznaczać, że systemy plików typu ext2 stworzone przez nowe \fBmke2fs\fP nie
mogą być montowane do zapisu pod Linuksem 2.0.*.)  Liczba bloków podawana
jest w jednostkach 1k. Dlatego, aby użyć logicznego bloku 32768 na systemie
plików z blokami o rozmiarze 4k, należy podać "sb=131072".
.TP 
\fBuser_xattr\fP|\fBnouser_xattr\fP
.\" requires CONFIG_EXT2_FS_XATTR
Obsługuje (lub odpowiednio:\ nie obsługuje) rozszerzonych atrybutów "user.".


.SH "Opcje montowania do ext3"
.\" .TP
.\" .BR abort
.\" Mount the filesystem in abort mode, as if a fatal error has occurred.
System plików "ext3" jest wersją systemu ext2, uzupełnioną o dziennik
(journal).  Przyjmuje takie same opcje jak ext2 oraz dodatkowo:
.TP 
\fBjournal=update\fP
Aktualizuje dziennik systemu plików ext3 do obecnego formatu.
.TP 
\fBjournal=inum\fP
Jeżeli dziennik już istnieje, ta opcja jest ignorowana. W przeciwnym
wypadku, określa numer i\-węzła, który reprezentuje dziennik systemu plików
ext3; ext3 utworzy nowy dziennik, nadpisując starą zawartość pliku, który
zajmuje i\-węzeł o numerze \fIinum\fP.
.TP 
\fBjournal_dev=devnum\fP
Gdy główny (major)/poboczny (minor) numer urządzenia rozszerzonego dziennika
zmieni się, ta opcja umożliwia użytkownikowi na określenie nowego położenia
dziennika. Urządzenie dziennika jest identyfikowane przez główny/poboczny
numer urządzenia, podany w devnum.
.TP 
\fBnorecovery\fP/\fBnoload\fP
Nie ładuje dziennika w czasie montowania. Proszę zauważyć, że jeśli system
plików nie został poprawnie odmontowany, pominięcie odtworzenia z dziennika
może spowodować pozostawienie niespójności w systemie plików, które mogą być
następnie przyczyną wielu problemów.
.TP 
\fBdata=\fP{\fBjournal\fP|\fBordered\fP|\fBwriteback\fP}
Określa tryb dziennika do plików z danymi. Metadane są zawsze włączane do
dziennika. Aby użyć trybów innych niż \fBordered\fP na głównym (root) systemie
plików, proszę je podać do jądra jako parametry rozruchowe
np. \fIrootflags=data=journal\fP.
.RS
.TP 
\fBjournal\fP
Wszystkie dane są zapisywane do dziennika zanim zostaną zapisane do głównego
systemu plików.
.TP 
\fBordered\fP
Domyślny tryb. Wszystkie dane są zapisywane bezpośrednio do głównego systemu
plików zanim ich metadane zostaną zapisane do dziennika.
.TP 
\fBwriteback\fP
Nie jest zachowywany porządek danych \- mogą one zostać zapisane do głównego
systemu plików po zapisaniu metadanych do dziennika.  Chodzą słuchy, że jest
to opcja zapewniająca największą wydajność.  Zachowuje integralność systemu
plików, jednakże po krachu systemu i odtwarzaniu dziennika w plikach mogą
się pojawić stare dane.
.RE
.TP 
\fBbarrier=0\fP / \fBbarrier=1\fP
Włącza/wyłącza bariery (barriers). barrier=0 wyłącza je, barrier=1
włącza. Bariery zapisu wymuszają poprawną kolejność wpisów dziennika na
dysku, czyniąc ulotne bufory zapisu dysku bezpieczne w użyciu, z pewnym
obniżeniem wydajności. System plików ext3 nie włącza domyślnie barier
zapisu. Proszę się upewnić, że bariery są włączone, chyba że dyski mają w
jakiś sposób zabezpieczone zasilanie. W przeciwnym wypadku istnieje ryzyko
błędu w systemie plików w przypadku nagłego braku zasilania.
.TP 
\fBcommit=\fP\fIliczba\-sekund\fP
Synchronizuje wszystkie dane i metadane co \fIliczba\-sekund\fP sekund. Domyślną
wartością jest 5 sekund. Zero oznacza wartość domyślną.
.TP 
\fBuser_xattr\fP
Włącza rozszerzone atrybuty użytkownika (Extended User Attributes). Patrz
strona podręcznika \fBattr\fP(5).
.TP 
\fBacl\fP
Włącza listy kontroli dostępu (Acces Control Lists) POSIX. Patrz strona
podręcznika \fBacl\fP(5).

.SH "Opcje montowania do ext4"
System plików ext4 jest zaawansowaną postacią ext3, która posiada
rozszerzenia skalowalności i niezawodności, pomocne w przypadku dużych
systemów plików.

Opcje \fBjournal_dev, noload, data, commit, orlov, oldalloc, [no]user_xattr\fP
\fB[no]acl, bsddf, minixdf, debug, errors, data_err, grpid, bsdgroups,
nogrpid\fP \fBsysvgroups, resgid, resuid, sb, quota, noquota, grpquota\fP i
\fBusrquota\fP są wstecznie kompatybilne z ext3 i ext2.
.TP 
\fBjournal_checksum\fP
Włącza tworzenie sum kontrolnych transakcji dziennika. Pozwala to na
wykrycie błędów w jądrze przez kod odzyskiwania w e2fsck i samo jądro. Jest
to zmiana kompatybilna, ignorowana przez starsze jądra.
.TP 
\fBjournal_async_commit\fP
Zatwierdzany blok może być zapisany na dysk bez czekania na bloki
deskryptora. Jeśli jest włączona, starsze jądra nie mogą zamontować danego
urządzenia. Opcja włącza wewnętrznie również "journal_checksum".
.TP 
\fBjournal=update\fP
Aktualizuje dziennik systemu plików ext4 do obecnego formatu.
.TP 
\fBbarrier=0\fP / \fBbarrier=1\fP / \fBbarrier\fP / \fBnobarrier\fP
Włącza/wyłącza wykorzystanie barier zapisu przy kodzie jbd. barrier=0
wyłącza ją, a barrier=1 włącza. Opcja wymaga stosu wejścia/wyjścia zdolnego
obsłużyć bariery; jeśli jbd otrzyma błąd przy zapisie barier wyłączy tę
opcję ponownie, wypisując ostrzeżenie. Bariery zapisu wymuszają poprawną
kolejność wpisów dziennika na dysku, czyniąc ulotne bufory zapisu dysku
bezpieczne w użyciu, z pewnym obniżeniem wydajności. Jeśli dyski mają w
jakiś sposób zabezpieczone zasilanie, to wyłączenie barier może w bezpieczny
sposób poprawić wydajność. Do włączenia lub wyłączenia barier można również
użyć opcji montowania, odpowiednio, "barrier" i "nobarrier", aby zachować
spójność z innymi opcjami montowania ext4.

Domyślnie, system plików ext4 posiada włączone bariery zapisu.
.TP 
\fBinode_readahead=\fP\fIn\fP
Ten parametr kontroluje maksymalną liczbę bloków tablicy i\-węzłów, które
algorytm czytania z wyprzedzeniem tablicy i\-węzłów ext4 będzie ładował
wstępnie do podręcznego buforu. Domyślną wartością są 32 bloki.
.TP 
\fBstripe=\fP\fIn\fP
Liczba bloków systemu plików, które mballoc będzie próbował używać do
rozmiaru alokowania i wyrównywania. Do systemów RAID 5/6 powinna być to
liczba dysków z danymi * rozmiar części (chunk) RAID w blokach systemu
plików.
.TP 
\fBdelalloc\fP
Odroczona alokacja bloków do czasu zapisu.
.TP 
\fBnodelalloc\fP
Wyłącza odroczoną alokacją. Bloki są alokowane gdy dane są kopiowane z
buforów (cache) użytkownika do buforów stronicowania.
.TP 
\fBmax_batch_time=\fP\fImikrosekundy\fP
Maksymalny czas, jaki ext4 powinien czekać na łączne, wsadowe wykonanie
przez system plików dodatkowych operacji, za pomocą synchronicznej operacji
zapisu. Ponieważ synchroniczna operacja zapisu wymusza wykonanie zapisu, a
następnie czeka na zakończenie wejścia/wyjścia, nie kosztując zbyt dużo i
potencjalnie wykazując się znacznym zyskiem przepływności, czekamy przez
krótki czas sprawdzając, czy nie można przy okazji zapisu synchronicznego
dokonać również innych transakcji zapisu. Używany algorytm jest
zaprojektowany w celu automatycznego dostosowania do szybkości dysku,
mierząc (średni) czas jaki potrzebny jest do zakończenia wprowadzania
transakcji w życie. Można nazwać ten czas "czasem wykonania". Jeśli czas,
przez jaki działa transakcja jest mniejszy od czasu wykonania, to ext4
spróbuje wstrzymać się przez czas wykonania, sprawdzając, czy inne operacje
nie mogą dołączyć się do transakcji. Czas wykonania jest ograniczony
wielkością max_batch_time, która domyślnie wynosi 15000 mikrosekund
(15ms). Ta optymalizacja może być całkowicie wyłączona przez ustawienie
wartości max_batch_time na 0.
.TP 
\fBmin_batch_time=\fP\fImikrosekundy\fP
Parametr ustawia czas wykonania (jak opisano powyżej) na minimum
min_batch_time. Domyślnie jest to 0 mikrosekund. Zwiększanie tej wartości
może poprawić przepływność przy wielowątkowym, synchronicznym obciążeniu i
bardzo szybkich dyskach, kosztem zwiększonych opóźnień.
.TP 
\fBjournal_ioprio=\fP\fIprio\fP
Priorytet wejścia/wyjścia (od 0 do 7, gdzie 0 jest najwyższym priorytetem),
który powinien być użyty do operacji wejścia/wyjścia przedstawionych przez
kjournald2 podczas operacji wykonania. Domyślnie zostanie użyta wartość 3,
która jest nieznacznie wyższym priorytetem, niż domyślny priorytet
wejścia/wyjścia.
.TP 
\fBabort\fP
Symuluje efekt wywołania funkcji ext4_abort() w celach debugowania. Jest ona
zwykle używana podczas ponownego montowania systemu plików, który został już
zamontowany.
.TP 
\fBauto_da_alloc\fP|\fBnoauto_da_alloc\fP
Wiele złych aplikacji nie używa fsync() podczas zastępowania plików za
pomocą wzorców takich jak

fd = open("foo.new")/write(fd,..)/close(fd)/ rename("foo.new", "foo")

lub nawet gorzej

fd = open("foo", O_TRUNC)/write(fd,..)/close(fd).

Jeśli opcja auto_da_alloc jest włączona, ext4 będzie wykrywał wzorce
zamień\-zmieniając\-nazwę i zamień\-obcinając i wymuszał sytuację, że bloki
mające być zaalokowane z opóźnieniem są alokowane w następnym wprowadzeniu
dziennika, w domyślnym trybie data=ordered, a zapis bloków danych nowego
pliku jest wymuszany przed zatwierdzeniem operacji rename(). Zapewnia to
podobny poziom bezpieczeństwa co ext3 i zapobiega problemowi "plików zerowej
długości", który mógłby się pojawić przy załamaniu systemu przed zapisem
bloków o opóźnionej alokacji.
.TP 
\fBdiscard\fP/\fBnodiscard\fP
Kontroluje, czy ext4 powinien przeprowadzać polecenia discard/TRIM na
podległym urządzeniu blokowym, gdy bloki są zwalniane. Jest to przydatne w
przypadku urządzeń SSD i alokowania elastycznego/"rzadkiego" w jednostkach
LUN, ale domyślnie jest wyłączone do czasu odpowiedniego przetestowania tej
opcji.
.TP 
\fBnouid32\fP
Wyłącza 32\-bitowe UID\-y i GID\-y w celu zachowania zgodności ze starszymi
jądrami, które przechowują i oczekują wartości 16\-bitowych.
.TP 
\fBresize\fP
Pozwala na zmianę rozmiaru systemu plików do końca ostatniej istniejącej
grupy bloków, dalsze zmiany muszą być wykonane za pomocą resize2fs albo
online, albo offline. Może być użyta tylko w połączeniu z ponownym
zamontowaniem.
.TP 
\fBblock_validity\fP/\fBnoblock_validity\fP
Opcja pozwala na włączenie/wyłączenie wbudowanej w jądro możliwości
śledzenia bloków metadanych systemu plików w ramach wewnętrznych struktur
danych. Umożliwia to szybką lokalizację przez mechanizm alokowania
wieloblokowego (i inne) ekstentów mogących zachodzić na bloki metadanych
systemu plików. Opcja jest przeznaczona do debugowania i ponieważ wpływa
negatywnie na wydajność, jest domyślnie wyłączona.
.TP 
\fBdioread_lock\fP/\fBdioread_nolock\fP
Kontroluje, czy ext4 powinien używać blokowania odczytu DIO. Jeśli podano
opcję dioread_nolock, ext4 będzie alokował niezainicjowane ekstenty przed
zapisem bufora i konwersją ekstentu na zainicjowany po wykonaniu
wejścia/wyjścia. W ten sposób, kod ext4 może zapobiec wzajemnemu wykluczaniu
i\-węzłów, poprawiając skalowalność na szybkich nośnikach. Niestety, opcja
nie działa z dziennikiem danych i dioread_nolock zostanie wówczas
zignorowane wraz z ostrzeżeniem jądra. Proszę zauważyć, że ścieżka kodu
dioread_nolock jest używana tylko do plików wykorzystujących ekstenty. Z
powodu tych ograniczeń, opcja jest domyślnie wyłączona (tzn. dioread_lock).
.TP 
\fBi_version\fP
Włącza obsługę 64\-bitowej wersji i\-węzłów. Opcja jest domyślnie wyłączona.

.SH "Opcje montowania do fat"
(Uwaga: \fIfat\fP nie jest odrębnym rodzajem systemu plików, ale wspólną
częścią systemów plików \fImsdos\fP, \fIumsdos\fP i \fIvfat\fP.)
.TP 
\fBblocksize=\fP{\fB512\fP|\fB1024\fP|\fB2048\fP}
Ustawia rozmiar bloku (domyślnie 512). Opcja jest przestarzała.
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Ustawia właściciela i grupę wszystkich plików (domyślnie: uid i gid
bieżącego procesu).
.TP 
\fBumask=\fP\fIwartość\fP
Ustawia umask (maskę bitową praw, które \fBnie\fP występują). Domyślnie używany
jest umask bieżącego procesu.  Wartość podawana jest ósemkowo.
.TP 
\fBdmask=\fP\fIwartość\fP
.\" Present since Linux 2.5.43.
Ustawia umask ustawiany wyłącznie do katalogów. Domyślnie używany jest umask
bieżącego procesu.  Wartość podawana jest ósemkowo.
.TP 
\fBfmask=\fP\fIwartość\fP
.\" Present since Linux 2.5.43.
Ustawia umask ustawiany wyłącznie do zwykłych plików. Domyślnie używany jest
umask bieżącego procesu.  Wartość podawana jest ósemkowo.
.TP 
\fBallow_utime=\fP\fIwartość\fP
Opcja kontroluje sprawdzanie uprawnień mtime/atime
.RS
.TP 
\fB20\fP
Jeśli bieżący proces jest w grupie identyfikatora grupy pliku, można zmienić
pieczątkę czasową.
.TP 
\fB2\fP
Inny użytkownicy mogą zmieniać pieczątkę czasową.
.PP
Wartość domyślna jest ustawiana z opcji "dmask" (jeśli katalog jest
zapisywalny, to dozwolone jest również \fButime(2)\fP np. ~dmask & 022).

Zwykle \fButime(2)\fP sprawdza czy bieżący proces jest właścicielem pliku lub
czy posiada właściwość CAP_FOWNER. Jednak systemy plików FAT nie posiadają
na dysku uid ani gid, więc zwykłe sprawdzenie jest zbyt mało
elastyczne. Opcja jest remedium na tę sytuację.
.RE
.TP 
\fBcheck=\fP\fIwartość\fP
Można wybrać trzy stopnie:
.RS
.TP 
\fBr\fP[\fBelaxed\fP]
Akceptowane i równoważne sobie są zarówno wielkie, jak i małe litery.
Części długich nazw są obcinane (np.  \fIverylongname.foobar\fP staje się
\fIverylong.foo\fP), początkowe i wtrącone spacje są akceptowane jako każda
część nazwy (nazwy i rozszerzenia).
.TP 
\fBn\fP[\fBormal\fP]
Podobnie jak "relaxed", lecz wiele znaków specjalnych (jak *, ?, <,
spacje, itp.) jest odrzucanych. Tak jest domyślnie.
.TP 
\fBs\fP[\fBtrict\fP]
Jak "normal", lecz nazwy nie mogą zawierać długich części i znaków
specjalnych, które czasem są używane pod Linuksem, lecz nie są akceptowane
przez MS\-DOS (+, =, spacje itp.)
.RE
.TP 
\fBcodepage=\fP\fIwartość\fP
Ustawia stronę kodową do konwersji znaków krótkiej nazwy w systemach plików
FAT i VFAT. Domyślnie stosowana jest strona kodowa 437.
.TP 
\fBconv=\fP{\fBb\fP[\fBinary\fP]|\fBt\fP[\fBext\fP]|\fBa\fP[\fButo\fP]}
System plików \fIfat\fP może dokonywać konwersji CRLF<\-\->NL (format
tekstowy MS\-DOS na format tekstowy UNIX) w jądrze. Dostępne są następujące
tryby konwersji:
.RS
.TP 
\fBbinary\fP
brak konwersji. Domyślne.
.TP 
\fBtext\fP
Konwersja CRLF<\-\->NL wykonywana dla wszystkich plików.
.TP 
\fBauto\fP
Konwersja CRLF<\-\->NL dla wszystkich plików, które nie mają "ogólnie
znanego rozszerzenia binarnego". Listę znanych rozszerzeń można znaleźć na
początku \fIfs/fat/misc.c\fP (w wersji 2.0, na liście są: exe, com, bin, app,
sys, drv, ovl, ovr, obj, lib, dll, pif, arc, zip, lha, lzh, zoo, tar, z,
arj, tz, taz, tzp, tpz, gz, tgz, deb, gif, bmp, tif, gl, jpg, pcx, tfm, vf,
gf, pk, pxl, dvi).
.PP
Programy, które dokonują obliczonych lseek\-ów, nie będą zadowolone z
konwersji. Niektórzy ludzie utracili dane przez tę translację. Strzeżcie
się!

Dla systemów zamontowanych w trybie binarnym, dostępne są narzędzia
konwersji (fromdos/todos). Ta opcja jest przestarzała.
.RE
.TP 
\fBcvf_format=\fP\fImoduł\fP
Wymusza na sterowniku stosowanie modułu CVF (Compressed Volume File)
cvf_\fImoduł\fP zamiast automatycznego wykrywania. Jeżeli jądro obsługuje kmod,
to opcja cvf_format=xxx steruje także ładowaniem na żądanie modułu CVF. Ta
opcja jest przestarzała.
.TP 
\fBcvf_option=\fP\fIopcja\fP
Opcja przekazywana do modułu CVF. Ta opcja jest przestarzała.
.TP 
\fBdebug\fP
Włącza flagę \fIdebug\fP.  Wypisana zostanie wersja i lista parametrów systemu
plików (te dane wypisywane są też jeśli parametry są niespójne).
.TP 
\fBfat=\fP{12\fB|\fP16\fB|\fP32\fB}\fP
Określa fat 12\-, 16\- lub 32\-bitowy. To przesłania procedurę automatycznego
wykrywania typu FAT. Używaj ostrożnie!
.TP 
\fBiocharset=\fP\fIwartość\fP
Zestaw znaków używany do konwersji między znakami 8\-bitowymi a 16\-bitowymi
znakami Unikodu. Domyślnym jest iso8859\-1. Długie nazwy plików są
przechowywane na dysku w formacie Unicode.
.TP 
\fBtz=UTC\fP
Opcja wyłącza konwersję pieczątek czasowych pomiędzy czasem lokalnym
(używanym przez Windows na FAT) i UTC (używanym wewnętrznie przez
Linuksa). Jest to przydatne szczególnie podczas montowania urządzeń
(np. aparatów cyfrowych), które są ustawione na UTC, aby uniknąć pułapki
związanej z czasem lokalnym.
.TP 
\fBquiet\fP
Włącza flagę \fIquiet\fP (cicho). Próby chown lub chmod nie zwracają błędów,
chociaż się nie udają.  Używaj ostrożnie!
.TP 
\fBshowexec\fP
Jeśli ustawiona, bit wykonywalności pliku jest dozwolony tylko, jeśli część
rozszerzenia nazwy jest jedną z .EXE, .COM lub .BAT. Domyślnie nie
ustawiona.
.TP 
\fBsys_immutable\fP
Jeśli ustawiona, atrybut ATTR_SYS w FAT jest obsługiwany jak flaga IMMUTABLE
w Linuksie. Domyślnie nie ustawiona.
.TP 
\fBflush\fP
Jeśli ustawiona, system plików będzie starał się opróżnić bufory na dysk
wcześniej niż zwykle. Domyślnie nie ustawione.
.TP 
\fBusefree\fP
Używa wartości "wolnych klastrów" ("free clusters"), przechowywanej w
FSINFO. Jest ona używana do pozyskania liczby wolnych klastrów bez
skanowania dysku. Nie jest ona jednak domyślnie używana, ponieważ ostatnie
wersje Windows niekiedy nie aktualizują jej poprawnie. W przypadku
przekonania, że wartość owych "wolnych klastrów" w FSINFO jest poprawna,
używając tej opcji można zapobiec skanowaniu dysku.
.TP 
\fBdots\fP, \fBnodots\fP, \fBdotsOK=\fP[\fByes\fP|\fBno\fP]
Różne bezmyślne próby wymuszenia konwencji Uniksa lub DOS\-u na systemie
plików FAT.

.SH "Opcje montowania do hpfs"
.TP 
\fBcreator=\fP\fIcccc\fP\fB, type=\fP\fIcccc\fP
Ustawia wartości creator/type pokazywane przez MacOS\-owy Finder, używane do
tworzenia nowych plików. Domyślne wartości: "????".
.TP 
\fBuid=\fP\fIn\fP\fB, gid=\fP\fIn\fP
Ustawia właściciela i grupę wszystkich plików (domyślnie: uid i gid
bieżącego procesu).
.TP 
\fBdir_umask=\fP\fIn\fP\fB, file_umask=\fP\fIn\fP\fB, umask=\fP\fIn\fP
Ustawia umask, używany do wszystkich katalogów, wszystkich zwykłych plików
lub wszystkich plików i katalogów. Domyślnie jest to umask bieżącego
procesu).
.TP 
\fBsession=\fP\fIn\fP
Ustawia sesję CD\-ROM\-u do zamontowania. Domyślnie, decyzja jest pozostawiana
sterownikowi CD\-ROM\-u. Opcja nie powiedzie się, jeśli urządzeniem będzie coś
innego niż CD\-ROM.
.TP 
\fBpart=\fP\fIn\fP
Wybiera numer partycji n z urządzenia. Ma sens tylko w przypadku
CD\-ROM\-ów. Domyślnie, tablica partycji nie jest w ogóle przetwarzana.
.TP 
\fBquiet\fP
Nie informuje o nieprawidłowych opcjach montowania.

.SH "Opcje montowania do hpfs"
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Ustawia właściciela i grupę wszystkich plików (domyślnie: uid i gid
bieżącego procesu).
.TP 
\fBumask=\fP\fIwartość\fP
Ustawia umask (maskę bitową praw, które \fBnie\fP występują). Domyślnie używany
jest umask bieżącego procesu.  Wartość podawana jest ósemkowo.
.TP 
\fBcase=\fP{\fBlower\fP|\fBasis\fP}
Konwertuje wszystkie nazwy plików na małe litery lub pozostawia bez zmian
(domyślnie: \fBcase=lower\fP).
.TP 
\fBconv=\fP{\fBbinary\fP|\fBtext\fP|\fBauto\fP}
Do \fBconv=text\fP, usuwa losowe znaki CR (konkretnie wszystkie, po których
występuje NL) podczas odczytu pliku.  Do \fBconv=auto\fP, wybiera mniej lub
bardziej losowo między \fBconv=binary\fP i \fBconv=text\fP.  Do \fBconv=binary\fP, po
prostu czyta to, co jest w pliku. Tak jest domyślnie.
.TP 
\fBnocheck\fP
Nie przerywa montowania gdy zawiodą pewne kontrole spójności.

.SH "Opcje montowania do iso9660"
ISO 9660 jest standardem opisującym strukturę systemu plików na CD\-ROM\-ach
(system ten jest również wykorzystywany na niektórych płytach DVD; patrz
również system plików \fIudf\fP).

Normalne nazwy plików \fIiso9660\fP pojawiają się w formacie 8.3
(tzn. występują DOS\-owe ograniczenia długości nazw plików), a w dodatku
wszystkie znaki pisane są wielkimi literami.  Poza tym nie ma pola
właściciela, ochrony, liczby dowiązań, zastrzeżeń dla urządzeń
znakowych/blokowych, itd.

Rozszerzeniem iso9660 jest Rock Ridge, który udostępnia wszystkie te
uniksopodobne właściwości. Najprościej mówiąc, dla każdego wpisu
katalogowego istnieją w nim rozszerzenia, które uzupełniają wszystkie
informacje.  Gdy używane jest Rock Ridge, system plików jest nieodróżnialny
od normalnego uniksowego systemu plików (poza tym, że jest tylko do odczytu,
oczywiście).
.TP 
\fBnorock\fP
Wyłącza korzystanie z rozszerzeń Rock Ridge, nawet jeśli są dostępne. Zob.\&
\fBmap\fP.
.TP 
\fBnojoliet\fP
Wyłącza korzystanie z rozszerzeń Joliet firmy Microsoft, nawet jeśli są
dostępne. Zob.\& \fBmap\fP.
.TP 
\fBcheck=\fP{\fBr\fP[\fBelaxed\fP]|\fBs\fP[\fBtrict\fP]}
Z \fBcheck=relaxed\fP, nazwa pliku przed dokonywaniem podglądu jest najpierw
przekształcana na małe litery. Prawdopodobnie ma to znaczenie tylko razem z
\fBnorock\fP i \fBmap=normal\fP.  (Domyślnie: \fBcheck=strict\fP.)
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Nadaje wszystkim plikom systemu plików wskazany identyfikator użytkownika i
grupy, być może przesłaniając informacje znalezione w rozszerzeniach Rock
Ridge.  (Domyślnie: \fBuid=0,gid=0\fP.)
.TP 
\fBmap=\fP{\fBn\fP[\fBormal\fP]|\fBo\fP[\fBff\fP]|\fBa\fP[\fBcorn\fP]}
Dla wolumenów typu innego niż Rock Ridge, normalna translacja nazwy
odwzorowuje wielkie litery ASCII na małe, porzuca kończące `;1' i zamienia
`;' na `.'.  Z \fBmap=off\fP nie jest dokonywana konwersja nazw. Zobacz
\fBnorock\fP.  (Domyślnie: \fBmap=normal\fP.)  \fBmap=acorn\fP jest podobne do
\fBmap=normal\fP, ale stosuje także rozszerzenia Acorn, jeśli występują.
.TP 
\fBmode=\fP\fIwartość\fP
Dla wolumenów typu innego niż Rock Ridge, nadaje wszystkim plikom wskazane
prawa. (Domyślnie: prawa dla odczytu dla wszystkich.)  Od Linuksa 2.1.37 nie
trzeba już podawać trybu dziesiętnie. (Tryb ósemkowy jest wskazywany przez 0
na początku).
.TP 
\fBunhide\fP
Pokazuje również pliki ukryte i powiązane (jeśli zwykłe pliki i pliki
powiązane lub ukryte mają te same nazwy plików, może to uczynić zwykłe pliki
niedostępnymi).
.TP 
\fBblock=\fP{\fB512\fP|\fB1024\fP|\fB2048\fP}
Ustawia rozmiar bloku we wskazanym wolumenie.  (Domyślnie: \fBblock=1024\fP.)
.TP 
\fBconv=\fP{\fBa\fP[\fButo\fP]|\fBb\fP[\fBinary\fP]|\fBm\fP[\fBtext\fP]|\fBt\fP[\fBext\fP]}
(Domyślnie: \fBconv=binary\fP.)  Od Linuksa 1.3.54 opcja ta już nie działa. (A
niebinarne ustawienia bywały bardzo niebezpieczne, często prowadziły do
milczącego niszczenia danych).
.TP 
\fBcruft\fP
Jeśli starszy bajt długości pliku zawiera inne śmieci, warto ustawić tę
opcję montowania, aby był ignorowany. Powoduje to, że maksymalny rozmiar
pliku nie może być większy niż 16 MB.
.TP 
\fBsession=\fP\fIx\fP
Wybiera numer sesji na CD wielosesyjnych. (Od 2.3.4.)
.TP 
\fBsbsector=\fP\fIxxx\fP
Sesja zaczyna się od sektora xxx. (Od 2.3.4.)
.LP
Poniższe opcje są takie same jak do vfat i podawanie ich ma sens tylko przy
używaniu płyt zakodowanych przy użyciu rozszerzeń Joliet firmy Microsoft.
.TP 
\fBiocharset=\fP\fIwartość\fP
Zestaw znaków używany do konwersji z 16\-bitowych znaków Unikodu na CD do
8\-bitowych znaków. Domyślnie jest to iso8859\-1.
.TP 
\fButf8\fP
Konwertuje 16\-bitowe znaki Unikodu na CD do UTF\-8.

.SH "Opcje montowania do jfs"
.TP 
\fBiocharset=\fP\fInazwa\fP
Zestaw znaków, używany do konwersji z Unikodu do ASCII. Domyślnie konwersja
nie jest przeprowadzana. Proszę użyć \fBiocharset=utf8\fP w celu tłumaczeń
UTF\-8. Opcja wymaga ustawienia CONFIG_NLS_UTF8 w pliku jądra \fI.config\fP.
.TP 
\fBresize=\fP\fIwartość\fP
Zmienia wielkość woluminu do \fIwartość\fP bloków. JFS obsługuje jedynie
powiększanie woluminu, nie zmniejszanie go. Opcja jest prawidłowa tylko
podczas ponownego montowania, gdy wolumin jest zamontowany do odczytu i
zapisu. Słowo kluczowe \fBresize\fP bez wartości, powiększy wolumin do pełnego
rozmiaru partycji.
.TP 
\fBnointegrity\fP
Nie zapisuje do dziennika. Głównym użyciem tej opcji jest możliwość
uzyskania wyższej wydajności przy przywracaniu woluminu z kopii
zapasowej. Integralność woluminu nie jest gwarantowana, jeśli system
zostanie nieprawidłowo zamknięty.
.TP 
\fBintegrity\fP
Domyślne. Zapisuje zmiany metadanych do dziennika. Można użyć tej opcji do
ponownego zamontowania woluminu, gdy wcześniej użyto opcji \fBnointegrity\fP, w
celu przywrócenia normalnego zachowania.
.TP 
\fBerrors=\fP{\fBcontinue\fP|\fBremount\-ro\fP|\fBpanic\fP}
Definiuje zachowanie przy napotkaniu błędu.  (Albo ignoruje błędy,
zaznaczając tylko system plików jako błędny i kontynuując, albo ponownie
montuje system plików na tylko do odczytu, albo panikuje i zatrzymuje
system.)
.TP 
\fBnoquota\fP|\fBquota\fP|\fBusrquota\fP|\fBgrpquota\fP
Opcje te są przyjmowane, lecz ignorowane.

.SH "Opcje montowania do miniksa"
Brak.

.SH "Opcje montowania do msdos"
Zobacz opcje do fat.  Jeśli system plików \fImsdos\fP wykryje niespójność,
zgłasza błąd i ustawia system plików na tylko do odczytu. System plików może
być znowu dostępny do zapisu przez ponowne zamontowanie.

.SH "Opcje montowania do ncpfs"
Tak jak przy \fInfs\fP, implementacja \fIncpfs\fP oczekuje binarnego argumentu
(\fIstruct ncp_mount_data\fP)  funkcji systemowej mount. Argument ten jest
konstruowany przez \fBncpmount\fP(8), a bieżąca wersja \fBmount\fP (2.12) nic nie
wie o ncpfs.

.SH "Opcje montowania do nfs i nfs4"
Patrz sekcja opcji na stronie podręcznika \fBnfs\fP(5) (pakiet nfs\-common musi
być zainstalowany).

Implementacja \fInfs\fP i \fInfs4\fP oczekuje binarnego argumentu (\fIstruct
nfs_mount_data\fP)  funkcji systemowej mount. Argument ten jest konstruowany
przez \fBmount.nfs\fP(8), a bieżąca wersja \fBmount\fP (2.13) nic nie wie o nfs i
nfs4.

.SH "Opcje montowania do ntfs"
.TP 
\fBiocharset=\fP\fInazwa\fP
.\" since 2.5.11
Zestaw znaków stosowany przy zwracaniu nazw plików.  W przeciwieństwie do
VFAT, NTFS eliminuje nazwy zawierające znaki nie dające się
przekształcić. Przestarzałe.
.TP 
\fBnls=\fP\fInazwa\fP
.\" since 2.5.11
Nowa nazwa dla opcji zwanej wcześniej \fIiocharset\fP.
.TP 
\fButf8\fP
Do konwersji nazw plików stosuje UTF\-8.
.TP 
\fBuni_xlate=\fP{\fB0\fP|\fB1\fP|\fB2\fP}
Dla 0 (lub `no' albo `false') nie używa specjalnych kodowań nieznanych
znaków Unikodu.  Dla 1 (lub `yes' albo `true') lub 2 używa 4\-bajtowych
sekwencji specjalnych w stylu vfat zaczynających się od ":". Liczba 2
oznacza kodowanie little\-endian, a 1 \- kodowanie big\-endian, z odwróconymi
bajtami.
.TP 
\fBposix=[0|1]\fP
Jeśli jest włączone (posix=1), to system plików rozróżnia wielkie i małe
litery. Nazwy zastępcze 8.3 są przedstawiane jako dowiązania twarde, a nie
pomijane. Ta opcja jest przestarzała.
.TP 
\fBuid=\fP\fIwartość\fP, \fBgid=\fP\fIwartość\fP i \fBumask=\fP\fIwartość\fP
Ustawia prawa plików dla danego systemu. Wartość umask powinna być podana
ósemkowo. Domyślnie właścicielem plików jest root i nikt inny nie może ich
czytać.

.SH "Opcje montowania do proc"
.TP 
\fBuid=\fP\fIwartość\fP i \fBgid=\fP\fIwartość\fP
Opcje te są rozpoznawane, lecz o ile wiadomo, nie mają żadnego efektu.

.SH "Opcje montowania do ramfs"
Ramfs jest systemem plików działającym w pamięci. Wystarczy go zamontować \-
i pojawia się. Odmontowanie usuwa go. Obecny od Linuksa 2.3.99pre4. Nie
posiada opcji montowania.

.SH "Opcje montowania do reiserfs"
Reiserfs jest systemem plików z dziennikiem.
.TP 
\fBconv\fP
Mówi wersji 3.6 oprogramowania reiserfs, aby zamontowała wersję 3.5 systemu
plików, używając formatu 3.6 dla nowo utworzonych plików. Ten system plików
nie będzie już zgodny z wersją 3.5 narzędzi reiserfs.
.TP 
\fBhash=\fP{\fBrupasov\fP|\fBtea\fP|\fBr5\fP|\fBdetect\fP}
Wybiera funkcję mieszającą (haszującą) do znajdowania plików w katalogach.
.RS
.TP 
\fBrupasov\fP
Funkcja haszująca autorstwa Yury Yu. Rupasova. Jest szybka i zachowuje
lokalizację, mapując nazwy plików bliskie w porządku leksykograficznym na
bliskie sobie wartości funkcji. Z powodu wysokiego prawdopodobieństwa
kolizji w haszowaniu, ta opcja nie powinna być używana.
.TP 
\fBtea\fP
Funkcja Davis\-Meyera zaimplementowana przez Jeremy'ego Fitzhardinge'a.
Używa mieszania permutującego bity w nazwie pliku. Wykazuje dużą losowość
wyników i teoretycznie małe prawdopodobieństwo kolizji.  Może być używana,
jeżeli funkcja r5 powoduje błędy EHASHCOLLISION.
.TP 
\fBr5\fP
Zmodyfikowana wersja funkcji rupasov. Używana domyślnie i jest najlepszym
wyborem, jeżeli system plików nie zawiera dużych katalogów i niezwykłych
nazw plików.
.TP 
\fBdetect\fP
Powoduje, że \fImount\fP wykryje, która funkcja mieszająca jest używana,
sprawdzając właśnie montowany system plików, i zapisze tę informację w
superbloku systemu reiserfs.  Ta opcja jest użyteczna przy pierwszym
montowaniu systemu plików o starym formacie.
.RE
.TP 
\fBhashed_relocation\fP
Stroi mechanizm przydzielania bloków. Może powodować w pewnych
okolicznościach poprawienie wydajności systemu.
.TP 
\fBno_unhashed_relocation\fP
Stroi mechanizm przydzielania bloków. Może powodować w pewnych
okolicznościach poprawienie wydajności systemu.
.TP 
\fBnoborder\fP
Wyłącza algorytm przydzielania granicznego wymyślony przez Yury'ego
Yu. Rupasova.  Może powodować w pewnych okolicznościach poprawienie
wydajności systemu.
.TP 
\fBnolog\fP
Wyłącza dziennik. Może w pewnych sytuacjach spowodować nieznaczne
podniesienie wydajności systemu kosztem utracenia szybkiego odzyskiwania
danych po krachu systemu.  Nawet jeśli ta opcja jest włączona, reiserfs
wciąż przeprowadza wszystkie operacje związane z dziennikiem, ale go nie
zapisuje. Prace przy implementacji opcji \fInolog\fP wciąż trwają.
.TP 
\fBnotail\fP
Domyślnie reiserfs przechowuje małe pliki i `końcówki plików' bezpośrednio w
swoim drzewie. Jest to zachowanie mylące dla niektórych narzędzi użytkowych
takich jak \fBLILO\fP(8). Ta opcja wyłącza pakowanie plików do drzewa.
.TP 
\fBreplayonly\fP
Powtarza transakcje zapisane w dzienniku, ale nie montuje systemu plików.
Głównie używane przez \fIreiserfsck\fP.
.TP 
\fBresize=\fP\fIliczba\fP
Opcje remontowania, która pozwala na rozszerzenie partycji reiserfs.  Z tą
opcją reiserfs przyjmuje, że na urządzeniu jest \fIliczba\fP bloków.  Opcja
jest używana z urządzeniami zarządzanymi przez menedżera logicznych
woluminów (LVM).  Istnieje specjalne narzędzie \fIresizer\fP, które można
pobrać z \fIftp://ftp.namesys.com/pub/reiserfsprogs\fP.
.TP 
\fBuser_xattr\fP
Włącza rozszerzone atrybuty użytkownika (Extended User Attributes). Patrz
strona podręcznika \fBattr\fP(5).
.TP 
\fBacl\fP
Włącza listy kontroli dostępu (Acces Control Lists) POSIX. Patrz strona
podręcznika \fBacl\fP(5).
.TP 
\fBbarrier=none\fP / \fBbarrier=flush\fP
Włącza/wyłącza używanie barier zapisu w kodzie dziennika. barrier=none
wyłącza je, barrier=flush włącza. Bariery zapisu wymuszają właściwą
kolejność wpisów dziennika na dysku, czyniąc ulotne bufory zapisu dysku
bezpieczne w użyciu, kosztem pewnego obniżenia wydajności. System plików
reiserfs nie włącza domyślnie barier zapisu. Proszę się upewnić, że bariery
są włączone, chyba że dyski mają w jakiś sposób zabezpieczone zasilanie. W
przeciwnym wypadku istnieje ryzyko błędu w systemie plików w przypadku
nagłego braku zasilania.

.SH "Opcje montowania do romfs"
Brak.

.SH "Opcje montowania do squashfs"
Brak.

.SH "Opcje montowania do smbfs"
Tak jak \fInfs\fP, implementacja \fIsmbfs\fP oczekuje binarnego argumentu
(\fIstruct smb_mount_data\fP)  do funkcji systemowej mount. Argument ten jest
konstruowany przez \fBsmbmount\fP(8)  a bieżąca wersja \fBmount\fP (2.12) nie wie
nic o smbfs.

.SH "Opcje montowania do sysv"
Brak.

.SH "Opcje montowania do tmpfs"
.TP 
\fBsize=\fP\fInbajtów\fP
Przesłania domyślny, maksymalny rozmiar systemu plików. Rozmiar jest podany
w bajtach i zaokrąglony w górę do pełnych stron. Domyślnie zajmuję połowę
pamięci. Parametr rozmiar akceptuje również przyrostek %, w celu
ograniczenia tej instancji tmpfs do danej liczby procent fizycznej pamięci
RAM: domyślnie, jeśli nie poda się ani rozmiaru (size) ani numeru bloków
(nr_blocks), rozmiar wynosi 50% (size=50%).
.TP 
\fBnr_blocks=\fP
Podobnie jak size, ale w blokach PAGE_CACHE_SIZE.
.TP 
\fBnr_inodes=\fP
Maksymalna liczba i\-węzłów dla tej instancji. Domyślnie jest to połowa
fizycznej stronicowanej pamięci RAM lub (na komputerze z highmem) liczba
pamięci stronicowanej RAM lowmem (używana jest niższa z tych dwóch wartość)
.PP
Opcje montowania tmpfs dotyczące rozmiaru (\fBsize\fP, \fBnr_blocks\fP i
\fBnr_inodes\fP) akceptują przyrostek \fBk\fP, \fBm\fP lub \fBg\fP dla Ki, Mi, Gi
(binarne kilo, mega oraz giga) i mogą być zmienione w czasie ponownego
montowania.

.TP 
\fBmode=\fP
Określa początkowe prawa dostępu głównego katalogu.
.TP 
\fBuid=\fP
Identyfikator użytkownika
.TP 
\fBgid=\fP
Identyfikator grupy.
.TP 
\fBmpol=[default|prefer:Node|bind:NodeList|interleave|interleave:NodeList]\fP
Ustawia zasady (politykę) alokowania pamięci NUMA do wszystkich plików w
danej instancji (jeśli włączono opcję jądra CONFIG_NUMA) \- które może zostać
dostosowana "w locie" za pomocą "mount \-o remount ...".
.RS
.TP 
\fBdefault\fP
preferuje alokowanie pamięci z węzła lokalnego
.TP 
\fBprefer:Węzeł\fP
preferuje alokowanie pamięci z podanego Węzła
.TP 
\fBbind:ListaWęzłów\fP
alokuje pamięć tylko z węzłów z ListyWęzłów
.TP 
\fBinterleave\fP
alokuje pamięć z każdego węzła po kolei
.TP 
\fBinterleave:ListaWęzłów\fP
alokuje pamięć z każdego z węzłów z ListyWęzłów po kolei.
.PP
Format ListyWęzłów jest następujący: jest to lista (oddzielonych
przecinkami) liczb dziesiętnych i zakresów, gdzie zakres jest dwiema
liczbami dziesiętnymi (oddzielonymi minusem) \- najmniejszym i największym
numerem węzła w zakresie. Na przykład mpol=bind:0\-3,5,7,9\-15

Proszę zauważyć, że próba zamontowania tmpfs z opcją mpol nie powiedzie się,
jeśli działające jądro nie obsługuje NUMA oraz nie powiedzie się, jeśli jego
lista węzłów uwzględnia węzeł, który nie jest online. Jeśli bieżący system
opiera się na założeniu, że tmpfs jest zamontowany, ale od czasu do czasu
jest uruchamiany z jądrem zbudowanym bez zdolności NUMA (prawdopodobnie
jądro opcji bezpiecznego odzyskiwania) lub jeśli liczba dostępnych węzłów
może się zmniejszyć, zaleca się pominąć opcję mpol przy opcjach
automatycznego montowania. Można ją dodać później, gdy tmpfs jest już
zamontowany w PunktMontowania, za pomocą "mount \-o
remount,mpol=Policy:ListaWęzłów PunktMontowania".

.SH "Opcje montowania do ubifs"
UBIFS jest systemem plików flash, którzy działa na woluminach UBI. Proszę
zauważyć, że \fBatime\fP nie jest obsługiwane i jest zawsze wyłączone.
.TP 
Nazwa urządzenia może zostać podana jako
.RS
\fBubiX_Y\fP numer urządzenia UBI \fBX\fP, numer woluminu \fBY\fP
.TP 
\fBubiY\fP
numer urządzenia UBI \fB0\fP, numer woluminu \fBY\fP
.TP 
\fBubiX:NAZWA\fP
numer urządzenia UBI \fBX\fP, wolumin o nazwie \fBNAZWA\fP
.TP 
\fBubi:NAZWA\fP
numer urządzenia UBI \fB0\fP, wolumin o nazwie \fBNAZWA\fP
.RE
Zamiast \fB:\fP można użyć separatora \fB!\fP.
.TP 
Dostępne są następujące opcje montowania:
.TP 
\fBbulk_read\fP
Włącza bulk\-read. Odczyt z wyprzedzeniem VFS jest wyłączony, ponieważ
zwalnia on system plików. Bulk\-Read jest wewnętrzną optymalizacją. Część
pamięci flash może czytać szybciej, jeśli dane są odczytywane za jednym
razem, zamiast przy użyciu kilku żądań odczytu. Na przykład OneNAND może
wykonać "read\-while\-load" gdy czyta więcej niż jedną stronę NAND.
.TP 
\fBno_bulk_read\fP
Nie wykonuje bulk\-read. Tak jest domyślne.
.TP 
\fBchk_data_crc\fP
Sprawdza sumy kontrolne CRC\-32 danych. Tak jest domyślnie.
.TP 
\fBno_chk_data_crc.\fP
Nie sprawdza sum kontrolnych CRC\-32 danych. Z tą opcją system plików nie
sprawdza sum kontrolnych CRC\-32 danych, lecz sprawdza je w celu wewnętrznej
informacji indeksowania. Opcja wpływa jedynie na odczyt, nie na zapis. Sumy
CRC\-32 są obliczane zawsze podczas zapisu danych.
.TP 
\fBcompr=\fP{\fBnone\fP|\fBlzo\fP|\fBzlib\fP}
Wybiera domyślny tryb kompresji używany podczas zapisywania nowych
plików. Nadal da się odczytać skompresowane pliki, jeśli montowanie będzie
wykonane z opcją \fBnone\fP.

.SH "Opcje montowania do udf"
udf jest uniwersalnym formatem dysku ("Universal Disk Format") zdefiniowanym
przez Optical Storage Technology Association i jest używany często na
DVD\-ROM\-ach. Patrz też \fIiso9660\fP.
.TP 
\fBgid=\fP
Ustawia domyślną grupę.
.TP 
\fBumask=\fP
Ustawia domyślne umask. Wartość jest podana ósemkowo.
.TP 
\fBuid=\fP
Ustawia domyślnego użytkownika.
.TP 
\fBunhide\fP
Pokazuje pliki, które inaczej byłyby ukryte.
.TP 
\fBundelete\fP
Pokazuje usunięte pliki na na listach.
.TP 
\fBnostrict\fP
.\" .TP
.\" .B utf8
.\" (unused).
Wyłącza ustawianie ścisłej zgodności.
.TP 
\fBiocharset\fP
Ustawia zestaw znaków NLS.
.TP 
\fBbs=\fP
Ustawia rozmiar bloku. (Może nie działać, chyba że 2048.)
.TP 
\fBnovrs\fP
Pomija rozpoznawanie numeru sekwencyjnego wolumenu.
.TP 
\fBsession=\fP
Ustawia sesję CD\-ROM licząc od 0. Domyślnie: ostatnia sesja.
.TP 
\fBanchor=\fP
Przesłania położenie standardowego zakotwiczenia (anchor). Domyślnie: 256.
.TP 
\fBvolume=\fP
Przesłania położenie VolumeDesc. (nieużywane)
.TP 
\fBpartition=\fP
Przesłania położenie PartitionDesc. (nieużywane)
.TP 
\fBlastblock=\fP
Ustawia ostatni blok systemu plików.
.TP 
\fBfileset=\fP
Przesłania położenie bloku zestawu plików (fileset block). (nieużywane)
.TP 
\fBrootdir=\fP
Przesłania położenie katalogu głównego. (nieużywane)

.SH "Opcje montowania do ufs"
.TP 
\fBufstype=\fP\fIwartość\fP
UFS jest systemem plików szeroko wykorzystywanym w różnych systemach
operacyjnych. Problem stanowią różnice pomiędzy implementacjami.  Cechy
niektórych z nich są nieudokumentowane, tak więc trudno rozpoznać
automatycznie typ ufs.  Z tego powodu użytkownik musi określić typ ufs za
pomocą opcji montowania.  Możliwe wartości to:
.RS
.TP 
\fBold\fP
Stary format ufs, jest to typ domyślny, tylko do odczytu (proszę nie
zapomnieć podać opcji \-r).
.TP 
\fB44bsd\fP
Dla systemów plików utworzonych przez system typu BSD
(NetBSD,FreeBSD,OpenBSD).
.TP 
\fBufs2\fP
Używane w FreeBSD 5.x obsługiwanego jako do odczytu i zapisu.
.TP 
\fB5xbsd\fP
Synonim do ufs2.
.TP 
\fBsun\fP
Do systemów plików utworzonych przez SunOS lub Solaris na komputerze Sparc.
.TP 
\fBsunx86\fP
Do systemów plików utworzonych przez Solaris na x86.
.TP 
\fBhp\fP
Do systemów plików utworzonych przez HP\-UX, tylko do odczytu.
.TP 
\fBnextstep\fP
Do systemów plików utworzonych przez NeXTStep (na stacji roboczej NeXT)
(obecnie tylko do odczytu).
.TP 
\fBnextstep\-cd\fP
Do CD\-ROM\-ów NextStep (block_size == 2048), tylko do odczytu.
.TP 
\fBopenstep\fP
Do systemów plików utworzonych przez OpenStep (obecnie tylko do
odczytu). Ten sam typ systemów plików jest również używany przez Mac OS X.
.RE

.TP 
\fBonerror=\fP\fIwartość\fP
Ustala zachowanie w przypadku błędu:
.RS
.TP 
\fBpanic\fP
Jeśli napotkano błąd, powoduje panikę jądra.
.TP 
[\fBlock\fP|\fBumount\fP|\fBrepair\fP]
Te opcje montowania teraz nic nie robią: po napotkaniu błędu wypisują tylko
komunikat na konsoli.
.RE

.SH "Opcje montowania do umsdos"
Zobacz opcje do msdos.  Opcja \fBdotsOK\fP jest jawnie ubijana przez \fIumsdos\fP.

.SH "Opcje montowania do vfat"
Przede wszystkim, rozpoznawane są wszystkie opcje do \fIfat\fP.  Opcja
\fBdotsOK\fP jest jawnie ubijana przez \fIvfat\fP.  Ponadto istnieją
.TP 
\fBuni_xlate\fP
Tłumaczy nieobsługiwane znaki Unikodu na specjalne sekwencje unikowe.  To
umożliwia wykonywanie kopii zapasowych i odtwarzanie plików o nazwach,
utworzonych ze znakami Unikodu. Bez tej opcji, w wypadku braku możliwości
konwersji używane jest '?'. Znakiem unikowym jest ':', ponieważ na systemie
vfat jest w innych wypadkach niedozwolony. Sekwencja specjalna, która byłaby
użyta dla znaku u, gdzie u jest znakiem Unikodu to: ':', (u & 0x3f),
((u>>6) & 0x3f), (u>>12).
.TP 
\fBposix\fP
Pozwala, by dwa pliki miały nazwy różniące się tylko wielkością liter. Ta
opcja jest przestarzała.
.TP 
\fBnonumtail\fP
Zanim zacznie próbować \fInazwa~nr.roz\fP najpierw próbuje zrobić krótką nazwę
bez numeru kolejnego.
.TP 
\fButf8\fP
UTF8 jest systemem plików bezpiecznego 8\-bitowego kodowania Unikodu, który
jest wykorzystywany przez konsolę. Tą opcją można go włączyć dla danego
systemu plików lub wyłączyć za pomocą utf8=0, utf8=no lub utf8=false. Jeśli
zostanie ustawione `uni_xlate', UTF8 jest wyłączane.
.TP 
\fBshortname=\fP{\fBlower\fP|\fBwin95\fP|\fBwinnt\fP|\fBmixed\fP}

Definiuje zachowanie w przypadku tworzenia i wyświetlania nazw plików
mieszczących się w schemacie 8.3 znaków. Jeśli istnieje długa nazwa pliku,
będzie zawsze preferowanym sposobem wyświetlania. Istnieją cztery tryby:
.RS
.TP 
\fIlower\fP
Wymusza na krótkiej nazwie wyświetlanie jej za pomocą małych liter;
przechowuje długą nazwę, gdy nie wszystkie litery krótkiej nazwy są wielkie.
.TP 
\fIwin95\fP
Wymusza na krótkiej nazwie wyświetlanie jej za pomocą wielkich liter;
przechowuje długą nazwę, gdy nie wszystkie litery krótkiej nazwy są wielkie.
.TP 
\fIwinnt\fP
Wyświetla krótką nazwę bez zmian; przechowuje długą nazwę, gdy nie wszystkie
litery krótkiej nazwy są wielkie lub nie wszystkie są małe.
.TP 
\fImixed\fP
Wyświetla krótką nazwę bez zmian; przechowuje długą nazwę, gdy nie wszystkie
litery krótkiej nazwy są wielkie. Ten tryb jest domyślny od Linuksa 2.6.32.
.RE


.SH "Opcje montowania do usbfs"
.TP 
\fBdevuid=\fP\fIuid\fP i \fBdevgid=\fP\fIgid\fP i \fBdevmode=\fP\fItryb\fP
Ustawia właściciela i grupę i tryb plików w plikach urządzeń systemu plików
usbfs (domyślnie: uid=gid=0, mode=0644). Tryb jest podany ósemkowo.
.TP 
\fBbusuid=\fP\fIuid\fP i \fBbusgid=\fP\fIgid\fP i \fBbusmode=\fP\fItryb\fP
Ustawia właściciela i grupę i tryb plików w katalogach szyny (bus) systemu
plików usbfs (domyślnie: uid=gid=0, mode=0555). Tryb podany jest ósemkowo.
.TP 
\fBlistuid=\fP\fIuid\fP i \fBlistgid=\fP\fIgid\fP i \fBlistmode=\fP\fItryb\fP
Ustawia właściciela i grupę i tryb pliku \fIdevices\fP (domyślnie: uid=gid=0,
mode=0444). Tryb jest podany ósemkowo.

.SH "Opcje montowania do xenix"
Brak.

.SH "Opcje montowania do xfs"
.TP 
\fBallocsize=\fP\fIrozmiar\fP
Ustawia rozmiar prealokowanego końca pliku przy buforowanym wejściu/wyjściu
podczas wykonywania opóźnionej alokacji zapisu (domyślny rozmiar: 64
KiB). Poprawnymi wartościami do tej opcji jest rozmiar strony (z reguły 4
KiB), aż do 1 GiB, włącznie, w odstępach kolejnych potęg dwójki.
.TP 
\fBattr2\fP|\fBnoattr2\fP
Opcja włącza/wyłącza (domyślnie jest włączona) "oportunistyczne" ulepszenie,
działające w ten sposób, że wbudowane (inline) rozszerzone atrybuty są
przechowywane na dysku. Gdy nowa forma zostanie użyta po raz pierwszy
(ustawiając lub usuwając rozszerzone atrybuty) pole funkcji superbloku dysku
zostanie zaktualizowane, aby odnosiło się do używanego formatu.
.TP 
\fBbarrier\fP
Włącza używanie warstwy blokowej barier zapisu do zapisu do dziennika i
niezapisanych konwersji ekstentów. Pozwala to na włączone buforów zapisu na
poziomie sterownika, na urządzeniu, które obsługuje bariery zapisu.
.TP 
\fBdmapi\fP
Włącza wyróżnione zdarzenia DMAPI (Data Management API). Używane z opcją
\fBmtpt\fP.
.TP 
\fBgrpid\fP|\fBbsdgroups\fP i \fBnogrpid\fP|\fBsysvgroups\fP
Opcje te definiują, jaki identyfikator grupy (gid) otrzyma nowo utworzony
plik. Gdy ustawiony jest \fBgrpid\fP, to pobiera gid katalogu, w którym jest
utworzony; w przeciwnym wypadku (domyślnie) bierze fsgid bieżącego procesu,
chyba że katalog ma ustawiony bit setgid, wówczas pobiera gid katalogu
rodzicielskiego i dodatkowo otrzymuje bit setgid, jeśli sam jest katalogiem.
.TP 
\fBihashsize=\fP\fIwartość\fP
Ustawia liczbę wartości funkcji mieszającej dostępnej do haszowania i\-węzłów
określonego punktu montowania, znajdujących się w pamięci. Jeśli poda się
zero, wartość wybrana przez domyślny algorytm będzie wyświetlana w
\fI/proc/mounts\fP.
.TP 
\fBikeep\fP|\fBnoikeep\fP
Gdy klastry i\-węzłów są opróżniane z i\-węzłów, zatrzymuje je na dysku
(ikeep) \- jest to tradycyjne zachowanie XFS i do chwili obecnej jest
domyślne. Używając opcji noikeep, klastry i\-węzłów są zwracane do puli
wolnego miejsca.
.TP 
\fBinode64\fP
Wskazuje, że XFS może tworzyć i\-węzły w dowolnej lokalizacji systemu plików,
łącznie z taką, która spowoduje zajęcie przez numer i\-węzła więcej niż 32
bitów znaczących. Jest ona udostępniona w celu kompatybilności wstecznej,
ale wywołuje problemy w przypadku aplikacji do kopii zapasowych, które nie
potrafią obsłużyć dużych numerów i\-węzłów.
.TP 
\fBlargeio\fP|\fBnolargeio\fP
Jeśli podano \fBnolargeio\fP, optymalne wejście/wyjście raportowane w
st_blksize przez \fBstat\fP(2) będzie tak małe, jak to tylko możliwe, aby
pozwolić aplikacjom użytkownika zapobiec niewydajnym
odczytom/modyfikacji/zapisom wejścia/wyjścia. Jeśli podano \fBlargeio\fP,
system plików, któremu określono opcję \fBswidth\fP zwróci wartość \fBswidth\fP w
st_blksize (w bajtach). Jeśli jej nie określono, ale podano \fBallocsize\fP, to
zwrócone zostanie w zamian \fBallocsize\fP (w bajtach). Jeśli nie podano żadnej
z tych dwóch opcji, system plików zachowa się jak gdyby podano opcję
\fBnolargeio\fP.
.TP 
\fBlogbufs=\fP\fIwartość\fP
Ustawia liczbę buforów logów w pamięci (in\-memory). Poprawnymi wartościami
są 2\-8 (włącznie). Domyślną wartością z każdym nowszym jądrem jest 8
buforów.
.TP 
\fBlogbsize=\fP\fIwartość\fP
Ustawia rozmiar każdego z buforów logów w pamięci (in\-memory). Rozmiar można
podać w bajtach, lub w kilobajtach, z przyrostkiem "k". Poprawnymi
rozmiarami do wersji 1 i 2 są 16384 (16k) and 32768 (32k). Do wersji 2
logów, poprawnymi rozmiarami są również 65536 (64k), 131072 (128k) and
262144 (256k). Domyślną wartością z każdym nowszym jądrem jest 32768.
.TP 
\fBlogdev=\fP\fIurządzenie\fP i \fBrtdev=\fP\fIurządzenie\fP
Używa zewnętrznego dziennika (rejestru metadanych) i/lub urządzenia czasu
rzeczywistego. System plików XFS ma do trzech części: sekcji danych, sekcji
dziennika i sekcji czasu rzeczywistego. Sekcja czasu rzeczywistego jest
opcjonalna, a sekcja dziennika może być osobna od sekcji danych albo może
być w niej zawarta.  Bliższe informacje podaje \fBxfs\fP(5).
.TP 
\fBmtpt=\fP\fIpunkt\-montowania\fP
Używane z opcją \fBdmapi\fP. Wartość tu podana będzie uwzględniona w zdarzeniu
montowania DMAPI i powinna być ścieżką rzeczywistego punktu montowania,
który jest używany.
.TP 
\fBnoalign\fP
Alokacja danych nie będzie wyrównywana na granicach jednostki paskowej
(stripe unit).
.TP 
\fBnoatime\fP
Podczas odczytu pliku nie są aktualizowane znaczniki czasu dostępu.
.TP 
\fBnorecovery\fP
System plików zostanie zamontowany bez uruchamiania odzyskiwania dziennika.
Jeśli system ten nie był poprawnie odmontowany, to możliwe, że montowany w
trybie \fBnorecovery\fP będzie niespójny.  Część plików lub katalogów może z
tego powodu być niedostępna.  Systemy plików przy włączeniu trybu
\fBnorecovery\fP muszą być montowane tylko do odczytu albo montowanie się nie
powiedzie.
.TP 
\fBnouuid\fP
Nie sprawdza w celu wyszukania podwójnie zamontowanych systemów plików
używając uuid systemu pliku. Jest to użyteczne do montowania migawek
woluminów LVM.
.TP 
\fBosyncisosync\fP
Zapisy O_SYNC wykorzystują prawdziwe O_SYNC. BEZ\ tej opcji, linuksowe XFS
zachowuje się tak, jakby użyto opcję \fBosyncisdsync\fP, która powoduje, że
zapisy do plików otwartych z ustawioną flagą O_SYNC będą się zachowywać
jakby zamiast niej użyto flagi O_DSYNC. Może to dać lepszą wydajność bez
naruszenia bezpieczeństwa danych. Jednakże, jeśli działa ta opcja, to w
przypadku załamania się systemu mogą zostać utracone aktualizacje znaczników
czasu z O_SYNC. Jeśli aktualizowanie znaczników czasu jest krytyczne, proszę
użyć opcji \fBosyncisosync\fP.
.TP 
\fBuquota\fP|\fBusrquota\fP|\fBuqnoenforce\fP|\fBquota\fP
Włączenie systemu rozliczania udziałów dyskowych (quota) użytkowników i
wymuszenie (opcjonalnie) limitów. Patrz \fBxfs_quota\fP(8), aby dowiedzieć się
więcej.
.TP 
\fBgquota\fP|\fBgrpquota\fP|\fBgqnoenforce\fP
Włączenie systemu rozliczania udziałów dyskowych (quota) grup i wymuszenie
(opcjonalnie) limitów.  Patrz \fBxfs_quota\fP(8), aby dowiedzieć się więcej.
.TP 
\fBpquota\fP|\fBprjquota\fP|\fBpqnoenforce\fP
Włączenie systemu rozliczania udziałów dyskowych (quota) projektów i
wymuszenie (opcjonalnie) limitów.  Patrz \fBxfs_quota\fP(8), aby dowiedzieć się
więcej.
.TP 
\fBsunit=\fP\fIwartość\fP i \fBswidth=\fP\fIwartość\fP
Stosowane do określenia jednostki i szerokości paska dla urządzenia RAID lub
wolumenu paskowego.  \fIWartość\fP musi być podana jako liczba 512\-bajtowych
bloków.  Jeśli nie podano tej opcji, a system plików został utworzony na
wolumenie paskowym lub podczas korzystania z mkfs podano szerokość albo
jednostkę paska dla urządzenia RAID, to funkcja systemowa mount odtworzy tę
wartość z superbloku.  Dla systemów plików utworzonych bezpośrednio na
urządzeniach RAID, opcji tych można użyć do przesłonięcia informacji z
superbloku jeśli po stworzeniu systemu zmienił się odnośny układ dysku.
Jeśli podano \fBsunit\fP, to opcja \fBswidth\fP jest wymagana i musi być
wielokrotnością wartości \fBsunit\fP.
.TP 
\fBswalloc\fP
Alokowanie danych będzie zaokrąglone w górę do szerokości granic paska, gdy
bieżący koniec pliku przesunie się i rozmiar pliku stanie się większy niż
szerokość paska.

.SH "Opcje montowania do xiafs"
Brak. Chociaż xiafs nic nie dolega, nie jest on używany zbyt często i nie
jest rozwijany. Prawdopodobnie nie powinno się go używać.  Od Linuksa w
wersji 2.1.21 xiafs nie występuje już w kodzie źródłowym jądra.

.SH "URZĄDZENIE LOOP"
Kolejnym możliwym typem jest montowanie poprzez urządzenie loop. Na
przykład, polecenie
.RS
.sp
\fBmount /tmp/disk.img /mnt \-t vfat \-o loop=/dev/loop\fP
.sp
.RE
ustawi urządzenie loop \fI/dev/loop3\fP tak, aby odpowiadał plikowi
\fI/tmp/disk.img\fP, a następnie zamontuje to urządzenie w \fI/mnt\fP.

Jeśli nie podano jawnie urządzenia loop (tylko opcję \fB\-o loop\fP), to
\fBmount\fP spróbuje znaleźć jakieś nieużywane urządzenie loop i użyć je, na
przykład
.RS
.sp
\fBmount /tmp/disk.img /mnt \-o loop\fP
.sp
.RE
Polecenie mount \fBautomatycznie\fP tworzy urządzenie loop ze zwykłego pliku,
jeśli nie podano systemu plików lub system plików jest znany libblkid, na
przykład:
.RS
.sp
\fBmount /tmp/disk.img /mnt\fP
.sp
\fBmount \-t ext3 /tmp/disk.img /mnt\fP
.sp
.RE
Ten typ montowań zna cztery opcje, \fBloop\fP, \fBoffset\fP, \fBsizelimit\fP i
\fBencryption\fP, które są tak naprawdę opcjami do \fB\%losetup\fP(8). Jeśli
montowanie wymaga hasła, użytkownik zostanie o nie zapytany, chyba że do
odczytu podany zostanie deskryptor pliku do opcji \fB\-\-pass\-fd\fP (opcje te
mogą być używane oprócz opcji specyficznych dla danego systemu plików).

Od Linuksa 2.6.25 obsługiwane jest samozniszczenie urządzeń loop i każde
urządzenie loop przydzielone przez \fBmount\fP zostanie zwolnione przez
\fBumount\fP niezależnie od \fI/etc/mtab\fP.

Można również zwolnić urządzenie loop ręcznie, przy użyciu "losetup \-d" lub
"umount \-d".

.SH "KODY ZAKOŃCZENIA"
\fBmount\fP\ posiada następujące kody zakończeń (bity mogą być złożone używając
alternatywy \- OR):
.TP 
\fB0\fP
sukces
.TP 
\fB1\fP
nieprawidłowe wywołanie lub uprawnienia
.TP 
\fB2\fP
błąd systemu (brak pamięci, niemożność wykonania fork, nie ma więcej
urządzeń loop)
.TP 
\fB4\fP
wewnętrzny błąd \fBmount\fP
.TP 
\fB8\fP
przerwanie przez użytkownika
.TP 
\fB16\fP
problemy podczas zapisu lub blokowania /etc/mtab
.TP 
\fB32\fP
niepowodzenie montowania
.TP 
\fB64\fP
cześć montowań powiodła się

.SH UWAGI
Składnia zewnętrznych programów pomocniczych mount jest następująca:

.RS
\fB/sbin/mount.\fP\fI<przyrostek>\fP \fIspec katalog\fP [\fB\-sfnv\fP] [\fB\-o\fP
\fIopcje\fP] [\fB\-t\fP \fItyp.podtyp\fP]
.RE

gdzie <typ> jest typem systemu plików, a opcje \-sfnvo mają to samo
znaczenie, co standardowe opcje mount. Opcja \-t jest używana do systemów
plików z obsługa podtypów (np. /sbin/mount.fuse \-t fuse.sshfs).

.SH PLIKI
.TP  18n
\fI/etc/fstab\fP
tabela systemów plików
.TP 
\fI/etc/mtab\fP
tabela zamontowanych systemów plików
.TP 
\fI/etc/mtab~\fP
plik blokady
.TP 
\fI/etc/mtab.tmp\fP
plik tymczasowy
.TP 
\fI/etc/filesystems\fP
lista systemów plików do wypróbowania

.SH "ZOBACZ TAKŻE"
\fBmount\fP(2), \fBumount\fP(2), \fBfstab\fP(5), \fBumount\fP(8), \fBswapon\fP(8),
\fBnfs\fP(5), \fBxfs\fP(5), \fBe2label\fP(8), \fBxfs_admin\fP(8), \fBmountd\fP(8),
\fBnfsd\fP(8), \fBmke2fs\fP(8), \fBtune2fs\fP(8), \fBlosetup\fP(8)
.SH BŁĘDY
Jest możliwe, że uszkodzony system plików spowoduje załamanie systemu.
.PP
Niektóre linuksowe systemy plików nie obsługują \fB\-o sync\fP i \fB\-o dirsync\fP
(systemy ext2, ext3, fat i vfat \fIobsługują\fP synchroniczne odświeżania
(updates) (a la BSD), gdy zostaną zamontowane z opcją \fBsync\fP).
.PP
Opcja \fB\-o remount\fP może nie być w stanie zmienić parametrów montowania
(np. wszystkie parametry \fIext2fs\fP, poza \fBsb\fP, dają się zmieniać przy
ponownym montowaniu, lecz nie można zmienić \fBgid\fP czy \fBumask\fP dla
\fIfatfs\fP).
.PP
Montowanie za pomocą etykiety lub uuid działa tylko wtedy, gdy nazwy
urządzeń są wypisane w \fI/proc/partitions\fP. W\ szczególności, może się ono
nie powieść, gdy jądro zostało skompilowane z devfs, ale devfs nie jest
zamontowany.
.PP
Zdarza się, że pliki \fI/etc/mtab\fP i \fI/proc/mounts\fP nie odpowiadają
sobie. Pierwszy plik opiera się wyłącznie na opcjach poleceń mount, a
zawartość drugiego zależy również od jądra i innych ustawień (np. zdalnego
serwera NFS). W szczególnym przypadku, polecenie mount może dawać niepewne
informacje o punkcie montowania NFS; plik /proc/mounts zawiera z reguły
pewniejsze informacje.
.PP
Sprawdzanie plików w systemie plików NFS, odnosząc się do deskryptorów pliku
(np. rodziny funkcji \fBfcntl\fP i \fBioctl\fP) może powodować niespójne
rezultaty, z powodu braku sprawdzania spójności w jądrze, nawet gdy używane
jest noac.
.SH HISTORIA
Polecenie \fBmount\fP pojawiło się w wersji 5 AT&T UNIX.
.SH DOSTĘPNOŚĆ
Polecenie mount jest częścią pakietu util\-linux i jest dostępne pod adresem
ftp://ftp.kernel.org/pub/linux/utils/util\-linux/.

.SH TŁUMACZENIE
Autorami polskiego tłumaczenia niniejszej strony podręcznika man są:
Przemek Borys (PTM) <pborys@dione.ids.pl>,
Robert Luberda (PTM) <robert@debian.org>,
Andrzej M. Krzysztofowicz (PTM) <ankry@green.mf.pg.gda.pl>
i
Michał Kułach <michal.kulach@gmail.com>.
.PP
Polskie tłumaczenie jest częścią projektu manpages-pl; uwagi, pomoc, zgłaszanie błędów na stronie http://sourceforge.net/projects/manpages-pl/. Jest zgodne z wersją \fB 2.20.1 \fPoryginału.
