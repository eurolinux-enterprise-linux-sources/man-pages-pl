.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.28.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\" This file is distributed under the same license as original manpage
.\" Copyright of the original manpage:
.\" Copyright © 2003-2009 Free Software Foundation, Inc. (GFDL-NIV-1.1+)
.\" Copyright © of Polish translation:
.\" Przemek Borys (PTM) <pborys@dione.ids.pl>, 1999.
.\" Michał Kułach <michal.kulach@gmail.com>, 2012.
.TH SED 1 "grudzień 2010" "sed 4.2.1" "Polecenia użytkownika"
.SH NAZWA
sed \- edytor strumieniowy do filtrowania i przekształcania tekstu
.SH SKŁADNIA
\fBsed\fP [\fIOPCJA\fP]... \fI{skrypt\-tylko\-jeśli\-nie\-ma\-ich\-więcej}
\fP[\fIplik\-wejściowy\fP]...
.SH OPIS
.ds sd \fIsed\fP
.ds Sd \fISed\fP
\*(Sd jest edytorem strumieniowym. Edytor strumieniowy jest używany do
wykonywania prostych przekształceń tekstu na strumieniu wejściowym (pliku
lub strumienia z potoku). \*(Sd jest w jakimś stopniu podobny do edytorów
przestrzegających edycji skryptowych (np. \fIed\fP), jednak działa czyniąc
tylko jeden przebieg na strumieniu wejściowym i dlatego jest znacznie
wydajniejszy. Możliwość filtrowania tekstu w potoku przez \*(sda jest cechą,
która w największym stopniu wyróżnia go spośród innych edytorów innego typu.
.HP
\fB\-n\fP, \fB\-\-quiet\fP, \fB\-\-silent\fP
.IP
hamuje automatyczne wypisywanie bufora tekstowego
.HP
\fB\-e\fP \fIskrypt\fP, \fB\-\-expression\fP=\fIskrypt\fP
.IP
dodaje skrypt do poleceń do wykonania
.HP
\fB\-f\fP \fIplik\-skryptu\fP, \fB\-\-file\fP=\fIplik\-skryptu\fP
.IP
dodaje zawartość \fIpliku\-skryptu\fP do poleceń do wykonania
.HP
\fB\-\-follow\-symlinks\fP
.IP
podąża za dowiązaniami symbolicznymi podczas przetwarzania w miejscu
.HP
\fB\-i\fP[\fIPRZYROSTEK\fP], \fB\-\-in\-place\fP[=\fIPRZYROSTEK\fP]
.IP
edytuje pliki w miejscu (tworzy kopię zapasową, jeśli podano przyrostek)
.HP
\fB\-l\fP \fIN\fP, \fB\-\-line\-length\fP=\fIN\fP
.IP
określa pożądaną długość zawijania wierszy do polecenia \fBl\fP
.HP
\fB\-\-posix\fP
.IP
wyłącza wszystkie rozszerzenia GNU
.HP
\fB\-r\fP, \fB\-\-regexp\-extended\fP
.IP
używa w skrypcie rozszerzonych wyrażeń regularnych
.HP
\fB\-s\fP, \fB\-\-separate\fP
.IP
traktuje pliki jako oddzielne, zamiast jako jeden, ciągły strumień
.HP
\fB\-u\fP, \fB\-\-unbuffered\fP
.IP
ładuje minimalną ilość danych z plików wejściowych i opróżnia bufory
wyjściowe znacznie częściej
.TP 
\fB\-\-help\fP
wyświetla ten tekst i kończy pracę
.TP 
\fB\-\-version\fP
wyświetla informacje o wersji i kończy działanie
.PP
Jeśli nie podano żadnej z opcji \fB\-e\fP, \fB\-\-expression\fP, \fB\-f\fP ani \fB\-\-file\fP,
to pierwszy argument niebędący opcją jest interpretowany jako skrypt
\fBsed\fPa. Wszystkie pozostałe argumenty są nazwami plików wejściowych; jeśli
nie podano żadnych, to czytane jest standardowe wejście.
.SH "SKŁADNIA POLECEŃ"
Jest to zwięzłe podsumowanie poleceń \*(sd, przeznaczone jako przypomnienie
dla osób znających program \*(sd; aby przeczytać pełniejszy opis konieczne
jest sięgnięcie po inny typ dokumentacji (np. texinfo).
.SS "\(dqPolecenia\(dq nie przyjmujące adresów"
.TP 
:\ \fIetykieta\fP
Etykieta do poleceń \fBb\fP i \fBt\fP.
.TP 
#\fIkomentarz\fP
Komentarz kończy się wraz ze znakiem nowego wiersza (lub końcem fragmentu
skryptu \fB\-e\fP).
.TP 
}
Nawias klamrowy zamykający blok { }.
.SS "Polecenia z zerem lub jednym adresem"
.TP 
=
Wypisuje bieżący numer wiersza
.TP 
a \e
.TP 
\fItekst\fP
Dołącza (dodaje za) \fItekst\fP, w którym każdy ewentualny znak nowego wiersza
jest poprzedzony odwrotnym ukośnikiem.
.TP 
i \e
.TP 
\fItekst\fP
Wstawia (dodaje przed) \fItekst\fP, w którym każdy ewentualny znak nowego
wiersza jest poprzedzony odwrotnym ukośnikiem.
.TP 
q [\fIstatus\-zakończenia\fP]
Natychmiast wychodzi ze skryptu \*(sda bez przetwarzania dalszego wejścia, z
wyjątkiem sytuacji, gdy nie wyłączono automatycznego wypisywania bieżącego
bufora tekstowego, który będzie wówczas nadal wypisywany. Argument statusu
zakończenia jest rozszerzeniem GNU.
.TP 
Q [\fIstatus\-zakończenia\fP]
Natychmiast wychodzi ze skryptu \*(sda bez przetwarzania dalszego
wejścia. Argument statusu zakończenia jest rozszerzeniem GNU.
.TP 
r\ \fInazwa\-pliku\fP
Dołącza (dodaje za) tekst odczytany z \fInazwy\-pliku\fP.
.TP 
R\ \fInazwa\-pliku\fP
Dołącza (dodaje za) tekst odczytany z \fInazwy\-pliku\fP. Każde wywołanie tego
polecenia odczytuje jeden wiersz z pliku. Jest to rozszerzenie GNU.
.SS "Polecenia, które przyjmują zakresy adresów"
.TP 
{
Rozpoczyna blok poleceń (który kończy się znakiem } ).
.TP 
b\ \fIetykieta\fP
Przechodzi do \fIetykiety\fP; jeśli jej nie podano, przechodzi na koniec
skryptu.
.TP 
c \e
.TP 
\fItekst\fP
Zastępuje wybrane wiersze \fItesktem\fP, w którym każdy ewentualny znak nowego
wiersza jest poprzedzony odwrotnym ukośnikiem.
.TP 
d
Usuwa bufor tekstowy. Rozpoczyna nowy cykl.
.TP 
D
Kasuje wzorzec aż do pierwszego znaku nowego wiersza. Rozpoczyna nowy cykl,
lecz pomija czytanie wejścia, jeśli w buforze tekstowym wciąż pozostały
dane.
.TP 
h H
Kopiuje/dołącza bieżący bufor tekstowy do wewnętrznego schowka.
.TP 
g G
Kopiuje/dołącza wewnętrzny schowek do bufora tekstowego.
.TP 
l
Wypisuje bieżący wiersz w formie "wizualnie jednoznacznej".
.TP 
l\ \fIszerokość\fP
Wypisuje bieżący wiersz w formie "wizualnie jednoznacznej", przełamując go
po \fIszerokość\fP znaków. Jest to rozszerzenie GNU.
.TP 
n N
Czyta/dołącza następny wiersz do bufora tekstowego.
.TP 
p
Wypisuje bieżący bufor tekstowy.
.TP 
P
Wypisuje bieżący bufor tekstowy aż do jego pierwszego znaku nowego wiersza.
.TP 
s/\fIwyrażenie\-regularne\fP/\fIzamiennik\fP/
Podejmuje próbę dopasowania \fIwyrażenia\-regularnego\fP do bieżącego bufora
tekstowego. Jeśli się to uda, zastępuje dopasowaną część
\fIzamiennikiem\fP. \fIZamiennik\fP może zawierać znak specjalny \fB&\fP, aby odnieść
się do dopasowanej części bufora tekstowego, oraz sekwencje specjalne od \e1
do \e9, aby odnieść się do odpowiedniej pasującej części wyrażenia w
\fIwyrażeniu\-regularnym\fP.
.TP 
t\ \fIetykieta\fP
Jeśli s/// wykonało pomyślnie zastąpienie od czasu odczytania ostatniego
wiersza wejściowego oraz ostatniego polecenia t lub T, przechodzi do
\fIetykiety\fP. Jeśli nie podano \fIetykiety\fP, przechodzi do końca skryptu.
.TP 
T\ \fIetykieta\fP
Jeśli żadne s/// nie wykonało pomyślnie zastąpienia od czasu odczytania
ostatniego wiersza wejściowego oraz ostatniego polecenia t lub T, przechodzi
do \fIetykiety\fP. Jeśli nie podano \fIetykiety\fP, przechodzi do końca
skryptu. Jest to rozszerzenie GNU.
.TP 
w\ \fInazwa\-pliku\fP
Zapisuje bieżący bufor tekstowy do \fInazwy\-pliku\fP.
.TP 
W\ \fInazwa\-pliku\fP
Zapisuje pierwszy wiersz bieżącego bufora tekstowego do \fInazwy\-pliku\fP. Jest
to rozszerzenie GNU.
.TP 
x
Zamienia zawartość bufora tekstowego i wewnętrznego schowka.
.TP 
y/\fIźródło\fP/\fIcel\fP/
Zamienia znaki w buforze tekstowym, które znajdują się w \fIźródle\fP, na
odpowiadające znaki w \fIcelu\fP.
.SH Adresy
 Polecenia \*(Sda mogą:
  * nie zawierać adresów \- wtedy polecenia są wykonywane na wszystkich
wierszach wejściowych;
  * zawierać jeden adres \- są wówczas wykonywane na wierszach wejściowych
pasujących do tego adresu;
  * zawierać dwa adresy \- polecenia są wykonywane na wszystkich wierszach
wejściowych od pierwszego adresu aż do drugiego adresu.
 Należy odnotować trzy rzeczy o zakresach adresów:
  * składnia to \fIadres1\fP,\fIadres2\fP (tzn. adresy są oddzielone przecinkami);
  * wiersz z dopasowanym \fIadresem1\fP jest zawsze akceptowany, nawet jeśli
\fIadres2\fP wybiera wcześniejszy wiersz;
  * jeśli \fIadres2\fP jest \fIwyrażeniem\-regularnym\fP, to nie jest testowany w
odniesieniu do wiersza, do którego dopasowano \fIadres1\fP.
.PP
Po adresie (lub zakresie adresu), a przed poleceniem, można wstawić znak
\fB!\fP, który powoduje, że polecenie powinno być wykonane tylko na adresie
(lub zakresie adresu), który \fBnie\fP pasuje.
.PP
Obsługiwane są następujące typy adresów:
.TP 
\fInumer\fP
Dopasowuje tylko wiersz o danym \fInumerze\fP.
.TP 
\fIpierwszy\fP~\fIkrok\fP
Dopasowuje co \fIkrok\fP wiersz, zaczynając od wiersza o numerze
\fIpierwszy\fP. Na przykład "sed \-n 1~2p" wypisuje wszystkie nieparzyste
wiersze w strumieniu wejściowym, a adres 2~5 dopasuje co piąty wiersz,
zaczynając od drugiego. \fIPierwszy\fP może wynosić zero, w takim przypadku
\*(sd działa identycznie, gdyby wynosił on tyle co \fIkrok\fP (jest to
rozszerzenie).
.TP 
$
Dopasowuje ostatni wiersz.
.TP 
/\fIwyrażenie\-regularne\fP/
Dopasowuje wiersze pasujące do wyrażenia regularnego \fIwyrażenie\-regularne\fP.
.TP 
\e\fBz\fP\fIwyrażenie\-regularne\fP\fBz\fP
Dopasowuje wiersze pasujące do wyrażenia regularnego
\fIwyrażenie\-regularne\fP. Za \fBz\fP można podstawić dowolny znak.
.PP
GNU \*(sd obsługuje również specjalne formy dwuadresowe:
.TP 
0,\fIadres2\fP
Rozpoczyna w stanie "dopasowany pierwszy adres", aż do momentu znalezienia
\fIadresu2\fP. Jest to podobne do 1,\fIadres2\fP , z wyjątkiem tego, że gdy
\fIadres2\fP zostanie dopasowany do pierwszego wiersza wejścia, to forma
0,\fIadres2\fP będzie na końcu swojego zakresu, podczas gdy forma 1,\fIadres2\fP
będzie wciąż na początku swojego zakresu. Działa to tylko gdy \fIadres2\fP jest
wyrażeniem regularnym.
.TP 
\fIadres1\fP,+\fIN\fP
Dopasowuje \fIadres1\fP do \fIN\fP\-tego wiersza znajdującego się za \fIadresem1\fP
.TP 
\fIadres1\fP,~\fIN\fP
Dopasowuje \fIadres1\fP i wiersze za \fIadresem1\fP do następnego wiersza
wejściowego, którego numer wiersza jest wielokrotnością \fIN\fP.
.SH "WYRAŻENIA REGULARNE"
Podstawowe wyrażenia regularne (BRE) określone przez POSIX.2 \fIpowinny\fP być
obsługiwane, ale nie są obsługiwane całkowicie, ze względu na problemy z
wydajnością. Sekwencja \fB\en\fP w wyrażeniu regularnym pasuje do znaku nowego
wiersza, podobnie dla wyrażeń \fB\ea\fP, \fB\et\fP i innych sekwencji.
.SH BŁĘDY
.PP
Zgłoszenia błędów proszę wysyłać na adres \fBbonzini@gnu.org\fP (po
angielsku). Proszę upewnić się, że gdzieś w polu "Temat:" umieszczono słowo
"sed". Proszę również umieścić wynik polecenia "sed \-\-version" w treści
wiadomości, jeśli to możliwe.
.SH PRAWA\ AUTORSKIE
Copyright \(co 2009 Free Software Foundation, Inc.
.br
Jest to wolne oprogramowanie; warunki rozpowszechniania znajdują się w
źródle programu. NIE ma gwarancji, nawet PRZYDATNOŚCI\ HANDLOWEJ czy
PRZYDATNOŚCI DO OKREŚLONEGO CELU, w granicach określonych przez prawo.
.PP
Strona internetowa GNU sed:
<http://www.gnu.org/software/sed/>. Ogólna pomoc dotycząca
oprogramowania GNU: <http://www.gnu.org/gethelp/>. Zgłoszenia błędów
proszę wysyłać na adres: <bug\-gnu\-utils@gnu.org>. Proszę upewnić
się, że gdzieś w polu "Temat:" znajduje się słowo "sed".
.SH "ZOBACZ TAKŻE"
\fBawk\fP(1), \fBed\fP(1), \fBgrep\fP(1), \fBtr\fP(1), \fBperlre\fP(1), sed.info, dowolna z
wielu książek o \*(sdzie,
.na
FAQ \*(sda (http://sed.sf.net/grabbag/tutorials/sedfaq.txt),
http://sed.sf.net/grabbag/.
.PP
Pełna dokumentacja \fBsed\fP jest dostępna w formacie Texinfo. Jeśli programy
\fBinfo\fP i \fBsed\fP są poprawnie zainstalowane, to polecenie
.IP
\fBinfo sed\fP
.PP
powinno dać dostęp do pełnego podręcznika.
.SH TŁUMACZENIE
Autorami polskiego tłumaczenia niniejszej strony podręcznika man są:
Przemek Borys (PTM) <pborys@dione.ids.pl>
i
Michał Kułach <michal.kulach@gmail.com>.
.PP
Polskie tłumaczenie jest częścią projektu manpages-pl; uwagi, pomoc, zgłaszanie błędów na stronie http://sourceforge.net/projects/manpages-pl/. Jest zgodne z wersją \fB 4.2.1 \fPoryginału.
