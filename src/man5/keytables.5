.\" {PTM/PB/0.1/28-09-1998/"opis tabeli klawiatury dla loadkeys i dumpkeys"}
.\" Translation (c) 1998 Przemek Borys <pborys@p-soft.silesia.linux.org.pl>
.\" @(#)keytables.5 1.10 940130 aeb
.TH KEYTABLES 5 "30 Jan 1994"
.SH NAZWA
keytables \- opisy tabeli klawiaturowych dla loadkeys i dumpkeys
.SH OPIS
Pliki te s± u¿ywane przez
.BR loadkeys (1)
do modyfikowania tablic translacji u¿ywanych przez sterownik klawiatury.
Pliki te mog± byæ generowane na podstawie tych tabel przez program
.BR dumpkeys (1).
.LP
Format tych plików jest do¶c podobny do formatu
.BR xmodmap (1).
Plik sk³ada siê z linii charsetu, definicji klawiszy lub napisów,
przeplecionych komentarzami.
.LP
Komentarze rozpoczynaj± siê od znaków
.B !
lub
.B #
i trwaj± do koñca linii. Wszystko co nastêpuje za tymi znakami jest
ignorowane. Zauwa¿, ¿e komentarze nie musz± zaczynaæ siê w pierwszej
kolumnie jak w
.BR xmodmap (1).
.LP
Sk³adnia tablicy klawiszy jest zorientowana liniowo; ca³kowita definicja
musi zmie¶ciæ siê w pojedynczej linii logicznej. Jednak linie logiczne mog±
dzieliæ siê na wiele linii fizycznych dziêki zastosowaniu znaku odwrotnego
uko¶nika (\\).
.LP
Linia definiuj±ca zestaw znaków (charset) ma postaæ:
.LP
.RS
.EX
charset "iso-8859-x"
.EE
.RE
.LP
Definiuje w jaki sposób interpretowaæ nastêpuj±ce keysymy.
.LP
Ka¿da kompletna definicja linii ma postaæ:
.LP
.RS
.nf
.BI keycode " keynumber " = " keysym keysym keysym" \fR...
.fi
.RE
.LP
.I keynumber
jest wewnêtrznym numerem identyfikuj±cym klawisz, mniej wiêcej
odpowiadaj±cym jego kodowi scancode.
.I keynumber
mo¿e zostaæ podany w postaci dziesiêtnej, ósemkowej lub szesnastkowej.
Postaæ ósemkowa jest poprzedzona zerem, a szesnastkowa prefiksem
.B 0x.
.LP
Ka¿dy z
.I keysymów
reprezentuje akcjê klawiaturow±, z których do 256 mo¿na podwi±zaæ do
pojedynczego klawisza. Dostêpne akcje zawieraj± kody znaków Latin1 lub
sekwencje znakowe, prze³±czanie konsol lub keymap, bootowanie maszyny, itd.
(kompletn± listê mo¿na uzyskaæ z dumpkeys(1) przez wydanie komendy
.BI " dumpkeys -l"
\&.)
.LP
Ka¿dy
.I keysym
mo¿e zostaæ poprzedzony znakiem '+' (plus), w którym wypadku keysym jest
traktowany jako "litera", czyli znak dotkniêty przez "CapsLock" w ten sam
sposób jak przez "Shift" (aby byæ dok³adnym, CapsLock odwraca stan Shift).
Znaki ASCII ('a'-'z' i 'A'-'Z') s± domy¶lnie CapsLock'owalne. Jesli
Shift+CapsLock nie powinny produkowaæ "ma³ych" liter, u¿yj linii o
nastêpuj±cej semantyce
.LP
.RS
.nf
.BI "keycode 30 = +a  A"
.fi
.RE
.LP
w pliku z map±.
.LP
To, która z akcji dla danego klawisza jest wybierana podczas jego wci¶niêcia
zale¿y od modyfikatorów, które s± czynne w danej chwili. Sterownik
klawiatury wspiera 8 modyfikatorów. Modyfikatory te s± oznaczone
(zdecydowanie arbitralnie) jako Shift, AltGr, Controlm Alt, ShiftL, ShiftR,
CtrlL, CtrlR.
Ka¿dy z tych modyfikatorów ma zwi±zan± wagê, która jest poteg± dwójki, wg
nastêpuj±cej tabeli:
.LP
.RS
.TP 24
.I modyfikator
.I waga
.TP 24
Shift
  1
.PD 0
.TP 24
AltGr
  2
.TP 24
Control
  4
.TP 24
Alt
  8
.TP 24
ShiftL
 16
.TP 24
ShiftR
 32
.TP 24
CtrlL
 64
.TP 24
CtrlR
128
.PD
.RE
.LP
Efektywna akcja klawisza jest znajdywana przez dodawanie wag wszystkich
modyfikatorów. Domy¶lnie ¿aden z nich nie jest u¿ywany, wiêc podczas
naciskania lub opuszczania klawisza pobierana jest np. akcja numer
zero; ta w pierwszej kolumnie linii definicji klawisza. Gdy u¿yto np.
klawiszy Shift+Alt, u¿yta zostaje akcja numer 9 (z 10 kolumny).
.LP
Zmiana stanu tego, które modyfikatory jak dzia³aj± mo¿e byæ dokonana przez
powi±zanie odpowiednich akcji klawiszowych z ¿±danymi klawiszami. Np.
przywi±zywanie symbolu Shift do klawisza ustawia modyfikator Shift podczas
naciskania klawisza i uniewa¿nia dzia³anie tego modyfikatora podczas
zwolnienia klawisza. Przywi±zanie AltGr_Lock do klawisza ustawia AltGr po
naci¶niêciu tego klawisza, a anuluje to po ponownym naci¶niêciu. (Domy¶lnie,
Shift, AltGr, Control i Alt s± przywi±zane do klawiszy, które nosz± podobn±
etykietê; AltGr mo¿e oznacaæ prawy klawisz Alt.)
.LP
Zauwa¿, ¿e powiniene¶ byæ bardzo ostro¿nym podczas przywi±zywania klawiszy
modyfikuj±cych. W przeciwnym wypadku mo¿e siê to skoñczyæ bezu¿yteczn± map±
klawiatury. Je¶li na przyk³ad zdefiniujesz Control w jego pierwszej kolumnie
i zostawisz resztê kolumn jako PusteSymbole (VoidSymbols), to masz problem.
Dlatego, ¿e naciskanie klawisza w³±cza modyfikator Control, a nastêpne akcje
bêd± podgl±dane w pi±tej kolumnie (zobacz tabelê powy¿ej). Tak wiêc, je¶li
pu¶cisz klawisz, pobierana bêdzie akcja z pi±tej kolumny. Ma ona na sobie
PustySymbol, wiêc nic siê nie dzieje. Znaczy to, ¿e modyfikator Control
wci±¿ pracuje, chocia¿ pu¶ci³e¶ klawisz. Ponowne naciskanie i opuszczanie
klawisza nie daje rezultatów. Aby temu zapobiec, powiniene¶ zawsze
definiowaæ wszystkie kolumny tak, aby mia³y ten sam symbol modyfikuj±cy.
Istnieje dla tego porêczna notacja short-hand, o której ni¿ej.
.LP
.I keysymy
mog± byæ podawane w notacji dziesiêtnej, ósemkowej, szesnastkowej, lub
symbolicznej. Numeryczne notacje u¿ywaj± tego samego formatu co
.IR keynumber .
Notacja symboliczna jest podobna do tej z
.BR xmodmap (1).
Zauwa¿alnymi ró¿nicami s± symbole numeryczne. Symbole '0', ..., '9' w
.BR xmodmap (1)
s± zamieniane na odpowiadaj±ce s³owa 'zero', 'one', ..., 'nine' aby zapobiec
niejednoznaczno¶ciom z notacj± numeryczn±.
.LP
Powinno siê zaznaczyæ, ¿e u¿ywanie notacji numerycznej dla
.I keysymów
jest mocno nieportowalne, jako ¿e numery akcji klawiszy mog± siê ró¿niæ z
jednej wersji j±dra na drug±, z czego wynika powy¿sze. Notacja ta mo¿e byæ
u¿ywana tylko je¶li wiesz, ¿e istnieje okre¶lona akcja klawiaturowa w twoim
j±drze, dla której twoja wersja
.BR loadkeys (1)
nie posiada nazwy symbolicznej.
.LP
Jest wiele notacji short-hand, poprawiaj±cych czytelno¶æ i redukuj±cych
pracê i prawdopodobieñstwo b³êdów przy wpisywaniu.
.LP
Przede wszystkim, mo¿esz podaæ liniê specyfikacji mapy w postaci
.LP
.RS
.EX
keymaps 0-2,4-5,8,12
.EE
.RE
.LP
aby wskazaæ, ¿e te linie mapy klawiaturowej nie bêd± wyszczególnia³y
wszystkich 256 kolumn, lecz tylko jedn± ze wskazanych. (Np: sam Shift,
AltGr, Control, Control+Shift, Alt i Control+Alt, czyli 7 zamiast 256
kolumn.)
Je¶li nie poda siê takiej linii, mapy klawiaturowe 0-M bêd± zdefiniowane.
M+1 to maksymalna ilo¶æ wpisów linii definicyjnej.
.LP
Nastêpnie, mo¿esz porzuciæ wszelkie koñcowe wpisy PustychSymboli z definicji
klawisza. PustySymbol oznacza akcjê klawiaturow±, która nie powoduje efektu.
Np. aby zdefiniowaæ klawisz numer 30 do wyprowadzania 'a' bez shiftu i 'A' z
shiftem, niczego za¶ przy wci¶niêtym AltGr i innych modyfikatorach, mo¿esz
napisaæ
.LP
.RS
.nf
keycode  30 = a	A
.fi
.RE
.LP
zamiast bardziej "gadatliwego"
.LP
.RS
.nf
keycode  30 = a	A	VoidSymbol	VoidSymbol \\
		VoidSymbol VoidSymbol VoidSymbol ...
.fi
.RE
.LP
Zwykle mo¿esz u¿yæ jeszcze innych definicji. Je¶li wprowadzisz liniê
definicji klawisza z tylko jednym kodem akcji po znaku równo¶ci, to ma to
specjalne znaczenie. Je¶li kod (numeryczny lub symboliczny) nie jest liter±
ASCII, znaczy to, ¿e kod jest wyj±tkowo replikowany na wszystkie
zdefiniowane kolumny. Je¶li, z drugiej strony, kod jest znakiem ASCII w
zasiêgu 'a', ..., 'z' lub 'A', ..., 'Z', to robione s± nastêpuj±ce definicje
dla ró¿nych kombinacji modyfikatorów. (Tabela listuje dwa mo¿liwe przypadki:
zarówno z pojedynczym kodem akcji dla ma³ej litery, oznaczonej przez 'x',
jak i dla du¿ej litery, oznaczonej przez 'Y'.)
.LP
.RS 4
.TP 24
.I modifier
.I symbol
.TP 24
brak
x			Y
.PD 0
.TP 24
Shift
X			y
.TP 24
AltGr
x			Y
.TP 24
Shift+AltGr
X			y
.TP 24
Control
Control_x		Control_y
.TP 24
Shift+Control
Control_x		Control_y
.TP 24
AltGr+Control
Control_x		Control_y
.TP 24
Shift+AltGr+Control
Control_x		Control_y
.TP 24
Alt
Meta_x		Meta_Y
.TP 24
Shift+Alt
Meta_X		Meta_y
.TP 24
AltGr+Alt
Meta_x		Meta_Y
.TP 24
Shift+AltGr+Alt
Meta_X		Meta_y
.TP 24
Control+Alt
Meta_Control_x	Meta_Control_y
.TP 24
Shift+Control+Alt
Meta_Control_x	Meta_Control_y
.TP 24
AltGr+Control+Alt
Meta_Control_x	Meta_Control_y
.TP 24
Shift+AltGr+Control+Alt
Meta_Control_x	Meta_Control_y
.PD
.RE
.LP

Wszystkie poprzednie formy linii definicji klawiszy zawsze definiowa³y
wszystkie M+1 mo¿liwych kombinacji modyfikatorów, niezale¿nie od ilo¶ci
rzeczywistych kodów akcji.
Istnieje jednak wariacja sk³adni definicji dla definiowania pojedynczych
akcji dla okre¶lonych kombinacji modyfikatora i klawisza. Jest to
szczególnie u¿yteczne, je¶li ³adujesz talicê klawiaturow±, która nie
odpowiada twoim potrzebom w niektórych kombinacjach modyfikatorów, jak np.
AltGr+klawisze funkcyjne. Mo¿esz utworzyæ wtedy ma³y lokalny plik,
redefiniuj±cy tylko te kombinacje modyfikatorów i ³adowaæ go po za³adowaniu
pliku g³ównego. Sk³adnia tego formatu to:
.LP
.BR "" { " plain " "| <sekwencja modyfikatorów> } " keycode
.I keynumber
.B =
.I keysym
.LP
, n.p.,
.RS
.EX
.nf
plain keycode 14 = BackSpace
control alt keycode 83 = Boot
alt keycode 105 = Decr_Console
alt keycode 106 = Incr_Console
.fi
.EE
.RE
U¿ycie "plain" zdefiniuje tylko podstawowy wpis klawisza (np. ten, przy
którym nie ma w³±czonych modyfikatorów), bez dotykania powi±zañ innych
kombinacji tego klawisza.
.LP
Dodatkowo do komentarzy i linii definicji klawiszy, pliki tablic
klawiaturowych mog± zawieraæ definicje napisów. S± one u¿ywane do
definiowania, co wysy³a kod akcji ka¿dego klawisza funkcyjnego. Sk³adnia
definicji napisu to:
.LP
.RS
.B string
.I keysym
.B =
.BI
"tekst"
.RE
.LP
.I tekst
mo¿e zawieraæ literalne znaki, kody ósemkowe w formacie odwrotnego uko¶nika, za
którym pod±¿a do trzech cyfr ósemkowych, a tak¿e trzy sekwencje eskejpowe
\fB\\n\fP, \fB\\\\\fP, i \fB\\"\fP,
odpowiednio dla nowej linii, odwrotnego uko¶nika i cytatu.
.LP
Aby znale¼æ, które
.I keysymy
s± dostêpne do u¿ytku w plikach klawiaturowych, u¿yj komendy
.LP
.RS
.nf
.B dumpkeys --long-info
.fi
.RE
.LP
Niestety, obecnie nie ma opisu, co który symbol robi. Trzeba to zgadywaæ z
nazwy, wydedukowanej ze ¼róde³ j±dra.
.LP
.SH PRZYK£ADY
Nastêpuj±cy wpis wymienia ze sob± lewy klawisz Control i CapsLock:
.LP
.RS
.nf
keycode  58 = Control
keycode  29 = Caps_Lock
.fi
.RE
.LP
Klawisz o numerze 58 jest normalnie Caps Lockiem, a klawisz numer 29 jest
zwykle klawiszem Control.
.LP
Nastêpuj±cy wpis ustawia milsze zachowanie klawiszy Shift i Caps Lock, jak
w starych maszynach do pisania. To znaczy, wci¶niêcie klawiszu Caps Lock
jeden, lub wiêcej razy, w³±cza klawiaturê w stan CapsLock, a wci¶niêcie
dowolnego z Shiftów wy³±cza go.
.LP
.RS
.nf
keycode  42 = Uncaps_Shift
keycode  54 = Uncaps_Shift
keycode  58 = Caps_On
.fi
.RE
.LP
Nastêpuj±cy wpis ustawia uk³ad bloku edycyjnego na rozszerzonych
klawiaturach, aby by³y bardziej podobne do terminali serii VT200:
.LP
.RS
.nf
keycode 102 = Insert
keycode 104 = Remove
keycode 107 = Prior
shift keycode 107 = Scroll_Backward
keycode 110 = Find
keycode 111 = Select
control alt   keycode 111 = Boot
control altgr keycode 111 = Boot
.fi
.RE
.LP
Oto przyk³ad na przywi±zanie napisu "du\\ndf\\n" do klawisza AltGr-D.
U¿ywamy "wolnego" kodu akcji F100, nie przywi±zywanego normalnie do ¿adnego
klawisza.
.LP
.RS
.nf
altgr keycode 32 = F100
string F100 = "du\\ndf\\n"
.LP
.SH "ZOBACZ TAK¯E"
.BR loadkeys (1),
.BR dumpkeys (1),
.BR showkey (1),
.BR xmodmap (1)
