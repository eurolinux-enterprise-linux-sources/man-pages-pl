.\" Copyright (c) 1993 Luigi P. Bai (lpb@softint.com) July 28, 1993
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 28 11:03:24 1993, Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Nov 28 16:43:30 1993, Rik Faith <faith@cs.unc.edu>
.\"          with material from Giorgio Ciucci <giorgio@crcc.it>
.\" Portions Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\" Modified Fri Jan 31 17:24:31 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Sun Feb 18 01:59:29 2001 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 5 Jan 2002 Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\"
.\" Translated by Rafał Lewczuk, 24 Aug 1999
.\" Last update: A. Krzysztofowicz <ankry@mif.pg.gda.pl>, Mar 2002,
.\"              manpages 1.48
.\"
.TH SHMCTL 2 2002-01-05 "Linux 2.4.1" "Podręcznik programisty Linuksa"
.SH NAZWA
shmctl \- sterowanie segmentami pamięci wspólnej
.SH SKŁADNIA
.ad l
.B #include <sys/ipc.h>
.sp
.B #include <sys/shm.h>
.sp
.BI "int shmctl(int " shmid ", int " cmd ", struct shmid_ds *" buf );
.ad b
.SH OPIS
\fI Uwaga! To tłumaczenie może być nieaktualne!\fP
.PP
\fBshmctl()\fP
pozwala użytkownikowi pobierać informacje dotyczące segmentu pamięci wspólnej,
zmieniać właściciela, grupę i prawa dostępu do tego segmentu oraz usunąć
segment. Informacje dotyczące segmentu określonego przez \fIshmid\fP zwracane
są w strukturze \fIshmid_ds\fP zdefiniowanej następująco:
.PP
.in +4n
.nf
struct shmid_ds {
    struct ipc_perm shm_perm;  /* prawa dostępu */
    int shm_segsz;             /* rozmiar segmentu (w bajtach) */
    time_t shm_atime;          /* czas ostatniego dołączenia */
    time_t shm_dtime;          /* czas ostatniego odłączenia */
    time_t shm_ctime;          /* czas ostatniej modyfikacji */
    unsigned short shm_cpid;   /* PID twórcy segmentu */
    unsigned short shm_lpid;   /* PID ostatniego operatora segmentu */
    short shm_nattch;          /* liczba dołączeń */
    ...
};
.fi
.in -4n
.PP
Można nadać wartość wyróżnionym polom struktury \fIshm_perm\fP opisującej prawa
dostępu:
.PP
.in +4n
.nf
struct ipc_perm
{
    key_t  key;
    \fBushort uid\fP;   /* euid oraz egid \fBwłaściciela\fP segmentu */
    \fBushort gid\fP;
    ushort cuid;  /* euid oraz egid twórcy segmentu */
    ushort cgid;
    \fBushort mode\fP;  /* 9 najmniej znaczących bitów praw dostępu */
    ushort seq;   /* numer porządkowy */
};
.fi
.in -4n
.PP
Następujące polecenia mogą być przekazane za pomocą parametru
.B cmd :
.br
.TP 12
.B IPC_STAT
służy do kopiowania informacji o segmencie pamięci wspólnej do bufora
\fIbuf\fP. Użytkownik musi mieć prawo do \fBodczytu\fP segmentu pamięci
wspólnej.
.TP
.B IPC_SET
służy do modyfikacji praw dostępu do segmentu. Z pola \fIshm_perms\fP
struktury wskazanej przez parametr
.I buf
pobierane są \fIuid\fP, \fIgid\fP i \fImode\fP.
System uwzględnia tylko 9 najmniej znaczących bitów parametru \fImode\fP.
Polu
.I shm_ctime
przypisywane jest aktualny czas. Użytkownik musi być właścicielem segmentu,
jego twórcą lub administratorem systemu.
.TP
.B IPC_RMID
służy do zaznaczenia segmentu do usunięcia. Zostanie on naprawdę usunięty
w momencie, gdy wszystkie procesy odłączą się. (Tj. gdy pole
.I shm_nattch
struktury
.I shmid_ds
opisującej segment osiągnie wartość zero.) Użytkownik musi być właścicielem
segmentu, jego twórcą lub administratorem systemu.
.PP
Użytkownik \fImusi\fP zapewnić, że segment po użyciu zostanie na pewno
usunięty. W przeciwnym przypadku, pamięć lub obszar wymiany zajmowane przez
segment nie zostaną zwolnione.
.PP
Dodatkowo, \fBadministrator systemu\fP może zabronić lub zezwolić na wymianę 
obszarów pam ięci zajmowanych przez segment (tylko w systemie Linux). Służą
do tego następujące wartości \fIcmd\fP:
.br
.TP 12
.B SHM_LOCK
zabezpiecza segment pamięci wspólnej przed wymianą. Strony, które wcześniej
uległy wymianie zostaną ponownie załadowane do pamięci dopiero w momencie,
gdy użytkownik wykona do nich dostęp.
.TP
.B SHM_UNLOCK
zezwala na wymianę stron należących do segmentu pamięci wspólnej.
.PP
Polecenia sterujące
.BR IPC_INFO ,
.B SHM_STAT
oraz
.B SHM_INFO
są używane przez program 
.BR ipcs (8)
do pobierania informacji o używanych zasobach w systemie.
Jeśli zajdzie potrzeba, polecenia te mogą w przyszłości ulec zmianie lub
ich obsługa może zostać zawarta w systemie plików /proc.
.SH "WARTOŚĆ ZWRACANA"
Funkcja zwraca 0, jeśli operacja zakończy się pomyślnie, a \-1, gdy wystąpi
błąd.
.SH BŁĘDY
W przypadku wystąpienia błędu, zmiennej
.B errno
przypisana zostanie jedna z poniższych wartośći:
.TP 12
.B EACCES
jeśli wydano polecenie \fBIPC_STAT\fP, a prawa dostępu określone w
\fIshm_perm.modes\fP nie pozwalają na odczyt segmentu
.IR shmid .
.TP
.B EFAULT
Parametr 
.I cmd
ma wartość
.B IPC_SET
lub
.BR IPC_STAT ,
ale adres wskazany przez 
.I buf
jest niedostępny.
.TP
.B EINVAL
jeśli 
.I shmid
nie jest poprawnym identyfikatorem segmentu lub
.I cmd
nie jest poprawnym poleceniem.
.TP
.B EIDRM
jeśli 
.I shmid_ds
wskazuje na segment, który został usunięty.
.TP
.B EPERM
jeśli użytkownik próbował wywołać polecenie
.B IPC_RMID
lub
.BR IPC_SET ,
ale efektywny UID właściciela procesu wywołującego funkcję nie odpowiada
twórcy segmentu (określonemu w
.IR shm_perm.cuid ),
właścicielowi segmentu (określonemu w
.IR shm_perm.uid ),
ani administratorowi systemu.
.TP
.B EOVERFLOW
jest zwracane, gdy wydano polecenie \fBIPC_STAT\fP, a wartość gid lub uid
jest za duża, aby ją umieścić w strukturze wskazywanej przez
.IR buf .
.SH UWAGA
Niektóre pola struktury \fIstruct shmid_ds\fP były w Linuksie 2.2 typu short
a stały się typu long w Linuksie 2.4. Aby to wykorzystać, powinna wystarczyć
rekompilacja pod glibc-2.1.91 lub nowszą.
(Jądro rozróżnia stare i nowe wywołania za pomocą znacznika IPC_64 w
.IR cmd .)
.SH "ZGODNE Z"
SVr4, SVID. SVr4 dokumentuje dodatkowe kody błędów: EINVAL, ENOENT, ENOSPC, 
ENOMEM, EEXIST. Ani SVr4 ani SVID nie dokumentują kodu błędu EIDRM.
.SH "ZOBACZ TAKŻE"
.BR shmget (2),
.BR shmop (2)
.SH "INFORMACJE O TŁUMACZENIU"
Powyższe tłumaczenie pochodzi z nieistniejącego już Projektu Tłumaczenia Manuali i 
\fImoże nie być aktualne\fR. W razie zauważenia różnic między powyższym opisem
a rzeczywistym zachowaniem opisywanego programu lub funkcji, prosimy o zapoznanie 
się z oryginalną (angielską) wersją strony podręcznika za pomocą polecenia:
.IP
man \-\-locale=C 2 shmctl
.PP
Prosimy o pomoc w aktualizacji stron man \- więcej informacji można znaleźć pod
adresem http://sourceforge.net/projects/manpages\-pl/.
