.\" Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Tue Oct 22 16:40:11 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Mon Jul 10 21:09:59 2000 by aeb
.\" Modified 1 Jun 2002, Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\"    Language clean-ups.
.\"    Enhanced and corrected information on msg_qbytes, MSGMNB and MSGMAX
.\"    Added note on restart behaviour of msgsnd and msgrcv
.\"    Formatting clean-ups (argument and field names marked as .I
.\"            instead of .B)
.\"
.\" Translated by Rafal Lewczuk, 14 May 1999
.\" Last update: A. Krzysztofowicz <ankry@mif.pg.gda.pl>, Jun 2002,
.\"              manpages 1.51
.\"
.TH MSGOP 2 2002-06-01 "Linux 2.4.18" "Podrêcznik programisty Linuksa" 
.SH NAZWA
msgop \- przekazywanie komunikatów
.SH SK£ADNIA
.nf
.B
#include <sys/types.h>
.br
.B
#include <sys/ipc.h>
.br
.B
#include <sys/msg.h>
.fi
.sp
.BI "int msgsnd(int " msqid ,
.BI "struct msgbuf *" msgp ,
.BI "size_t " msgsz ,
.BI "int " msgflg );
.sp
.BI "ssize_t msgrcv(int " msqid ,
.BI "struct msgbuf *" msgp ,
.BI "size_t " msgsz ,
.BI "long " msgtyp ,
.BI "int " msgflg );
.SH OPIS
W celu wys³ania lub odebrania komunikatu, proces powinien zaalokowaæ
strukturê danych o nastêpuj±cej postaci ogólnej:
.sp
.B
	struct msgbuf {
.br
.B
		long	mtype;	
/* rodzaj komunikatu, musi byæ > 0 */
.br
.B
		char	mtext[1];	
/* przekazywane dane */
.br
.B
	};
.sp
Pole
.I mtext
jest tablic± (lub inna struktur±) o rozmiarze okre¶lonym przez
.IR msgsz ,
bêd±cym nieujemn± liczb± ca³kowit±.
Dozwolone s± komunikaty o zerowej d³ugo¶ci (tzn. nie zawieraj±ce pola
.IR mtext )
Warto¶æ pola
.I mtype
musi byæ liczb± ¶ci¶le dodatni±, która mo¿e s³u¿yæ procesowi odbieraj±cemu
komunikaty do filtrowania kolejki.
(zobacz czê¶æ dotycz±c±
.BR msgrcv ).
.PP
Proces wywo³uj±cy funkcjê musi mieæ prawo zapisu do kolejki, aby wys³aæ
komunikat, natomiast prawo odczytu jest niezbêdne, aby komunikat odebraæ.
.PP
Wywo³anie systemowe 
.B msgsnd
do³±cza kopiê komunikatu wskazywanego przez
.I msgp
do kolejki o identyfikatorze okre¶lonym przez
.IR msqid .
.PP
Gdy w kolejce jest do¶æ miejsca,
.B msgsnd
koñczy siê pomy¶lnie natychmiast
(Pojemno¶æ kolejki okre¶lona jest w polu
.I msg_bytes
struktury danych stowarzyszonej z kolejk±. Podczas tworzenia kolejki
nadawana jest mu warto¶æ inicjalna wynosz±ca
.B MSGMNB
bajtów, lecz ograniczenie to mo¿e zostaæ zmienione za pomoc±
.BR msgctl .)
Gdy w kolejce nie ma do¶æ miejsca, to domy¶lne zachowanie
.B msgsnd
polega na wstrzymaniu wykonywania funkcji do czasu, gdy miejsce stanie siê
dostêpne.
If
Ustawienie w
.B msgflg
znacznika
.B IPC_NOWAIT
spowoduje, ¿e zamiast tego wywo³anie systemowe zakoñczy siê niepomy¶lnie,
zg³aszaj±c b³±d
.BR EAGAIN .

Wstrzymane wywo³anie
.B msgsnd
mo¿e równie¿ zakoñczyæ siê niepomy¶lnie, gdy kolejka zostanie usuniêta
(i wtedy wywo³anie to powoduje przypisanie zmiennej
.I errno
warto¶ci 
.BR EIDRM ),
lub gdy zostanie przechwycony sygna³ (i wtedy wywo³anie to powoduje
przypisanie zmiennej
.I errno
warto¶ci
.BR EINTR ).
.RB ( msgsnd " i " msgrcv
po przerwaniu przez obs³ugê sygna³u nie s± nigdy automatycznie restartowane,
nie zale¿nie od ustawienia znacznika
.B SA_RESTART
podczas ustanaiwiania funkcji obs³ugi sygna³u.)
.PP
W wyniku pomy¶lnego wykonania operacji, struktura danych opisuj±ca
kolejkê komunikatów zostanie zmodyfikowana nastêpuj±co:
.IP
.I msg_lspid
przypisany zostanie identyfikator procesu wykonuj±cego tê operacjê.
.IP
.I msg_qnum
zostanie zwiêkszone o 1
.IP
.I msg_stime
zostanie przypisany aktualny czas.
.PP
Wywo³anie systemowe
.B msgrcv
odczyta komunikat z kolejki wskazanej przez parametr
.I msqid
do struktury
.I msgbuf
wskazywanej przez parametr
.I msgp
usuwaj±c odczytany komunikat z kolejki.
.PP
Parametr
.I msgsz
okre¶la maksymalny rozmiar (w bajtach) pola
.I mtext
struktury wskazywanej przez parametr
.IR msgp .
Je¶li dane komunikatu zajmuj± wiêcej bajtów, ni¿
.IR msgsz ,
a parametr
.I msgflg
zawiera znacznik
.BR MSG_NOERROR ,
wówczas dane komunikatu zostan± obciête (obciêta czê¶æ zostanie
utracona). Je¶li znacznik nie jest ustawiony a (a komunikat jest za d³ugi),
wówczas nie zostanie on usuniêty z kolejki, natomiast system zg³osi
b³±d a zmiennej
.I errno
zostanie przypisana warto¶æ
.BR E2BIG .
.PP
Parametr
.I msgtyp
okre¶la rodzaj komunikatu w nastêpuj±cy sposób:
.IP
Je¶li
.I msgtyp
jest równy
.BR 0 ,
to czytany jest pierwszy dostêpny komunikat w kolejce 
(czyli najdawniej wys³any).
.IP
Je¶li
.I msgtyp
ma warto¶æ wiêksz± ni¿
.BR 0 ,
to z kolejki odczytywany jest pierwszy komunikat tego typu, chyba ¿e
w parametrze
.I msgflg
zostanie ustawiony znacznik
.BR MSG_EXCEPT ,
kiedy to z kolejki zostanie odczytany pierwszy komunikat o typie innym ni¿
podany w
.IR msgtyp .
.IP
Je¶li
.I msgtyp
ma warto¶æ mniejsz± ni¿ 
.BR 0 , 
to z kolejki zostanie odczytany pierwszy komunikat o najni¿szym numerze typu,
o ile jest on mniejszy lub równy warto¶ci bezwzglêdnej
.I msgtyp .
.PP
Parametr 
.I msgflg
zawiera bitow± alternatywê (OR) ¿adnego, jednego lub wiêcej spo¶ród
nastêpuj±cych znaczników:
.IP
.B IPC_NOWAIT
Wywo³anie nie bêdzie wstrzymywaæ pracy procesu, je¶li w kolejce nie ma
komunikatów odpowiedniego typu. Wywo³anie systemowe zg³osi wówczas b³±d,
przypisuj±c zmiennej
.I errno
warto¶æ
.BR ENOMSG.
.IP
.B MSG_EXCEPT
U¿ywane jest wtedy, gdy
.I msgtyp
ma warto¶æ wiêksz± ni¿
.BR 0 ,
spowoduje odczytanie z kolejki pierwszego komunikatu innego typu, ni¿
.IR msgtyp .
.IP
.B MSG_NOERROR
Spowoduje obciêcie komunikatu, je¶li jego dane s± d³u¿sze ni¿
.I msgsz
bajtów.
.PP
Je¶li w kolejce nie ma komunikatu spe³niaj±cego te warunki, za¶ znacznik 
.B IPC_NOWAIT
nie zosta³ przekazany w
.IR msgflg ,
to proces zostanie wstrzymany, dopóki nie nast±pi jedno z poni¿szych zdarzeñ:
.IP
Komunikat odpowiedniego typu zostanie umieszczony w kolejce.
.IP
Kolejka zostanie usuniêta z systemu. W tym przypadku wywo³anie systemowe
zg³osi b³±d, przypisuj±c zmiennej
.I errno
warto¶æ
.BR EIDRM .
.IP
Proces wywo³uj±cy otrzyma sygna³ wymagaj±cy przechwycenia. W tym przypadku
wywo³anie systemowe zg³osi b³±d, przypisuj±c zmiennej 
.I errno
warto¶æ
.BR EINTR .
.PP
Je¶li operacja zakoñczy siê pomy¶lnie, to struktura danych opisuj±ca kolejkê
zostanie nastêpuj±co zmodyfikowana:
.IP
.I msg_lrpid
przyjmie warto¶æ równ± identyfikatorowi wo³aj±cego procesu
.IP
.I msg_qnum
zostanie zmniejszone o 1.
.IP
.I msg_rtime
zostanie przypisany aktualny czas.
.SH "WARTO¦Æ ZWRACANA"
W przypadku niepowodzenia, obydwa wywo³ania zwróc± 
.B \-1
i przypisz± zmiennej
.I errno
warto¶æ okre¶laj±c± rodzaj b³êdu.
W przeciwnym przypadku,
.B msgsnd
zwróci
.BR 0 ,
za¶
.B msgrvc
zwróci liczbê bajtów skopiowanych z kolejki do tablicy
.IR mtext .
.SH B£ÊDY
Je¶li wywo³anie
.B msgsnd
nie powiedzie siê, to zmienna
.I errno
przyjmie jedn± z poni¿szych warto¶ci:
.TP 11
.B EAGAIN
Komunikat nie mo¿e zostaæ wys³any do kolejki, z
powodu ograniczenia
.IR msg_qbytes ,
a znacznik
.B IPC_NOWAIT
zosta³ przekazany w parametrze
.IR mgsflg .
.TP
.B EACCES
Proces nie ma prawa zapisu do kolejki komunikatów.
.TP
.B EFAULT
dres wskazywany przez
.I msgp
jest niedostêpny.
.TP
.B EIDRM
Kolejka zosta³a w miêdzyczasie usuniêta.
.TP
.B EINTR
Podczas oczekiwania na zwolnienie miejsca w kolejce, proces przechwyci³
sygna³.
.TP
.B EINVAL
Niew³a¶ciwa warto¶æ
.IR msqid ,
.I mtype
(powinna byæ dodatnia) lub
.I msgsz
(powinna byæ wiêksza lub równa
.B 0
i mniejsza lub równa
.BR MSGMAX ).
.TP
.B ENOMEM
Brak w systemie pamiêci na skopiowanie podanego
.IR msgbuf .
.PP
Je¶li wywo³anie
.B msgrcv
nie powiedzie siê, to zmiennej 
.I errno
zostanie przypisana jedna z poni¿szych warto¶ci:
.TP 11
.B E2BIG
Tekst komunikatu jest d³u¿szy ni¿
.I msgsz ,
za¶ znacznik
.B MSG_NOERROR
nie zosta³ w parametrze 
.I msgflg
ustawiony.
.TP
.B EACCES
Proces nie ma prawa do odczytu danej kolejki komunikatów.
.TP
.B EFAULT
Adres wskazywany przez
.I msgp
jest niedostêpny.
.TP
.B EIDRM
Proces oczekiwa³ na komunikat, ale w miêdzyczasie kolejka zosta³a usuniêta.
.TP
.B EINTR
Proces oczekiwa³ na komunikat, ale dotar³ do niego jaki¶
wymagaj±cy obs³u¿enia sygna³.
.TP
.B EINVAL
Niew³a¶ciwa warto¶æ
.I msgqid
lub
.I msgsz
(powinna byæ wiêksza lub równa 
.BR 0 ).
.TP
.B ENOMSG
Znacznik
.B IPC_NOWAIT
zosta³ przekazany w
.I msgflg ,
ale w kolejce nie ma komunikatu ¿±danego typu.
.SH UWAGI
Wywo³anie
.B msgsnd
obowi±zuj± nastêpuj±ce ograniczenia systemowe:
.TP 11
.B MSGMAX
Maksymalny rozmiar danych komunikatu: ta implementacja ogranicza wielko¶æ do
8192 bajty.
.TP
.B MSGMNB
Domy¶lny maksymalny ³±czny rozmiar (w bajtach) wszystkich komunikatów
w kolejce: 16384 bajty.
Administrator systemu mo¿e przekroczyæ to ograniczenie, przy pomocy wywo³ania
.BR msgctl .
.PP
W tej implementacji nie ma jawnego systemowego ograniczenia liczby komunikatów
przechowywanych w kolejce
.RB ( MSGTQL )
i na rozmiar obszaru (w bajtach) przeznaczonego na komunikaty
.RB ( MSGPOOL ).
.SH "ZGODNE Z"
SVr4, SVID.
.SH UWAGA
Parametr bêd±cy wska¼nikiem jest w ibc4, libc5, glibc 2.0 i glibc 2.1
zadeclarowany jako \fIstruct msgbuf *\fP. W glibc 2.2 jest zadeklarowany jako
\fIvoid *\fP (\fIconst void *\fP dla \fImsgsnd()\fP), zgodnie z SUSv2.
.SH "ZOBACZ TAK¯E"
.BR ipc (5),
.BR msgctl (2),
.BR msgget (2),
.BR msgrcv (2),
.BR msgsnd (2)
