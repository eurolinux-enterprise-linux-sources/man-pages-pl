.\" Hey Emacs! This file is -*- nroff -*- source.
.\" 
.\" 2000 PTM Przemek Borys
.\" Last update: A. Krzysztofowicz <ankry@mif.pg.gda.pl>, Mar 2002,
.\"              manpages 1.48
.\" 
.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Modified Sat Jul 24 13:32:44 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon Jun 23 14:09:52 1997 by aeb - add EINTR.
.\" Modified Tue Jul  7 12:26:42 1998 by aeb - changed return value wait3
.\"
.TH WAIT4 2 1997-06-23 "Linux" "Podręcznik programisty Linuksa"
.SH NAZWA
wait3, wait4 \- oczekiwanie na zakończenie procesu (styl BSD)
.SH SKŁADNIA
.nf
.B #include <sys/types.h>
.B #include <sys/time.h>
.B #include <sys/resource.h>
.B #include <sys/wait.h>
.sp 2
.BI "pid_t wait3(int *" "status" ", int " opcje ,
.BI "      struct rusage *" ruzycie );
.sp
.BI "pid_t wait4(pid_t " pid ", int *" status ", int " opcje ,
.BI "      struct rusage *" ruzycie );
.fi
.SH OPIS
\fI Uwaga! To tłumaczenie może być nieaktualne!\fP
.PP
Funkcja
.B wait3
zawiesza wykonywanie bieżącego procesu aż jego potomek nie zakończy
działania, lub aż nie zostanie dostarczony sygnał, którego akcją jest
zakończenie bieżącego procesu lub wywołanie funkcji obsługi sygnału.
Jeśli potomek zakończył działanie przed wywołaniem tej funkcji (tzw.
"zombie" - proces duch), zakończy ona działanie natychmiast. Wszelkie zasoby
systemowe używane przez potomka są zwalniane.

Funkcja
.B wait4
zawiesza wykonywanie bieżącego procesu aż potomek, określony przez argument
.I pid
nie zakończy działania, lub aż nie zostanie dostarczony sygnał, którego
akcją jest zakończenie bieżącego procesu lub wywołanie funkcji obsługi
sygnału. Jeśli potomek określony przez
.I pid
już zakończył działanie (proces duch), funkcja kończy działanie natychmiast.
Wszelkie zasoby systemowe używane przez potomka są zwalniane.

Wartość
.I pid
może być jednym z:
.IP "< \-1"
oznacza oczekiwanie na dowolnego potomka, którego identyfikator grupy
procesów jest równy modułowi wartości
.IR pid .
.IP \-1
co oznacza oczekiwanie na dowolny proces potomny; jest to równoważne
wywołaniu
.BR wait3 .
.IP 0
oznacza oczekiwanie na dowolnego potomka, którego identyfikator grupy
procesów jest równy identyfikatorowi procesu wołającego.
.IP "> 0"
oznacza oczekiwanie na potomka, którego PID jest równy wartości
.IR pid .
.PP
Wartość argumentu
.I opcje
jest bitowym OR zera lub więcej spośród następujących stałych:
.TP
.B WNOHANG
oznacza zwrócenie wartości natychmiast w wypadku gdy nie ma potomka, na
którego można by czekać.
.TP
.B WUNTRACED
oznacza również nieobsługiwanie zatrzymanych potomków oraz tych, których
status nie został zgłoszony.
.PP
Jeśli
.I status
nie wynosi
.BR NULL ,
.B wait3
i
.B wait4
zapisują w miejscu wskazywanym przez
.IR status
informacje o stanie.
.PP
Stan ten może być określony za pomocą następujących makr (pobierających jako
argument bufor stanu (wartość \fBint\fR), \(em  nie wskaźnik do tego bufora:
.TP
.BI WIFEXITED( status )
jest niezerowe, gdy potomek zakończył pracę normalnie.
.TP
.BI WEXITSTATUS( status )
wyraża ostatnich osiem znaczących bitów kodu powrotu zakończonego potomka
(który mógł być ustawiony jako argument funkcji
.B exit
lub jako argument instrukcji
.B return
w programie głównym. Makro to może być przetwarzane tylko jeśli
.B WIFEXITED
zwróciło wartość niezerową.
.TP
.BI WIFSIGNALED( status )
zwraca prawdę, jeśli potomek zakończył działanie z powodu nieprzechwyconego
sygnału.
.TP
.BI WTERMSIG( status )
zwraca numer sygnału, który spowodował zakończenie procesu potomnego.
Makro to może być wyliczane tylko po zwróceniu przez
.B WIFSIGNALED
wartości niezerowej.
.TP
.BI WIFSTOPPED( status )
zwraca prawdę, jeśli proces potomny, który spowodował wyjście jest obecnie
zatrzymany. Jest to możliwe tylko jeśli wywołanie wykonano z użyciem
.BR WUNTRACED .
.TP
.BI WSTOPSIG( status )
zwraca numer sygnału, który spowodował zatrzymanie potomka. Makro to może być
wyliczane tylko po zwróceniu przez
.B WIFSTOPPED
wartości niezerowej.
.PP
Jeśli
.I ruzycie
nie jest równe
.BR NULL ,
zdefiniowana w
.I <sys/resource.h>
struktura
.BR "struct rusage" ,
na którą
.I ruzycie
wskazuje, zostanie wypełniona informacjami o wykorzystywaniu zasobów.
Szczegóły znajdują się w
.BR getrusage (2).
.SH "WARTOŚĆ ZWRACANA"
Identyfikator zakończonego procesu lub \-1 w przypadku błędu (w szczególności,
gdy nie istnieje proces potomny zadanego rodzaju, na który można by
oczekiwać), lub zero jeśli użyto
.B WNOHANG
i nie był dostępny żaden potomek. W ostatnich dwóch przypadkach zostanie
odpowiednio ustawione
.IR errno .
.SH BŁĘDY
.TP
.B ECHILD
Nie istnieje żaden odpowiedni proces potomny, na który można by oczekiwać.
.TP
.B EINTR
Jeśli nie ustawiono
.B WNOHANG
a został przechwycony niezablokowany sygnał lub
.BR SIGCHLD .
.TP
.SH UWAGI
Dołączenie
.I <sys/time.h>
nie jest obecnie wymagane, lecz zwiększa przenośność.
(Faktycznie,
.I <sys/resource.h>
zawiera definje struktury
.I rusage
z polami typu
.I struct timeval
zdefiniowanego w
.IR <sys/time.h> .)
.LP
Prototyp dla tych funkcji jest dostępny jedynie, gdy zdefiniowano
.B _BSD_SOURCE
(jawnie lub pośrednio, nie definiując _POSIX_SOURCE lub kompilując
z opcją \-ansi).
.SH "ZGODNE Z"
SVr4, POSIX.1
.SH "ZOBACZ TAKŻE"
.BR signal (2),
.BR getrusage (2),
.BR wait (2),
.BR signal (7)
.SH "INFORMACJE O TŁUMACZENIU"
Powyższe tłumaczenie pochodzi z nieistniejącego już Projektu Tłumaczenia Manuali i 
\fImoże nie być aktualne\fR. W razie zauważenia różnic między powyższym opisem
a rzeczywistym zachowaniem opisywanego programu lub funkcji, prosimy o zapoznanie 
się z oryginalną (angielską) wersją strony podręcznika za pomocą polecenia:
.IP
man \-\-locale=C 2 wait4
.PP
Prosimy o pomoc w aktualizacji stron man \- więcej informacji można znaleźć pod
adresem http://sourceforge.net/projects/manpages\-pl/.
