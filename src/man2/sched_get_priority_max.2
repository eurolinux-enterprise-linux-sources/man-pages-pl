.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" 1999 PTM Przemek Borys
.\" Aktualno¶æ: man-pages 1.54
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\"
.TH GET_PRIORITY_MAX 2 1996-04-10 "Linux 1.3.81" "Podrêcznik programisty Linuksa"
.SH NAZWA
sched_get_priority_max, sched_get_priority_min  \- pobranie zakresu priorytetów statycznych
.SH SK£ADNIA
.B #include <sched.h>
.sp
\fBint sched_get_priority_max(int \fIpolicy\fB);
.sp
\fBint sched_get_priority_min(int \fIpolicy\fB);
.fi
.SH OPIS
.B sched_get_priority_max
zwraca maksymaln± warto¶æ priorytetu, której mo¿na u¿yæ z algorytmem
szeregowania zadañ, okre¶lonym przez \fIpolicy\fR.
.B sched_get_priority_min
zwraca minimaln± warto¶æ priorytetu, której mo¿na u¿yæ z algorytmem
szeregowania zadañ, okre¶lonym przez \fIpolicy\fR. Obs³ugiwane warto¶ci
\fIpolicy\fR to
.IR SCHED_FIFO , 
.I SCHED_RR
i
.IR SCHED_OTHER .

Procesy o wy¿szych warto¶ciach priorytetów szeregowane s± przed tymi,
które maj± ni¿sze warto¶ci. Tak wiêc warto¶æ zwracana przez
\fBsched_get_priority_max\fR bêdzie wiêksza ni¿ warto¶æ zwracana przez
\fBsched_get_priority_min\fR.

Linux zezwala na zakres priorytetów statycznych od 1 do 99 dla
\fISCHED_FIFO\fR i \fISCHED_RR\fR oraz priorytet 0 dla \fISCHED_OTHER\fR.
Zakresy priorytetów szeregowania dla poszczególnych polityk s± 
niezmienialne.

Zakres priorytetów szeregowania mo¿e siê ró¿niæ na innych systemach
POSIX-owych, wiêc dla przeno¶nych aplikacji dobrze jest u¿ywaæ wirtualnego
zakresu priorytetu i mapowaæ go na przedzia³ okre¶lony przez
\fBsched_get_priority_max\fR i \fBsched_get_priority_min\fR.
POSIX.1b wymaga odstêpu co najmniej 32 miêdzy maksymalnymi i minimalnymi
warto¶ciami dla \fISCHED_FIFO\fR i \fISCHED_RR\fR.

Systemy POSIX-owe, na których dostêpne s±
.B sched_get_priority_max
i
.B sched_get_priority_min
definiuj± w <unistd.h>
.IR _POSIX_PRIORITY_SCHEDULING .

.SH "WARTO¦Æ ZWRACANA"
Po pomy¶lnym zakoñczeniu
.B sched_get_priority_max
i
.B sched_get_priority_min
zwracaj± maksymaln±/minimaln± warto¶æ priorytetu dla danej polityki
szeregowania zadañ. Po b³êdzie zwracane jest \-1 i odpowiednio ustawiane
.IR errno .
.SH B£ÊDY
.TP
.B EINVAL
Parametr \fIpolicy\fR nie okre¶la ¿adnej znanej polityki szeregowania zadañ.
.SH "ZGODNE Z"
POSIX.1b (wcze¶niej POSIX.4)
.SH "ZOBACZ TAK¯E"
.BR sched_setaffinity (2),
.BR sched_getaffinity (2),
.BR sched_setscheduler (2), 
.BR sched_getscheduler (2), 
.BR sched_setparam (2), 
.BR sched_getparam (2) 
.PP
.BR sched_setscheduler (2) 
zawiera opis linuksowego algorytmu szeregowania zadañ.
.PP
.I Programming for the real world \- POSIX.4
Billa O. Gallmeistera, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(standard POSIX.1b)
.br
.I ISO/IEC 9945-1:1996
