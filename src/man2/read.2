.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" 1999 PTM Przemek Borys
.\" Last update: A. Krzysztofowicz <ankry@mif.pg.gda.pl>, Jan 2002,
.\"              manpages 1.47
.\"
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Sat Jul 24 00:06:00 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Wed Jan 17 16:02:32 1996 by Michael Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>
.\" Modified Thu Apr 11 19:26:35 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Sun Jul 21 18:59:33 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Fri Jan 31 16:47:33 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Sat Jul 12 20:45:39 1997 by Michael Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>
.\"
.TH READ 2 1997-07-12 "Linux 2.0.32" "Podrêcznik programisty Linuksa"
.SH NAZWA
read \- odczyt z deskryptora pliku
.SH SK£ADNIA
.nf
.B #include <unistd.h>
.sp
.BI "ssize_t read(int " fd ", void *" buf ", size_t " count );
.fi
.SH OPIS
.B read()
próbuje odczytaæ maksymalnie
.I count
bajtów z deskryptora plików
.I fd
do bufora, którego pocz±tek znajduje siê w
.IR buf .
.PP
Je¶li
.I count
jest równe zero, \fBread()\fP zwraca zero i nic wiêcej siê nie dzieje.
Je¶li
.I count
jest wiêksze ni¿ SSIZE_MAX, wynik jest nieokre¶lony.
.PP
.SH "WARTO¦Æ ZWRACANA"
Po pomy¶lnym zakoñczeniu zwracana jest liczba odczytanych bajtów (zero oznacza
koniec pliku), oraz o tê warto¶æ przesuwana jest pozycja w pliku.
Nie jest b³êdem, je¶li liczba ta jest mniejsza ni¿ liczba ¿±danych bajtów;
mo¿e siê to zdarzyæ np. poniewa¿ chwilowo dostêpnych jest mniej bajtów (mo¿e
z powodu blisko¶ci koñca plików, a mo¿e z powodu czytania z potoku lub
z terminala), lub poniewa¿ \fBread()\fR zosta³o przerwane sygna³em.
Po b³êdzie zwracane jest \-1 i odpowiednio ustawiane
.IR errno .
W tym wypadku nie jest okre¶lone czy pozycja w pliku siê zmieni.
.SH B£ÊDY
.TP
.B EINTR
Wywo³anie zosta³o przerwane sygna³em przed odczytaniem danych.
.TP
.B EAGAIN 
Przy u¿yciu
.B O_NONBLOCK
wybrano nieblokuj±ce we/wy, a nie ma akurat danych dostêpnych do odczytania
natychmiast.
.TP
.B EIO
B³±d we/wy. Zdarza siê to na przyk³ad, gdy proces jest w grupie procesów t³a
próbuje czytaæ z kontroluj±cego tty, i blokuje lub ignoruje sygna³ SIGTTIN,
lub jego grupa procesów jest osierocona. Mo¿e siê to równie¿ zdarzyæ, gdy
wyst±pi niskopoziomowy b³±d we/wy podczas odczytu z dysku lub ta¶my.
.TP
.B EISDIR
.I fd
odnosi siê do katalogu.
.TP
.B EBADF
.I fd
nie jest prawid³owym deskryptorem pliku, lub nie jest otwarty dla odczytu.
.TP
.B EINVAL
.I fd
wskazuje na obiekt nieodpowiedni do odczytu.
.TP
.B EINVAL
.I fd
jest skojarzony z obiektem, który nie jest odpowiedni dla odczytu.
.TP
.B EFAULT
.I buf
wskazuje poza dostêpn± dla u¿ytkownika przestrzeñ adresow±.
.PP
Mog± siê pojawiæ inne b³êdy, zale¿nie od obiektu skojarzonego z
.IR fd .
POSIX zezwala by
.B read
którego przerwano po odczytaniu fragmentu danych zwróci³ \-1 (z
.I errno
ustawionym na EINTR) lub by zwróæi³ ilo¶æ odczytanych bajtów.
.SH "ZGODNE Z"
SVr4, SVID, AT&T, POSIX, X/OPEN, BSD 4.3
.SH OGRANICZENIA
Na systemach plików NFS, odczytanie niewielkiej ilo¶ci danych spowoduje
uaktualnienie znacznika czasu tylko za pierwszym razem. Nastêpne wywo³ania
tego nie uczyni±. Jest to zwi±zana z buforowaniem atrybutów po stronie
klienta, gdy¿ wiêkszo¶æ (je¿eli nie wszystkie) klienty NFS pozostawiaj±
uaktualnianie atime serwerowi, a odczyty po stronie klienta, odbywaj±ce
siê z buforów klienta nie spowoduj±  uaktualnienia atime na serwerze, gdy¿
nie ma wówczas odczytów po stronie serwera. Semantykê UNIX-a mo¿na uzyskaæ
poprzez wy³±czenie buforowania atrybutów po stronie klienta. Jednak¿e,
w wiêkszo¶ci przypadków spowoduje to istotny wzrost obci±¿enia serwera
i zmniejszy wydajno¶æ.
.PP
Wiele systemów plików i dysków jest uwa¿ane za dostatecznie szybkie, aby
implementacja
.B O_NONBLOCK
by³a uwa¿ana za zbêdn±. Tak wiêc, O_NONBLOCK mo¿e nie byæ dostêpne dla
plików i/lub dysków.
.SH "ZOBACZ TAK¯E"
.BR close (2),
.BR fcntl (2),
.BR ioctl (2),
.BR lseek (2),
.BR readdir (2),
.BR readlink (2),
.BR select (2),
.BR write (2),
.BR fread (3)
