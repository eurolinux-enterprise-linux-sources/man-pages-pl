.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 21 23:02:38 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 2001-11-17, aeb
.\" Translation 1998 (c) Przemek Borys <pborys@dione.ids.pl>
.\"             2002 (c) Andrzej Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" Synchronized with man-pages 1.47
.\"
.TH _EXIT 2 2001-11-17 Linux "Podręcznik programisty Linuksa"
.SH NAZWA
_exit, _Exit \- zakończenie bieżącego procesu
.SH SKŁADNIA
.B #include <unistd.h>
.sp
.BI "void _exit(int " status );
.sp
.B #include <stdlib.h>
.sp
.BI "void _Exit(int " status );
.SH OPIS
\fI Uwaga! To tłumaczenie może być nieaktualne!\fP
.PP
Funkcja
.B _exit
"natychmiast" kończy proces, z którego została wywołana. Wszystkie
przynależące do procesu otwarte deskryptory plików są zamykane; wszystkie jego
procesy potomne są przejmowane przez proces 1, init, a jego proces macierzysty
otrzymuje sygnał
.BR SIGCHLD .
.LP
Wartość
.I status
jest zwracana procesowi macierzystemu jako kod zakończenia procesu
wywołującego tę funkcję i może zostać odczytana za pomocą jednej z funkcji
z rodziny
.BR wait .
.LP
Funkcja
.B _Exit
jest równoważna
.BR _exit .
.SH "WARTOŚĆ ZWRACANA"
Funkcje te nigdy nie powracają.
.SH "ZGODNE Z"
SVr4, SVID, POSIX, X/OPEN, BSD 4.3
Funkcja \fI_Exit()\fP została wprowadzona przez C99.
.SH UWAGI
Efekty zakończenia, transmisja kodu zakończenia, procesy zombie, przesyłanie
sygnałów itp. zostały przedyskutowane w
.BR exit (3).
.LP
Funkcja
.B _exit
jest podobna do \fBexit()\fP, ale nie wywołuje żadnych funkcji
zarejestrowanych za pomocą funkcji ANSI C
.B atexit
ani żadnych zarejestrowanych funkcji obsługi sygnałów. To, czy wypróżnia ona
standardowe bufory we/wy i usuwa pliki tymczasowe utworzone za pomocą
.BR tmpfile (3),
zależy od implementacji.
Z drugiej strony,
.B _exit
nie zamyka otwartych deskryptorów plików, co może spowodować nieoczekiwane
opóźnienia podczas oczekiwania na zakończenie odłożonych zapisów. Jeśli
opóźnienia te są niepożądane, to może być przydatne wywołanie funkcji
podobnych do \fItcflush()\fP przed wywołaniem \fB_exit()\fP.
To, czy jakiekolwiek odłożone we/wy zostanie anulowane i które z nich mogą
zostać anulowane podczas \fB_exit()\fP, zależy od iplementacji.
.SH ZOBACZ TAKŻE
.BR fork (2),
.BR execve (2),
.BR waitpid (2),
.BR wait4 (2),
.BR kill (2),
.BR wait (2),
.BR exit (3),
.BR termios (3)
.SH "INFORMACJE O TŁUMACZENIU"
Powyższe tłumaczenie pochodzi z nieistniejącego już Projektu Tłumaczenia Manuali i 
\fImoże nie być aktualne\fR. W razie zauważenia różnic między powyższym opisem
a rzeczywistym zachowaniem opisywanego programu lub funkcji, prosimy o zapoznanie 
się z oryginalną (angielską) wersją strony podręcznika za pomocą polecenia:
.IP
man \-\-locale=C 2 _exit
.PP
Prosimy o pomoc w aktualizacji stron man \- więcej informacji można znaleźć pod
adresem http://sourceforge.net/projects/manpages\-pl/.
