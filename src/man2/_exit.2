.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 21 23:02:38 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 2001-11-17, aeb
.\" Translation 1998 (c) Przemek Borys <pborys@dione.ids.pl>
.\"             2002 (c) Andrzej Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" Synchronized with man-pages 1.47
.\"
.TH _EXIT 2 2001-11-17 Linux "Podrêcznik programisty Linuksa"
.SH NAZWA
_exit, _Exit \- zakoñczenie bie¿±cego procesu
.SH SK£ADNIA
.B #include <unistd.h>
.sp
.BI "void _exit(int " status );
.sp
.B #include <stdlib.h>
.sp
.BI "void _Exit(int " status );
.SH OPIS
Funkcja
.B _exit
"natychmiast" koñczy proces, z którego zosta³a wywo³ana. Wszystkie
przynale¿±ce do procesu otwarte deskryptory plików s± zamykane; wszystkie jego
procesy potomne s± przejmowane przez proces 1, init, a jego proces macierzysty
otrzymuje sygna³
.BR SIGCHLD .
.LP
Warto¶æ
.I status
jest zwracana procesowi macierzystemu jako kod zakoñczenia procesu
wywo³uj±cego tê funkcjê i mo¿e zostaæ odczytana za pomoc± jednej z funkcji
z rodziny
.BR wait .
.LP
Funkcja
.B _Exit
jest równowa¿na
.BR _exit .
.SH "WARTO¦Æ ZWRACANA"
Funkcje te nigdy nie powracaj±.
.SH "ZGODNE Z"
SVr4, SVID, POSIX, X/OPEN, BSD 4.3
Funkcja \fI_Exit()\fP zosta³a wprowadzona przez C99.
.SH UWAGI
Efekty zakoñczenia, transmisja kodu zakoñczenia, procesy zombie, przesy³anie
sygna³ów itp. zosta³y przedyskutowane w
.BR exit (3).
.LP
Funkcja
.B _exit
jest podobna do \fBexit()\fP, ale nie wywo³uje ¿adnych funkcji
zarejestrowanych za pomoc± funkcji ANSI C
.B atexit
ani ¿adnych zarejestrowanych funkcji obs³ugi sygna³ów. To, czy wypró¿nia ona
standardowe bufory we/wy i usuwa pliki tymczasowe utworzone za pomoc±
.BR tmpfile (3),
zale¿y od implementacji.
Z drugiej strony,
.B _exit
nie zamyka otwartych deskryptorów plików, co mo¿e spowodowaæ nieoczekiwane
opó¼nienia podczas oczekiwania na zakoñczenie od³o¿onych zapisów. Je¶li
opó¼nienia te s± niepo¿±dane, to mo¿e byæ przydatne wywo³anie funkcji
podobnych do \fItcflush()\fP przed wywo³aniem \fB_exit()\fP.
To, czy jakiekolwiek od³o¿one we/wy zostanie anulowane i które z nich mog±
zostaæ anulowane podczas \fB_exit()\fP, zale¿y od iplementacji.
.SH ZOBACZ TAK¯E
.BR fork (2),
.BR execve (2),
.BR waitpid (2),
.BR wait4 (2),
.BR kill (2),
.BR wait (2),
.BR exit (3),
.BR termios (3)
