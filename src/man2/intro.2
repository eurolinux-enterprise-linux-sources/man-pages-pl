.\" {PTM/AB/0.1/25-07-1999/"intro - wprowadzenie do wywo³añ systemowych"}
.\" translated by Adam Byrtek <alpha@irc.pl>
.\" Last update: A. Krzysztofowicz <ankry@mif.pg.gda.pl>, Jan 2002,
.\"              manpages 1.47; added translator list
.\" ------------
.\"
.\" Copyright (c) 1993 Michael Haardt (michael@moria.de),
.\"   Fri Apr  2 11:32:09 MET DST 1993
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Tue Jul  6 12:42:46 MDT 1993 <dminer@nyx.cs.du.edu>
.\" Added "Calling Directly" and supporting paragraphs
.\"
.\" Modified Sat Jul 24 15:19:12 1993 by Rik Faith <faith@cs.unc.edu>
.\"
.\" Modified 21 Aug 1994 by Michael Chastain <mec@shell.portal.com>:
.\"   Added explanation of arg stacking when 6 or more args.
.\"
.\" Modified 10 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" ------------
.\"
.TH INTRO 2 1996-05-22 "Linux 1.2.13" "Podrêcznik programisty Linuksa"
.SH NAZWA
intro \- wprowadzenie do wywo³añ systemowych
.SH OPIS
Ten dzia³ opisuje wywo³ania systemowe Linuksa. Listê wszystkich 164 wywo³añ
systemowych obecnych w j±drze 2.0 Linuksa mo¿na znale¼æ w syscalls(2).
.SS "Wywo³ywanie bezpo¶rednie"
W wiêkszo¶ci przypadków nie jest konieczne wywo³ywanie wywo³añ systemowych
bezpo¶rednio, ale czasem zdarza siê, ¿e jakie¶ przydatna funkcja systemowa
nie jest zaimplementowana w standardowej bibliotece C.
.SS "Sk³adnia"
.B #include <linux/unistd.h>

Makro _syscall

¿±dane wywo³anie systemowe

.SS Konfiguracja
Wa¿n± rzecz±, któr± nale¿y wiedzieæ o wywo³aniu systemowym jest jego prototyp.
Trzeba wiedzieæ ile posiada ono argumentów, jakie s± ich typy i jaki typ
zwraca. Istnieje sze¶æ makrodefinicji u³atwiaj±cych bezpo¶rednie wywo³ania
systemu. Ich sk³adnia jest nastêpuj±ca:
.sp
.RS
.RI _syscall X ( type , name , type1 , arg1 , type2 , arg2 ,...)
.RS
.HP
gdzie \fIX\fP jest z zakresu 0\(en5 i oznacza liczbê argumentów wymaganych
przez wywo³anie systemowe
.HP
\fItype\fP jest zwracanym typem
.HP
\fIname\fP jest nazw± wywo³ania systemowego
.HP
\fItypeN\fP jest typem N-tego argumentu
.HP
\fIargN\fP jest nazw± N-tego argumentu
.RE
.RE
.sp
Te makrodefinicje tworz± funkcjê o nazwie \fIname\fP z podanymi argumentami.
Po zawarciu _syscall() w pliku ¼ród³owym, mo¿na wywo³ywaæ wywo³anie systemowe
poprzez \fIname\fP.
.SH PRZYK£AD
.nf
.sp
#include <stdio.h>
#include <linux/unistd.h>	/* dla makra _syscallX */
#include <linux/kernel.h>	/* dla struktury sysinfo*/

_syscall1(int, sysinfo, struct sysinfo *, info);

/* Uwaga: je¶li kopiowanie odbywa siê bezpo¶rednio ze ¼ród³a nroff,
nale¿y pamiêtaæ, aby usun±æ dodatkowe znaki `\' z printf */

int main(void)
{
	struct sysinfo s_info;
	int error;

	error = sysinfo(&s_info);
	printf("code error = %d\\n", error);
        printf("Uptime = %ds\\nLoad: 1 min %d / 5 min %d / 15 min %d\\n"
                "RAM: total %d / free %d / shared %d\\n"
                "Memory in buffers = %d\\nSwap: total %d / free %d\\n"
                "Number of processes = %d\\n",
		s_info.uptime, s_info.loads[0],
		s_info.loads[1], s_info.loads[2],
		s_info.totalram, s_info.freeram,
		s_info.sharedram, s_info.bufferram,
		s_info.totalswap, s_info.freeswap,
		s_info.procs);
	return(0);
}
.fi
.SH Przyk³adowe wyj¶cie
.nf
code error = 0
uptime = 502034s
Load: 1 min 13376 / 5 min 5504 / 15 min 1152
RAM: total 15343616 / free 827392 / shared 8237056
Memory in buffers = 5066752
Swap: total 27881472 / free 24698880
Number of processes = 40
.fi
.SH UWAGI
Makra _syscall() NIE tworz± prototypu. Mo¿e istnieæ potrzega stworzenia go
samodzielnie, szczególnie w przypadku korzystania z C++.
.sp
Wywo³ania systemowe nie musz± koniecznie zwracaæ jedynie dodatnich lub
ujemnych kodów b³êdu. Trzeba przeczytaæ ¼ród³o, aby upewniæ siê, jak zwracaj±
one b³êdy. Zazwyczaj jest to standardowy kod b³êdu ze znakiem ujemnym,
np. \-\fBEPERM\fP. Makra _syscall() zwracaj± wynik \fIr\fP wywo³ania
systemowego je¶li \fIr\fP jest nieujemne, ale zwracaj± \-1 i zmieniaj±
warto¶æ \fIerrno\fP na \-\fIr\fP je¶li \fIr\fP jest ujemne. Kody b³êdów
mo¿na znale¼æ w 
.BR errno (3).
.sp
Niektóre wywo³ania systemowe, takie jak
.BR mmap ,
wymagaj± wiêcej ni¿ piêciu argumentów. Jest to osi±gane poprzez umieszczanie
argumentów na stosie i przekazywanie wska¼nika do bloku argumentów.
.sp
Podczas definiowania wywo³ania systemowego, typy argumentów MUSZ¡ zostaæ
przekazane przez warto¶æ lub przez wska¼nik (dla aregatów takich jak
struktury).
.SH "ZGODNE Z"
W tym rozdziale wystêpuj± odwo³ania do ró¿nych wersji Uniksa i standardów
realizowane poprzez skróty. S± to:
.TP
SVr4
System V Release 4 Unix, opisane w "Programmer's Reference
Manual: Operating System API (Intel processors)" (Prentice-Hall
1992, ISBN 0-13-951294-2)
.TP
SVID
System V Interface Definition, opisane w "The System V Interface
Definition, Fourth Edition".
.TP
POSIX.1
IEEE 1003.1-1990 part 1, aka ISO/IEC 9945-1:1990s, inaczej "IEEE Portable
Operating System Interface for Computing Environments", wyja¶nione w 
"POSIX Programmer's Guide" Donalda Lewine'a (O'Reilly & Associates,
Inc., 1991, ISBN 0-937175-73-0.
.TP
POSIX.1b
IEEE Std 1003.1b-1993 (POSIX.1b standard) opisuj±cy mechanizmy czasu
rzeczywistego w przeno¶nych systemach operacyjnych, inaczej ISO/IEC
9945-1:1996, wyja¶nione w  "Programming for the real world \- POSIX.4"
autorstwa Billa O. Gallmeistera (O'Reilly & Associates, Inc. ISBN
1-56592-074-0).
.TP
SUS, SUSv2
Single Unix Specification.
(Rozwijane przez X/Open i The Open Group. Zobacz tak¿e
http://www.UNIX-systems.org/version2/ .)
.TP
4.3BSD/4.4BSD
Dystrybucje 4.3 i 4.4 systemu Berkeley Unix. 4.4BSD jest zgodny w
górê w stosunku do 4.3.
.TP
V7
Version 7, potomek systemów Unix z Bell Labs.
.SH PLIKI
.I /usr/include/linux/unistd.h
.SH "ZOBACZ TAK¯E"
.BR errno (3)
.SH AUTORZY
Nazwiska autorów i warunki kopiowania znajdziesz w nag³ówku strony man.
Mog± byæ one odmienne w zale¿no¶ci od strony.
.PP
W t³umaczeniu stron podrêcznika man z pakietu man-pages, nale¿±cych do sekcji
2, w ramach Projektu T³umaczenia Manuali <http://ptm.linux.pl> brali udzia³
(kolejno¶æ alfabetyczna):
.IP
Przemek Borys <pborys@dione.ids.pl>
.IP
Adam Byrtek <alpha@irc.pl>
.IP
Andrzej Krzysztofowicz <ankry@mif.pg.gda.pl>
.IP
Rafa³ Lewczuk <R.Lewczuk@elka.pw.edu.pl>
.IP
Robert Luberda <robert@debian.org>
