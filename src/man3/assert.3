.\" {PTM/AB/0.1/12-12-1998/"assert - przerwanie pracy programu jeśli wyrażenie jest fałszywe"}
.\" tłumaczenie Adam Byrtek <abyrtek@priv.onet.pl>
.\" Aktualizacja do man-pages 1.53 - A. Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" ------------
.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 21:42:42 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Tue Oct 22 23:44:11 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" ------------
.TH ASSERT 3 2002-08-25 "C99" "Podręcznik programisty Linuksa"
.SH NAZWA
assert \- przerwanie pracy programu jeśli wyrażenie jest fałszywe
.SH SKŁADNIA
.nf
.B #include <assert.h>
.sp
.BI "void assert(scalar " wyrazenie );
.fi
.SH OPIS
\fI Uwaga! To tłumaczenie może być nieaktualne!\fP
.PP
Jeśli w momencie włączania
.B <assert.h>
jest zdefiniowane makro
.BR NDEBUG ,
to makro
.B assert()
nie generuje żadnego kodu, więc w ogóle nic nie robi.
W przeciwnym przypadku makro
.B assert()
wypisuje komunikat na standardowym wyjściu i przerywa pracę programu poprzez
wywołanie
.B abort()
jeśli
.I wyrazenie
jest fałszywe (równe zeru).
.LP
Celem istnienia tego makra jest pomoc programiście w znalezieniu usterek
# czy polskie locale tłumaczy ten komunikat ?
w jego programie. Komunikat "assertion failed in file foo.c, function
do_bar(), line 1287" jest bezużyteczny dla użytkownika.
.SH "WARTOŚĆ ZWRACANA"
Nie jest zwracana żadna wartość.
.SH "ZGODNE Z"
ISO9899 (ANSI C). W standardzie z roku 1990 od wyrażenia
.I wyrazenie
wymaga się, aby było typu
.B int
a zachowanie funkcji jest nieokreślone, gdy tak nie jest.
Jednakże w standardzie z roku 1999 może ono być dowolnego typu skalarnego.
.\" See Defect Report 107 for more details.
.SH BŁĘDY
.B assert()
jest zaimplementowana jako makro. Jeśli testowane wyrażenie ma jakieś efekty
uboczne, zachowanie programu będzie różne w zależności od
tego, czy zdefiniowano makrodefinicję
.BR NDEBUG
Może to prowadzić do usterek Heisena, które nie występują przy włączonym
odpluskwianiu.
.SH "ZOBACZ TAKŻE"
.BR exit (3),
.BR abort (3),
.BR assert_perror (3)
.SH "INFORMACJE O TŁUMACZENIU"
Powyższe tłumaczenie pochodzi z nieistniejącego już Projektu Tłumaczenia Manuali i 
\fImoże nie być aktualne\fR. W razie zauważenia różnic między powyższym opisem
a rzeczywistym zachowaniem opisywanego programu lub funkcji, prosimy o zapoznanie 
się z oryginalną (angielską) wersją strony podręcznika za pomocą polecenia:
.IP
man \-\-locale=C 3 assert
.PP
Prosimy o pomoc w aktualizacji stron man \- więcej informacji można znaleźć pod
adresem http://sourceforge.net/projects/manpages\-pl/.
