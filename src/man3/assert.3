.\" {PTM/AB/0.1/12-12-1998/"assert - przerwanie pracy programu je¶li wyra¿enie jest fa³szywe"}
.\" t³umaczenie Adam Byrtek <abyrtek@priv.onet.pl>
.\" Aktualizacja do man-pages 1.53 - A. Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" ------------
.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 21:42:42 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Tue Oct 22 23:44:11 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" ------------
.TH ASSERT 3 2002-08-25 "C99" "Podrêcznik programisty Linuksa"
.SH NAZWA
assert \- przerwanie pracy programu je¶li wyra¿enie jest fa³szywe
.SH SK£ADNIA
.nf
.B #include <assert.h>
.sp
.BI "void assert(scalar " wyrazenie );
.fi
.SH OPIS
Je¶li w momencie w³±czania
.B <assert.h>
jest zdefiniowane makro
.BR NDEBUG ,
to makro
.B assert()
nie generuje ¿adnego kodu, wiêc w ogóle nic nie robi.
W przeciwnym przypadku makro
.B assert()
wypisuje komunikat na standardowym wyj¶ciu i przerywa pracê programu poprzez
wywo³anie
.B abort()
je¶li
.I wyrazenie
jest fa³szywe (równe zeru).
.LP
Celem istnienia tego makra jest pomoc programi¶cie w znalezieniu usterek
# czy polskie locale t³umaczy ten komunikat ?
w jego programie. Komunikat "assertion failed in file foo.c, function
do_bar(), line 1287" jest bezu¿yteczny dla u¿ytkownika.
.SH "WARTO¦Æ ZWRACANA"
Nie jest zwracana ¿adna warto¶æ.
.SH "ZGODNE Z"
ISO9899 (ANSI C). W standardzie z roku 1990 od wyra¿enia
.I wyrazenie
wymaga siê, aby by³o typu
.B int
a zachowanie funkcji jest nieokre¶lone, gdy tak nie jest.
Jednak¿e w standardzie z roku 1999 mo¿e ono byæ dowolnego typu skalarnego.
.\" See Defect Report 107 for more details.
.SH B£ÊDY
.B assert()
jest zaimplementowana jako makro. Je¶li testowane wyra¿enie ma jakie¶ efekty
uboczne, zachowanie programu bêdzie ró¿ne w zale¿no¶ci od
tego, czy zdefiniowano makrodefinicjê
.BR NDEBUG
Mo¿e to prowadziæ do usterek Heisena, które nie wystêpuj± przy w³±czonym
odpluskwianiu.
.SH "ZOBACZ TAK¯E"
.BR exit (3),
.BR abort (3),
.BR assert_perror (3)
