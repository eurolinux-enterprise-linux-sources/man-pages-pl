.\" 1999 PTM Przemek Borys
.\" aktualizacja do man-pages 1.45 - A. Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" --------
.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Wed Jul 28 11:12:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon May 13 23:08:50 1996 by Martin Schulze (joey@linux.de)
.\" Modified 11 May 1998 by Joseph S. Myers (jsm28@cam.ac.uk)
.\" Modified 990912 by aeb
.\" --------
.TH GLOB 3 1999-09-12 "GNU" "Podręcznik programisty Linuksa"
.SH NAZWA
glob, globfree \- znalezienie ścieżek odpowiadających wzorcowi, zwolnienie
pamięć z glob()
.SH SKŁADNIA
.nf
.B #include <glob.h>
.sp
.BI "int glob(const char *" pattern ", int " flags ,

.BI "         int " errfunc "(const char *" epath ", int " eerrno ),

.BI "         glob_t *" pglob );

.BI "void globfree(glob_t *" pglob );
.fi
.SH OPIS
\fI Uwaga! To tłumaczenie może być nieaktualne!\fP
.PP
Funkcja
.B glob()
przeszukuje wszystkie ścieżki odpowiadające wzorcowi
.IR pattern ,
stosując przy tym reguły takie, jakich użyłaby powłoka (zobacz
.BR glob (7)).
Nie jest dokonywane rozwinięcie tyldy ani podstawienie parametrów. Jeśli są
one potrzebne, to należy użyć
.BR wordexp (3).
.PP
Funkcja
.B globfree()
zwalnia obszar pamięci zaalokowany dynamicznie przez wcześniejsze wywołanie
funkcji
.BR glob() .
.PP
W wyniku wywołania
.B glob()
tworzona jest struktura, na którą wskazuje
.IR pglob ,
będący typu
.B glob_t
zadeklarowanego w
.B <glob.h>
i zawierającego następujące elementy zdefiniowane przez POSIX.2 (mogą też
występować dodatkowe, ale jako rozszerzenie):
.PP
.br
.nf
.in 10
typedef struct
{
.in 14
    size_t gl_pathc;    /* Liczba odpowiadających dotąd ścieżek  */
    char **gl_pathv;    /* Lista odpowiadających ścieżek.  */
    size_t gl_offs;     /* Sloty do rezerwowania w `gl_pathv'.  */
.in 10
} glob_t;
.fi
.PP
Wyniki są zachowywane w dynamicznie przydzielanym obszarze pamięci.
.PP
Parametr
.I flags
tworzy bitowe OR zera lub więcej następujących symboli stałych modyfikujących
zachowanie
.BR glob() :
.TP
.B GLOB_ERR
oznacza, że należy powrócić po błędzie odczytu (np. gdy katalog nie ma praw
odczytu),
.TP
.B GLOB_MARK
oznacza dodawanie ukośnika do każdej ścieżki, która odpowiada katalogowi,
.TP
.B GLOB_NOSORT
oznacza, że zwracane ścieżki nie mają być sortowane (domyślnie są),
.TP
.B GLOB_DOOFFS
oznacza, że sloty
.I pglob->gl_offs
będą rezerwowane na początku listy napisów w
.IR pglob->pathv ,
.TP
.B GLOB_NOCHECK
oznacza, że jeśli żaden wzorzec nie odpowiada, zwracany jest wzorzec
oryginalny,
.TP
.B GLOB_APPEND
oznacza, że należy doklejać wyniki do wyników poprzedniego wywołania. Nie
należy ustawiać tej flagi przy pierwszym wywołaniu
.BR glob() .
.TP
.B GLOB_NOESCAPE
oznacza, że metaznaki nie mogą być cytowane odwrotnymi ukośnikami,
.PP
Parametr flags może również zawierać następujące znaczniki, będące
rozszerzeniami GNU nie definiowanymi przez POSIX.2:
.TP
.B GLOB_PERIOD
oznacza, że początkowa kropka może być dopasowana metaznakiem,
.PP
.B GLOB_ALTDIRFUNC
oznacza, że przy dostępie do systemy plików zamiast zwykłych funkcji
bibliotecznych używane są funkcje alternatywne
.IR pglob->gl_closedir ,
.IR pglob->gl_readdir ,
.IR pglob->gl_opendir ,
.IR pglob->gl_lstat i
.IR pglob->gl_stat ,
.TP
.B GLOB_BRACE
oznacza, że rozwijane są wyrażenia nawiasowe \fB{a,b}\fR w stylu
.BR csh (1),
.TP
.B GLOB_NOMAGIC
oznacza, że wzorzec jest zwracany, gdy nie zawiera metaznaków,
.TP
.B GLOB_TILDE
oznacza, że przeprowadzane rozwinięcie tyldy, a
.TP
.B GLOB_ONLYDIR
oznacza, że dopasowywane są wyłącznie katalogi.
.PP
Jeśli
.I errfunc
nie jest równe
.BR NULL ,
to w wypadku błędu będzie ono wywołane z argumentami
.IR epath ,
czyli wskaźnikiem do ścieżki, na której coś się nie powiodło i z
.IR eerrno ,
przechowującym wartość
.IR errno ,
zwróconą przez wywołanie do
.BR opendir() ", " readdir() " lub " stat() .
Jeśli
.I errfunc
zwraca wartość niezerową lub jeśli ustawiony jest znacznik
.BR GLOB_ERR , 
.B glob()
zakończy działanie po wywołaniu funkcji
.IR errfunc .
.PP
Po pomyślnym zakończeniu,
.I pglob->gl_pathc
zawiera liczbę pasujących ścieżek, a
.I pglob->gl_pathv
wskaźnik do listy trafionych ścieżek. Pierwszy wskaźnik za ostatnią ścieżką
ma wartość
.BR NULL .
.PP
Możliwe jest wywoływanie
.B glob()
wielokrotnie. W takim wypadku, należy w następnych wywołaniach ustawić w
.I flags
znacznik
.BR GLOB_APPEND .
.PP
Jako rozszerzenie GNU,
.I pglob->gl_flags
jest ustawiane jako \fBor\fR podanych znaczników i
.BR GLOB_MAGCHAR ,
gdy występują metaznaki.
.SH "WARTOŚĆ ZWRACANA"
Po pomyślnym zakończeniu
.B glob()
zwraca zero.
Inne możliwe wartości to:
.TP
.B GLOB_NOSPACE
przy braku pamięci,
.TP
.B GLOB_ABORTED
przy błędzie odczytu i
.TP
.B GLOB_NOMATCH
gdy niczego nie dopasowano.
.SH PRZYKŁADY
Jednym z przykładów użycia jest następujący kod, emulujący wpisanie

.B ls -l *.c ../*.c

w powłoce.
.nf
.in 10

glob_t globbuf;

globbuf.gl_offs = 2;
glob("*.c", GLOB_DOOFFS, NULL, &globbuf);
glob("../*.c", GLOB_DOOFFS | GLOB_APPEND, NULL, &globbuf);
globbuf.gl_pathv[0] = "ls";
globbuf.gl_pathv[1] = "\-l";
execvp("ls", &globbuf.gl_pathv[0]);
.fi
.SH "ZGODNE Z"
POSIX.2
.SH BŁĘDY
Funkcja
.B glob()
może zawieść z powodu błędu wywołanych przez nią funkcji, takich jak
.BR malloc() " czy " opendir() .
Wywołania te zapiszą kod błędu w
.IR errno .
.SH UWAGI
Elementy
.I gl_pathc
i
.I gl_offs
struktury są w glibc 2.1 zadeklarowane jako
.BR size_t ,
jak powinno być zgodnie z POSIX.2,
ale są zadeklarowane jako
.B int
w libc4, libc5 i glibc 2.0.
.SH "ZOBACZ TAKŻE"
.BR ls (1),
.BR sh (1),
.BR stat (2),
.BR exec (3),
.BR malloc (3),
.BR opendir (3),
.BR readdir (3),
.BR wordexp (3),
.BR glob (7)
.SH "INFORMACJE O TŁUMACZENIU"
Powyższe tłumaczenie pochodzi z nieistniejącego już Projektu Tłumaczenia Manuali i 
\fImoże nie być aktualne\fR. W razie zauważenia różnic między powyższym opisem
a rzeczywistym zachowaniem opisywanego programu lub funkcji, prosimy o zapoznanie 
się z oryginalną (angielską) wersją strony podręcznika za pomocą polecenia:
.IP
man \-\-locale=C 3 glob
.PP
Prosimy o pomoc w aktualizacji stron man \- więcej informacji można znaleźć pod
adresem http://sourceforge.net/projects/manpages\-pl/.
