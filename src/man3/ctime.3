.\" {PTM/AB/0.1/15-12-1998/"asctime, ctime, gmtime, localtime, mktime - konwersja binarnej daty i czasu na format ASCII"}
.\" t³umaczenie Adam Byrtek <abyrtek@priv.onet.pl>
.\" Aktualizacja do man-pages 1.47 - A. Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" ------------
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:49:27 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Apr 26 12:38:55 MET DST 1996 by Martin Schulze (joey@linux.de)
.\" Modified 2001-11-13, aeb
.\" Modified 2001-12-13, joey, aeb
.\"
.\" ------------
.TH CTIME 3 2001-12-13 "" "Podrêcznik programisty Linuksa"
.SH NAZWA
asctime, ctime, gmtime, localtime, mktime \- konwersja daty i czasu
do postaci czasu roz³o¿onego lub ASCII
.SH SK£ADNIA
.nf
.B #include <time.h>
.sp
.BI "char *asctime(const struct tm *" tm );
.br
.BI "char *asctime_r(const struct tm *" tm ", char *" buf );
.sp
.BI "char *ctime(const time_t *" timep );
.br
.BI "char *ctime_r(const time_t *" timep ", char *" buf );
.sp
.BI "struct tm *gmtime(const time_t *" timep );
.br
.BI "struct tm *gmtime_r(const time_t *" timep ", struct tm *" result );
.sp
.BI "struct tm *localtime(const time_t *" timep );
.br
.BI "struct tm *localtime_r(const time_t *" timep ", struct tm *" result );
.sp
.BI "time_t mktime(struct tm *" tm );
.fi
.SH OPIS
Funkcje \fBctime()\fP, \fBgmtime()\fP oraz \fBlocaltime()\fP przyjmuj±
argument typu \fItime_t\fP, reprezentuj±cy czas kalendarzowy.
Zinterpretowany jako bezwzglêdna warto¶æ czasu, okre¶la on ilo¶æ sekund,
jakie up³ynê³y od godziny 00:00:00 1 stycznia 1970 czasu Coordinated
Universal Time (UTC).
.PP
Funkcje \fBasctime()\fP oraz \fBmktime()\fP przyjmuj± jako argument
czas roz³o¿ony, który jest reprezentacj± podzielon± na rok, miesi±c,
dzieñ itd.
.PP
Czas roz³o¿ony jest przechowywany w strukturze \fItm\fP, zdefiniowanej
w \fI<time.h>\fP nastêpuj±co:
.sp
.RS
.nf
.ne 11
.ta 8n 16n 32n
struct tm {
	int	tm_sec;			/* sekundy */
	int	tm_min;			/* minuty */
	int	tm_hour;		/* godziny */
	int	tm_mday;		/* dzieñ miesi±ca */
	int	tm_mon;			/* miesi±c */
	int	tm_year;		/* rok */
	int	tm_wday;		/* dzieñ tygodnia */
	int	tm_yday;		/* dzieñ roku */
	int	tm_isdst;		/* sezonowa zmiana czasu */
};
.ta
.fi
.RE
.PP
Elementy struktury \fItm\fP to:
.TP
.I tm_sec
Liczba sekund po pe³nej minucie, normalnie z zakresu od 0 do 59, ale mo¿e
wynosiæ nawet do 61, aby umo¿liwiæ sekundy przestêpne.
.TP
.I tm_min
Liczba minut po pe³nej godzinie, z zakresu od 0 do 59.
.TP
.I tm_hour
Liczba godzin po pó³nocy, z zakresu od 0 do 23.
.TP
.I tm_mday
Dzieñ tygodnia, z zakresu od 1 do 31.
.TP
.I tm_mon
Liczba miesiêcy od stycznia, z zakresu od 0 do 11.
.TP
.I tm_year
Liczba lat od 1900.
.TP
.I tm_wday
Liczba dni od niedzieli, z zakresu od 0 do 6.
.TP
.I tm_yday
Liczba dni od 1 stycznia, z zakresu od 0 do 365.
.TP
.I tm_isdst
Znacznik, który wskazuje, czy dla podanego czasu zosta³a przeprowadzona zmiana
czasu zimowy/letni. Je¶li warto¶æ ta jest dodatnia, to zmiana czasu zosta³a
przeprowadzona, je¶li wynosi zero - zmiany nie przeprowadzono, a je¶li jest
ujemna - oznacza to, ¿e informacja dotycz±ca zmiany czasu nie jest dostêpna.
.PP
Wywo³anie
.BI ctime( t )
jest równowa¿ne
.BI asctime(localtime( t )) \fR.
Przekszta³ca ono czas kalendarzowy \fIt\fP na ³añcuch o postaci
.sp
.RS
"¶ro sty 30 21:49:08 1993\\n"
.RE
.sp
Skróty dni tygodnia to `nie', `pon', `wto', `¶ro', `czw', `pi±' i `sob'.
Skróty miesiêcy to `sty', `lut', `mar', `kwi', `maj', `cze', `lip', `sie',
`wrz', `pa¼', `lis' i `gru'. Zwracany jest wska¼nik do statycznego ³añcucha,
który to ³añcuch mo¿e zostaæ nadpisany przy kolejnym wywo³aniu dowolnej
funkcji daty i czasu. Funkcja zapisuje równie¿ informacje na temat aktualnej
strefy czasowej do zewnêtrznej zmiennej \fItzname\fP (patrz
.BR tzset (3)).
Wielowej¶ciowa wersja tej funkcji, \fBctime_r()\fP, robi to samo, ale
zapisuje ³añcuch w podanym przez u¿ytkownika buforze o d³ugo¶ci co
najmniej 26. Nie musi ona ustawiaæ \fItzname\fP.
.PP
Funkcja \fBgmtime()\fP przekszta³ca czas kalendarzowy \fItimep\fP na czas
roz³o¿ony, wyra¿ony w Coordinated Universal Time (UTC). Mo¿e ona zwróciæ
warto¶æ NULL, je¶li rok nie daje siê zapisaæ jako liczba ca³kowita. Zwracany
jest wska¼nik do statycznej struktury, która to struktura mo¿e zostaæ
nadpisana przy kolejnym wywo³aniu dowolnej funkcji daty i czasu.
Funkcja \fBgmtime_r()\fP robi to samo, ale zapisuje dane do struktury podanej
przez u¿ytkownika. Nie musi ona ustawiaæ \fItzname\fP.
.PP
Funkcja \fBlocaltime()\fP przekszta³ca czas kalendarzowy \fItimep\fP na czas
roz³o¿ony, wyra¿ony wzglêdem wybranej przez u¿ytkownika strefy czasowej.
Funkcja dzia³a tak, jakby wywo³ywa³a
.BR tzset (3)
i wpisywa³a do zewnêtrznej zmiennej \fItzname\fP informacje na temat
aktualnej strefy czasowej, do \fItimezone\fP - ró¿nicê w sekundach pomiêdzy
Coordinated Universal Time (UTC) a lokalnym czasem standardowym,
a do \fIdaylight\fP - warto¶æ niezerow± je¶li przez jak±¶ czê¶æ roku
obowi±zuje inny czas ni¿ podany (zimowy/letni).
Zwracany jest wska¼nik do statycznej struktury, która to struktura mo¿e zostaæ
nadpisana przy kolejnym wywo³aniu dowolnej funkcji daty i czasu.
Funkcja \fBlocaltime_r()\fP robi to samo, ale zapisuje dane do struktury
podanej przez u¿ytkownika. Nie musi ona ustawiaæ \fItzname\fP.
.PP
Funkcja \fBasctime()\fP przekszta³ca czas roz³o¿ony \fItm\fP na ³añcuch
tego samego formatu, co \fBctime()\fP. Zwracany jest wska¼nik do statycznego
³añcucha, który to ³añcuch mo¿e zostaæ nadpisany przy kolejnym wywo³aniu
dowolnej funkcji daty i czasu.
Funkcja \fBasctime_r()\fP robi to samo, ale zapisuje ³añcuch w podanym przez
u¿ytkownika buforze o d³ugo¶ci co najmniej 26.
.PP
Funkcja \fBmktime()\fP przekszta³ca strukturê czasu roz³o¿onego, wyra¿on± w
czasie lokalnym, na czas kalendarzowy. Funkcja ignoruje warto¶ci elementów
\fItm_wday\fP i \fItm_yday\fP i oblicza je ponownie na podstawie innych
informacji ze struktury czasu roz³o¿onego. Je¶li elementy struktury maj±
warto¶ci spoza zakresu warto¶ci dopuszczalnych, to zostana znormalizowane
(w taki sposób, ¿e np. 40 pa¼dziernika zostanie zamieniony na 9 listopada).
Wywo³anie \fBmktime()\fP zapisuje równie¿ informacje na temat aktualnej
strefy czasowej do zewnêtrznej zmiennej \fItzname\fP. Je¶li podany czas
roz³o¿ony nie mo¿e zostaæ przedstawiony jako czas kalendarzowy (liczba
sekund od pocz±tku epoki), \fBmktime()\fP zwraca warto¶æ (time_t)(\-1)
i nie zmienia warto¶ci elementów \fItm_wday\fP i \fItm_yday\fP struktury
czasu roz³o¿onego.
.SH "WARTO¦Æ ZWRACANA"
Ka¿da z tych funkcji zwraca opisan± powy¿ej warto¶æ lub NULL
(\-1 w przypadku \fBmktime()\fP) w razie wyst±pienia b³êdu.
.SH UWAGI
Nastêpuj±ce cztery funkcje
.BR acstime() ,
.BR ctime() ,
.B gmtime()
i
.B localtime()
zwracaj± wska¼nik do statycznych danych i w zwi±zku z tym nie s±
przystosowane do wielow±tkowo¶ci.
Wielow±tkowe wersje
.BR acstime_r() ,
.BR ctime_r() ,
.B gmtime_r()
i
.BR localtime_r()
s± wymienione w SUSv2 i dostêpne pocz±wszy od libc 5.2.5.
.LP
Wersja struktury tm zawarta w glibc posiada dodatkowe pola
.sp
.RS
.nf
long tm_gmtoff;           /* Sekundy na wschód od UTC */
const char *tm_tm_zone;   /* Skrót strefy czasowej */
.fi
.RE
.sp
zdefiniowane, gdy _BSD_SOURCE jest ustawione przed w³±czeniem
.IR <time.h> .
Jest to rozszerzenie BSD, obecnie w 4.3BSD-Reno.
.SH "ZGODNE Z"
SVID 3, POSIX, BSD 4.3, ISO 9899
.SH "ZOBACZ TAK¯E"
.BR date (1),
.BR gettimeofday (2),
.BR newctime (3),
.BR time (2),
.BR utime (2),
.BR clock (3),
.BR difftime (3),
.BR strftime (3),
.BR strptime (3),
.BR tzset (3)
