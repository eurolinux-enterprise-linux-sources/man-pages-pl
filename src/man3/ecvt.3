.\" {PTM/AB/0.1/15-12-1998/"ecvt, fcvt - konwersja liczby zmiennoprzecinkowej na ³añcuch"}
.\" t³umaczenie Adam Byrtek (abyrtek@priv.onet.pl)
.\" Aktualizacja do man-pages 1.53 - A. Krzysztofowicz <ankry@mif.pg.gda.pl>
.\" ------------
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:40:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Jun 25 12:10:47 1999 by Andries Brouwer (aeb@cwi.nl)
.\" ------------
.TH ECVT 3 1999-06-25 "" "Podrêcznik programisty Linuksa"
.SH NAZWA
ecvt, fcvt \- konwersja liczby zmiennoprzecinkowej na ³añcuch
.SH SK£ADNIA
.B #include <stdlib.h>
.sp
.BI "char *ecvt(double " number ", int " ndigits ", int *" decpt ,
.BI "int *" sign );
.sp
.BI "char *fcvt(double " number ", int " ndigits ", int *" decpt ,
.BI "int *" sign );
.SH OPIS
Funkcja \fBecvt()\fP przekszta³ca liczbê \fInumber\fP na ³añcuch cyfr
\fIndigits\fP (gdzie \fIndigits\fP jest ograniczone do zale¿nej od systemu
warto¶ci okre¶lonej przez precyzjê typu double) zakoñczony znakiem NUL
i zwraca wska¼nik do tego ³añcucha. Najbardziej znacz±ca cyfra jest ró¿na
od zera, chyba ¿e
.I number
wynosi zero. Najmniej znacz±ca cyfra jest zaokr±glana.
£añcuch nie zawiera kropki dziesiêtnej, jednak pozycja kropki dziesiêtnej
wzglêdem pocz±tku ³añcucha znajduje siê w zmiennej *\fIdecpt\fP. Ujemna
warto¶æ *\fIdecpt\fP oznacza, ¿e kropka dziesiêtna znajduje siê na lewo od
pocz±tku ³añcucha. Je¶li znak liczby \fInumber\fP jest ujemny, to *\fIsign\fP
przyjmuje warto¶æ ró¿n± od zera, a w przeciwnym przypadku 0. Gdy
.I number
jest zerem, nie jest okre¶lone czy *\fIdecpt\fP bêdzie równe 0 czy 1.
.PP
Funkcja \fBfcvt()\fP dzia³a tak samo jak \fBecvt()\fP z tym wyj±tkiem, ¿e
\fIndigits\fP okre¶la liczbê cyfr po kropce dziesiêtnej.
.SH "WARTO¦Æ ZWRACANA"
Zarówno funkcja \fBecvt()\fP jak i \fBfcvt()\fP zwracaj± wska¼nik do
statycznego ³añcucha zawieraj±cego reprezentacjê ASCII liczby \fInumber\fP.
£añcuch statyczny jest nadpisywany po ka¿dym wywo³aniu \fBecvt()\fP lub
\fBfcvt()\fP.
.SH UWAGI
Funkcje te s± przestarza³e. Zlecane jest u¿ywania
.IR sprintf ()
zamiast nich.
Linuksowe libc4 i libc5 okre¶la³y typ
.I ndigits
jako
.BR size_t .
Nie wszystkie locale u¿ywaj± kropki jako znaku podstawy (`kropka dziesiêtna').
.SH "ZGODNE Z"
SysVR2, XPG2
.SH "ZOBACZ TAK¯E"
.BR ecvt_r (3),
.BR gcvt (3),
.BR qecvt (3),
.BR setlocale (3),
.BR sprintf (3)
